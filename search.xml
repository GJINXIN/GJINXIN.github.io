<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Python爬虫解析多级嵌套json</title>
    <url>/2020/03/03/%E8%82%BA%E7%82%8E%E6%95%B0%E6%8D%AE%E7%88%AC%E5%8F%96%E5%B9%B6%E8%A7%A3%E6%9E%90/</url>
    <content><![CDATA[<h3 id="Python爬虫解析多级嵌套json"><a href="#Python爬虫解析多级嵌套json" class="headerlink" title="Python爬虫解析多级嵌套json"></a>Python爬虫解析多级嵌套json</h3><p>最近刚接触Python爬虫，正好最近肺炎在全国蔓延，所以准备从网站爬取肺炎实时数据，并解析自己想要的数据。获取json数据网址为  <a href="https://m.look.360.cn/events/feiyan" target="_blank" rel="noopener">https://m.look.360.cn/events/feiyan</a></p>
<p>爬取网址：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    url=<span class="string">'https://m.look.360.cn/events/feiyan'</span></span><br><span class="line">    headers = &#123;<span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; WOW64) 		    AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36 QIHU 360EE'</span>&#125;</span><br><span class="line">    parse_page(url)</span><br></pre></td></tr></table></figure>

<p>解析并保存json格式文件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">state &#x3D; json.loads(response.content)</span><br><span class="line">with open(&quot;feiyan.json&quot;, &quot;w&quot;,encoding&#x3D;&#39;utf-8&#39;) as f:</span><br><span class="line">	f.write(json.dumps(state,indent&#x3D;2,ensure_ascii&#x3D;False))</span><br><span class="line">    print(&quot;保存成功&quot;)</span><br></pre></td></tr></table></figure>

<p>获取json文件后发现为嵌套格式，具体格式大家可以打开上方网址查看：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line"> &quot;data&quot;:[</span><br><span class="line"> 		&#123;</span><br><span class="line"> 		 &quot;data&quot;:&#123;省份&#125;</span><br><span class="line">         &quot;citys&quot;:[</span><br><span class="line">         		  &#123;城市&#125;&#123;&#125;.....</span><br><span class="line">         		 ]		 </span><br><span class="line"> 		&#125;</span><br><span class="line"> 		&#123;</span><br><span class="line"> 		 &quot;data&quot;:&#123;省份&#125;</span><br><span class="line">         &quot;citys&quot;:[</span><br><span class="line">         		  &#123;城市&#125;&#123;&#125;.....</span><br><span class="line">         		 ]		 </span><br><span class="line"> 		&#125;</span><br><span class="line"> &quot;country&quot;:[</span><br><span class="line"> 			&#123;其他国家&#125;</span><br><span class="line"> 		   ]	</span><br><span class="line"> 		]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="%5Cimages%5Cfeiyan1.png" alt="feiyan1"></p>
<h4 id="解析数据"><a href="#解析数据" class="headerlink" title="解析数据"></a>解析数据</h4><p>因为我只想获取各个城市的名称、感染人数、治愈人数和死亡人数，所以需要嵌套循环来获取并逐个输出。代码如下：</p>
<p>省级数据获取：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">provincename = state[<span class="string">'data'</span>][i][<span class="string">'data'</span>][<span class="string">'provinceName'</span>] </span><br><span class="line">confirmedCount = state[<span class="string">'data'</span>][i][<span class="string">'data'</span>][<span class="string">'confirmedCount'</span>]</span><br><span class="line">curedCount = state[<span class="string">'data'</span>][i][<span class="string">'data'</span>][<span class="string">'curedCount'</span>] </span><br><span class="line">deadCount = state[<span class="string">'data'</span>][i][<span class="string">'data'</span>][<span class="string">'deadCount'</span>]</span><br></pre></td></tr></table></figure>

<p>城市数据获取：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cityName = state[<span class="string">'data'</span>][i][<span class="string">'cities'</span>][j][<span class="string">'cityName'</span>]</span><br><span class="line">diagnosed = state[<span class="string">'data'</span>][i][<span class="string">'cities'</span>][j][<span class="string">'diagnosed'</span>]</span><br><span class="line">cured = state[<span class="string">'data'</span>][i][<span class="string">'cities'</span>][j][<span class="string">'cured'</span>]</span><br><span class="line">died = state[<span class="string">'data'</span>][i][<span class="string">'cities'</span>][j][<span class="string">'died'</span>]</span><br></pre></td></tr></table></figure>

<p>国外城市数据获取：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">countryname = state[<span class="string">'country'</span>][c][<span class="string">'provinceName'</span>]</span><br><span class="line">diagnosed = state[<span class="string">'country'</span>][c][<span class="string">'diagnosed'</span>]</span><br><span class="line">cured = state[<span class="string">'country'</span>][c][<span class="string">'cured'</span>]</span><br><span class="line">died = state[<span class="string">'country'</span>][c][<span class="string">'died'</span>]</span><br></pre></td></tr></table></figure>

<p>以上就是嵌套json解析格式。</p>
<p>输出效果：</p>
<p><img src="%5Cimages%5Cfeiyan2.png" alt="feiyan2"></p>
<p><strong>源码地址：</strong><a href="https://github.com/GJINXIN/python-web-scraping/blob/master/肺炎数据解析并存储.py" target="_blank" rel="noopener">github</a></p>
]]></content>
      <categories>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>爬虫</tag>
        <tag>json</tag>
      </tags>
  </entry>
  <entry>
    <title>About me</title>
    <url>/2020/03/02/about/</url>
    <content><![CDATA[<p>|  A coder，live in Hohhot，China</p>
<p>姓名：郭金鑫</p>
<p>现居：呼和浩特</p>
<p>GitHub：<a href="https://github.com/GJINXIN/" target="_blank" rel="noopener">GJINXIN</a></p>
<p>QQ：1782561167</p>
<p>微信：gjx1782561167</p>
<img src="\images\me.jpg" alt="Alt text" style="zoom:60%;" />]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>我的第一篇博客--洁癖Man</title>
    <url>/2020/03/02/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2--%E6%B4%81%E7%99%96Man/</url>
    <content><![CDATA[<p>​      以前在校期间用过博客园 <a href="https://www.cnblogs.com/GJIN/" target="_blank" rel="noopener">洁癖Man</a>，但因为没有养成良好的学习记录习惯，发表的博客不是太多，写的项目遇到的问题解决后都没有记录，而且项目还丢失了一部分。所以在github上搭建一个可以自定义，记录自己平常进步、项目与生活的一个个人博客，在记录自己的进步的同时，希望可以给他人带来一些帮助。</p>
<h2 id="目前已掌握的技能"><a href="#目前已掌握的技能" class="headerlink" title="目前已掌握的技能"></a>目前已掌握的技能</h2><h3 id="语言类"><a href="#语言类" class="headerlink" title="语言类"></a>语言类</h3><p>C、C++、Java、Python；</p>
<h3 id="Java-Web"><a href="#Java-Web" class="headerlink" title="Java Web"></a>Java Web</h3><p>JSP+Servlet+JDBC、网页开发；</p>
<h3 id="移动端"><a href="#移动端" class="headerlink" title="移动端"></a>移动端</h3><p>H5开发、Android开发、安卓混合开发、okhttp；</p>
<h3 id="常用工具类"><a href="#常用工具类" class="headerlink" title="常用工具类"></a>常用工具类</h3><p>IDEA、Eclipse、Android Studio、Wex5、Vscode、Navicat；</p>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>爬虫；</p>
<h2 id="已做项目"><a href="#已做项目" class="headerlink" title="已做项目"></a>已做项目</h2><h3 id="掌上医院系统-计算所试验室"><a href="#掌上医院系统-计算所试验室" class="headerlink" title="掌上医院系统 (计算所试验室)"></a>掌上医院系统 (计算所试验室)</h3><p>掌上医院系统是一个改变传统挂号和优化传统医疗程序的系统，可在网上进行挂号和健康咨询等，为患者合理安排时间，且可以查看医院简介和医生介绍，让患者深层次了解医院，是一个真正意义上的面相门诊全流程的移动医联平台，完全贴合医院就诊流程而设计，并且在提高患者满意度的前提下，也提高了医生的服务水平，从问诊出发，以消息通知为核心，覆盖门诊的就医流程，为问诊人提供便捷的门诊服务。</p>
<h3 id="海外留学生信息交流平台"><a href="#海外留学生信息交流平台" class="headerlink" title="海外留学生信息交流平台"></a>海外留学生信息交流平台</h3><p>为海外留学生打造的一个生活、学习交流平台，包括房屋车辆租赁、物品交易、学习交流、活动发布等功能的平台，包括移动端。</p>
<h3 id="公司工资管理系统"><a href="#公司工资管理系统" class="headerlink" title="公司工资管理系统"></a>公司工资管理系统</h3><h3 id="学生信息管理系统"><a href="#学生信息管理系统" class="headerlink" title="学生信息管理系统"></a>学生信息管理系统</h3><p> 后面会一直补充该篇博客，更新自己的技能掌握情况。</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
</search>
