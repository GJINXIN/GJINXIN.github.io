<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>前后端分离-后端简单增删改查编写</title>
    <url>/2021/01/29/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB-%E5%90%8E%E7%AB%AF%E7%AE%80%E5%8D%95%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E7%BC%96%E5%86%99/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="一、使用-generator-插件生成-pojo-和-mapper"><a href="#一、使用-generator-插件生成-pojo-和-mapper" class="headerlink" title="一、使用 generator 插件生成 pojo 和 mapper"></a>一、使用 generator 插件生成 pojo 和 mapper</h2><p>参考：<a href="https://nfreak-man.cn/2020/04/09/Mybatis配置generator插件/" target="_blank" rel="noopener">Mybatis配置generator插件</a></p>
<h3 id="pojo"><a href="#pojo" class="headerlink" title="pojo"></a>pojo</h3><p>使用lombok自动生成getter，setter和toString方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.Setter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="meta">@Setter</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Score</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String subject;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Float score;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String type;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Date tDate;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="二、Controller编写"><a href="#二、Controller编写" class="headerlink" title="二、Controller编写"></a>二、Controller编写</h2><h3 id="增删改查编写"><a href="#增删改查编写" class="headerlink" title="增删改查编写"></a>增删改查编写</h3><p>ResultDTO为json统一格式类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/score"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ScoresController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ScoresService scoresService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*添加成绩*/</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/addScore"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResultDTO <span class="title">addScore</span><span class="params">(@RequestBody Score score)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.scoresService.addScores(score);</span><br><span class="line">        <span class="keyword">return</span> ResultDTO.success();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*查询所有成绩*/</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/findScoreAll"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResultDTO <span class="title">findScoreAll</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">        List&lt;Score&gt; list = <span class="keyword">this</span>.scoresService.findScoreAll();</span><br><span class="line">        <span class="keyword">return</span> ResultDTO.success().add(<span class="string">"scorns"</span>, list);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*更新成绩*/</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/updateScore"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResultDTO <span class="title">updateScore</span><span class="params">(@RequestBody Score score)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.scoresService.modifyScore(score);</span><br><span class="line">        <span class="keyword">return</span> ResultDTO.success();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*删除成绩*/</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/deleteScore"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResultDTO <span class="title">deleteScore</span><span class="params">(@RequestBody Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.scoresService.dropScoreById(id);</span><br><span class="line">        <span class="keyword">return</span> ResultDTO.success();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="三、业务层编写"><a href="#三、业务层编写" class="headerlink" title="三、业务层编写"></a>三、业务层编写</h2><h3 id="ScoresServiceImpl"><a href="#ScoresServiceImpl" class="headerlink" title="ScoresServiceImpl"></a>ScoresServiceImpl</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*成绩管理业务层*/</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ScoresServiceImpl</span> <span class="keyword">implements</span> <span class="title">ScoresService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ScoreMapper scoreMapper;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*添加成绩*/</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addScores</span><span class="params">(Score score)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.scoreMapper.insert(score);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*查询全部成绩*/</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Score&gt; <span class="title">findScoreAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ScoreExample example = <span class="keyword">new</span> ScoreExample();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.scoreMapper.selectByExample(example);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*更新用户*/</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">modifyScore</span><span class="params">(Score score)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.scoreMapper.updateByPrimaryKey(score);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*删除操作*/</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dropScoreById</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.scoreMapper.deleteByPrimaryKey(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="四、json统一格式类"><a href="#四、json统一格式类" class="headerlink" title="四、json统一格式类"></a>四、json统一格式类</h2><h3 id="ResultDTO"><a href="#ResultDTO" class="headerlink" title="ResultDTO"></a>ResultDTO</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="meta">@Setter</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResultDTO</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer status;             <span class="comment">// 返回状态</span></span><br><span class="line">    <span class="keyword">private</span> String msg;                 <span class="comment">// 返回消息</span></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, Object&gt; body;   <span class="comment">// 返回数据</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isSuccess</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> status == <span class="number">200</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ResultDTO <span class="title">success</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResultDTO(<span class="number">200</span>, <span class="string">"OK"</span>, <span class="keyword">new</span> LinkedHashMap&lt;&gt;());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ResultDTO <span class="title">error</span><span class="params">(Integer status, String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResultDTO(status, message, <span class="keyword">new</span> LinkedHashMap&lt;&gt;());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResultDTO <span class="title">add</span><span class="params">(String key, Object value)</span> </span>&#123;</span><br><span class="line">        body.put(key, value);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResultDTO <span class="title">addAll</span><span class="params">(Map&lt;String, Object&gt; map)</span> </span>&#123;</span><br><span class="line">        body.putAll(map);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> String.format(</span><br><span class="line">                <span class="string">"%s(status=%d, msg=%s, body[%s].size=%d"</span>,</span><br><span class="line">                <span class="keyword">this</span>.getClass().getName(), status, msg, body.getClass().getName(), body.size()</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>前后端分离</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>Mybatis</tag>
        <tag>前后端分离</tag>
      </tags>
  </entry>
  <entry>
    <title>Pandas-高级处理</title>
    <url>/2021/01/22/Pandas-%E9%AB%98%E7%BA%A7%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="一、缺失值处理"><a href="#一、缺失值处理" class="headerlink" title="一、缺失值处理"></a>一、缺失值处理</h1><h2 id="1-1-缺失值处理方式"><a href="#1-1-缺失值处理方式" class="headerlink" title="1.1 缺失值处理方式"></a>1.1 缺失值处理方式</h2><h3 id="1-1-1-思路"><a href="#1-1-1-思路" class="headerlink" title="1.1.1 思路"></a>1.1.1 思路</h3><p>1.删除含有缺失值的样本(nan)</p>
<p>2.替换/插补</p>
<h3 id="1-1-2-处理nan"><a href="#1-1-2-处理nan" class="headerlink" title="1.1.2 处理nan"></a>1.1.2 处理nan</h3><p>1.判断数据中是否存在nan</p>
<ul>
<li>pd.isnull(df)  判断是否为空，是空的话置为True</li>
<li>pd.notnull(df)  判断是否为空，不是空的话置为True</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#返回True，数据中存在缺失值</span></span><br><span class="line">np.any(movie.isnull())</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="comment">#返回False，数据中存在缺失值</span></span><br><span class="line">np.all(movie.notnull())</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"></span><br><span class="line">movie.isnull().any()</span><br><span class="line">Rank                  <span class="literal">False</span></span><br><span class="line">Title                 <span class="literal">False</span></span><br><span class="line">Genre                 <span class="literal">False</span></span><br><span class="line">Description           <span class="literal">False</span></span><br><span class="line">Director              <span class="literal">False</span></span><br><span class="line">Actors                <span class="literal">False</span></span><br><span class="line">Year                  <span class="literal">False</span></span><br><span class="line">Runtime (Minutes)     <span class="literal">False</span></span><br><span class="line">Rating                <span class="literal">False</span></span><br><span class="line">Votes                 <span class="literal">False</span></span><br><span class="line">Revenue (Millions)     <span class="literal">True</span></span><br><span class="line">Metascore              <span class="literal">True</span></span><br><span class="line">dtype: bool</span><br><span class="line"></span><br><span class="line">pd.notnull(movie).all()</span><br><span class="line">Rank                   <span class="literal">True</span></span><br><span class="line">Title                  <span class="literal">True</span></span><br><span class="line">Genre                  <span class="literal">True</span></span><br><span class="line">Description            <span class="literal">True</span></span><br><span class="line">Director               <span class="literal">True</span></span><br><span class="line">Actors                 <span class="literal">True</span></span><br><span class="line">Year                   <span class="literal">True</span></span><br><span class="line">Runtime (Minutes)      <span class="literal">True</span></span><br><span class="line">Rating                 <span class="literal">True</span></span><br><span class="line">Votes                  <span class="literal">True</span></span><br><span class="line">Revenue (Millions)    <span class="literal">False</span></span><br><span class="line">Metascore             <span class="literal">False</span></span><br><span class="line">dtype: bool</span><br></pre></td></tr></table></figure>

<p>2.处理nan</p>
<p>删除含有缺失值的样本</p>
<ul>
<li>df.dropna( )<ul>
<li>axis=’row’ 默认按行</li>
<li>inplace=  （True：删除原始DataFrame缺失值样本，False：不改变原始数据，生成新的删除缺失值样本的数组，默认为False）</li>
</ul>
</li>
</ul>
<p>替换缺失值</p>
<ul>
<li>df.fillna(value，inplace=)<ul>
<li>value，替换成的值</li>
<li>inplace=  （True：删除原始DataFrame缺失值样本，False：不改变原始数据，生成新的删除缺失值样本的数组，默认为False）</li>
</ul>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">movie[<span class="string">"Revenue (Millions)"</span>].fillna(movie[<span class="string">"Revenue (Millions)"</span>].mean(),inplace=<span class="literal">True</span>)</span><br><span class="line">movie[<span class="string">"Metascore"</span>].fillna(movie[<span class="string">"Metascore"</span>].mean(),inplace=<span class="literal">True</span>)</span><br><span class="line">pd.isnull(movie).any()</span><br><span class="line">Rank                  <span class="literal">False</span></span><br><span class="line">Title                 <span class="literal">False</span></span><br><span class="line">Genre                 <span class="literal">False</span></span><br><span class="line">Description           <span class="literal">False</span></span><br><span class="line">Director              <span class="literal">False</span></span><br><span class="line">Actors                <span class="literal">False</span></span><br><span class="line">Year                  <span class="literal">False</span></span><br><span class="line">Runtime (Minutes)     <span class="literal">False</span></span><br><span class="line">Rating                <span class="literal">False</span></span><br><span class="line">Votes                 <span class="literal">False</span></span><br><span class="line">Revenue (Millions)    <span class="literal">False</span></span><br><span class="line">Metascore             <span class="literal">False</span></span><br><span class="line">dtype: bool</span><br></pre></td></tr></table></figure>

<h3 id="1-1-3-缺失值不为nan，有默认标记"><a href="#1-1-3-缺失值不为nan，有默认标记" class="headerlink" title="1.1.3 缺失值不为nan，有默认标记"></a>1.1.3 缺失值不为nan，有默认标记</h3><p>1.替换？为np.nan</p>
<ul>
<li>df.replace(to_replace=”?”, value=np. nan)</li>
</ul>
<p>2.处理np.nan</p>
<ul>
<li>与nan值处理方式相同</li>
</ul>
<h1 id="二、数据离散化"><a href="#二、数据离散化" class="headerlink" title="二、数据离散化"></a>二、数据离散化</h1><h2 id="2-1-定义及意义"><a href="#2-1-定义及意义" class="headerlink" title="2.1 定义及意义"></a>2.1 定义及意义</h2><p>定义：连续属性的离散化就是将连续属性的值域上,将值域划分为若干个离散的区间,最后用不同的符号或整数值代表落在每个子区间中的属性值。</p>
<p>意义：连续属性离散化的目的是为了简化数据结构,数据离散化技术可以用来减少给定连续属性值</p>
<p>的个数。离散化方法经常作为数据挖掘的工具。</p>
<h2 id="2-2-实现"><a href="#2-2-实现" class="headerlink" title="2.2 实现"></a>2.2 实现</h2><h3 id="2-2-1-分组"><a href="#2-2-1-分组" class="headerlink" title="2.2.1 分组"></a>2.2.1 分组</h3><p>1.自动分组</p>
<ul>
<li>sr=pd.qcut(data,bins) 数据，组数</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data = pd.Series([<span class="number">165</span>,<span class="number">174</span>,<span class="number">160</span>,<span class="number">180</span>,<span class="number">159</span>,<span class="number">163</span>,<span class="number">192</span>,<span class="number">184</span>],index=[<span class="string">'No1:165'</span>,<span class="string">'No1:174'</span>,<span class="string">'No1:160'</span>,<span class="string">'No1:180'</span>,<span class="string">'No1:159'</span>,<span class="string">'No1:163'</span>,<span class="string">'No1:192'</span>,<span class="string">'No1:184'</span>])</span><br><span class="line">No1:<span class="number">165</span>    <span class="number">165</span></span><br><span class="line">No1:<span class="number">174</span>    <span class="number">174</span></span><br><span class="line">No1:<span class="number">160</span>    <span class="number">160</span></span><br><span class="line">No1:<span class="number">180</span>    <span class="number">180</span></span><br><span class="line">No1:<span class="number">159</span>    <span class="number">159</span></span><br><span class="line">No1:<span class="number">163</span>    <span class="number">163</span></span><br><span class="line">No1:<span class="number">192</span>    <span class="number">192</span></span><br><span class="line">No1:<span class="number">184</span>    <span class="number">184</span></span><br><span class="line">dtype: int64</span><br><span class="line"><span class="comment"># 分组</span></span><br><span class="line">sr = pd.qcut(data,<span class="number">3</span>)</span><br><span class="line"><span class="comment">#查看每组个数</span></span><br><span class="line">sr.value_counts()</span><br><span class="line"></span><br><span class="line">(<span class="number">178.0</span>, <span class="number">192.0</span>]        <span class="number">3</span></span><br><span class="line">(<span class="number">158.999</span>, <span class="number">163.667</span>]    <span class="number">3</span></span><br><span class="line">(<span class="number">163.667</span>, <span class="number">178.0</span>]      <span class="number">2</span></span><br><span class="line">dtype: int64</span><br><span class="line"><span class="comment">#转换成one-hot编码</span></span><br><span class="line">pd.get_dummies(sr,prefix=<span class="string">"height"</span>)</span><br><span class="line">		height_(<span class="number">158.999</span>, <span class="number">163.667</span>]	height_(<span class="number">163.667</span>, <span class="number">178.0</span>]	height_(<span class="number">178.0</span>, <span class="number">192.0</span>]</span><br><span class="line">No1:<span class="number">165</span>	<span class="number">0</span>							<span class="number">1</span>						<span class="number">0</span></span><br><span class="line">No1:<span class="number">174</span>	<span class="number">0</span>							<span class="number">1</span>						<span class="number">0</span></span><br><span class="line">No1:<span class="number">160</span>	<span class="number">1</span>							<span class="number">0</span>						<span class="number">0</span></span><br><span class="line">No1:<span class="number">180</span>	<span class="number">0</span>							<span class="number">0</span>						<span class="number">1</span></span><br><span class="line">No1:<span class="number">159</span>	<span class="number">1</span>							<span class="number">0</span>						<span class="number">0</span></span><br><span class="line">No1:<span class="number">163</span>	<span class="number">1</span>							<span class="number">0</span>						<span class="number">0</span></span><br><span class="line">No1:<span class="number">192</span>	<span class="number">0</span>							<span class="number">0</span>						<span class="number">1</span></span><br><span class="line">No1:<span class="number">184</span>	<span class="number">0</span>							<span class="number">0</span>						<span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>2.自定义分组</p>
<ul>
<li>sr=pd.cut(data,[ ]) 数据，分组列表</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#自定义分组</span></span><br><span class="line">bins = [<span class="number">150</span>,<span class="number">165</span>,<span class="number">180</span>,<span class="number">195</span>]</span><br><span class="line">sr = pd.cut(data,bins)</span><br><span class="line">No1:<span class="number">165</span>    (<span class="number">150</span>, <span class="number">165</span>]</span><br><span class="line">No1:<span class="number">174</span>    (<span class="number">165</span>, <span class="number">180</span>]</span><br><span class="line">No1:<span class="number">160</span>    (<span class="number">150</span>, <span class="number">165</span>]</span><br><span class="line">No1:<span class="number">180</span>    (<span class="number">165</span>, <span class="number">180</span>]</span><br><span class="line">No1:<span class="number">159</span>    (<span class="number">150</span>, <span class="number">165</span>]</span><br><span class="line">No1:<span class="number">163</span>    (<span class="number">150</span>, <span class="number">165</span>]</span><br><span class="line">No1:<span class="number">192</span>    (<span class="number">180</span>, <span class="number">195</span>]</span><br><span class="line">No1:<span class="number">184</span>    (<span class="number">180</span>, <span class="number">195</span>]</span><br><span class="line">dtype: category</span><br><span class="line">Categories (<span class="number">3</span>, interval[int64]): [(<span class="number">150</span>, <span class="number">165</span>] &lt; (<span class="number">165</span>, <span class="number">180</span>] &lt; (<span class="number">180</span>, <span class="number">195</span>]]</span><br><span class="line">                                                             pd.get_dummies(sr,prefix=<span class="string">"身高"</span>)</span><br><span class="line">                                                             								身高_(<span class="number">150</span>, <span class="number">165</span>]	身高_(<span class="number">165</span>, <span class="number">180</span>]	身高_(<span class="number">180</span>, <span class="number">195</span>]</span><br><span class="line">No1:<span class="number">165</span>	<span class="number">1</span>				 <span class="number">0</span>				   <span class="number">0</span></span><br><span class="line">No1:<span class="number">174</span>	<span class="number">0</span>				 <span class="number">1</span>	  			   <span class="number">0</span></span><br><span class="line">No1:<span class="number">160</span>	<span class="number">1</span>				 <span class="number">0</span>	    		   <span class="number">0</span></span><br><span class="line">No1:<span class="number">180</span>	<span class="number">0</span>				 <span class="number">1</span>				   <span class="number">0</span></span><br><span class="line">No1:<span class="number">159</span>	<span class="number">1</span>			     <span class="number">0</span>				   <span class="number">0</span></span><br><span class="line">No1:<span class="number">163</span>	<span class="number">1</span>				 <span class="number">0</span>				   <span class="number">0</span></span><br><span class="line">No1:<span class="number">192</span>	<span class="number">0</span>				 <span class="number">0</span>				   <span class="number">1</span></span><br><span class="line">No1:<span class="number">184</span>	<span class="number">0</span>				 <span class="number">0</span>				   <span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>3.将分组好的结果转换成one-hot编码</p>
<ul>
<li>pd.get_dummies(sr,prefix= )</li>
</ul>
<h1 id="三、合并"><a href="#三、合并" class="headerlink" title="三、合并"></a>三、合并</h1><h2 id="3-1-按方向拼接"><a href="#3-1-按方向拼接" class="headerlink" title="3.1 按方向拼接"></a>3.1 按方向拼接</h2><p>pd.concat([data1, data2], axis=1)</p>
<ul>
<li>axis=0:按列拼接  纵向拼接</li>
<li>axis=1:按行拼接  横向拼接</li>
</ul>
<h2 id="3-2-按索引拼接"><a href="#3-2-按索引拼接" class="headerlink" title="3.2 按索引拼接"></a>3.2 按索引拼接</h2><p>pd.merge(left, right, how=”inner”, on=[索引])</p>
<ul>
<li>how=: left(左连接)、right(右连接)、outer(外连接)、inner(内连接)</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">left=pd.DataFrame(&#123;<span class="string">"key1"</span>:[<span class="string">"K0"</span>,<span class="string">"K0"</span>,<span class="string">"K1"</span>,<span class="string">"K2"</span>],</span><br><span class="line">                   <span class="string">"key2"</span>:[<span class="string">"K0"</span>,<span class="string">"K1"</span>,<span class="string">"K0"</span>,<span class="string">"K1"</span>],</span><br><span class="line">                   <span class="string">"A"</span>:[<span class="string">"A0"</span>,<span class="string">"A1"</span>,<span class="string">"A2"</span>,<span class="string">"A3"</span>],</span><br><span class="line">                   <span class="string">"B"</span>:[<span class="string">"B0"</span>,<span class="string">"B1"</span>,<span class="string">"B2"</span>,<span class="string">"B3"</span>]&#125;)</span><br><span class="line">right = pd.DataFrame(&#123;<span class="string">'key1'</span>:[<span class="string">"K0"</span>,<span class="string">"K1"</span>,<span class="string">"K1"</span>,<span class="string">"K2"</span>],</span><br><span class="line">                      <span class="string">"key2"</span>:[<span class="string">"K0"</span>,<span class="string">"K0"</span>,<span class="string">"K0"</span>,<span class="string">"K0"</span>],</span><br><span class="line">                       <span class="string">"C"</span>:[<span class="string">"C0"</span>,<span class="string">"C1"</span>,<span class="string">'C2'</span>,<span class="string">"C3"</span>],</span><br><span class="line">                       <span class="string">"D"</span>:[<span class="string">"D0"</span>,<span class="string">"D1"</span>,<span class="string">"D2"</span>,<span class="string">"D3"</span>]&#125;)</span><br><span class="line">left</span><br><span class="line">	key1 key2	A	B</span><br><span class="line"><span class="number">0</span>	K0	K0	A0	B0</span><br><span class="line"><span class="number">1</span>	K0	K1	A1	B1</span><br><span class="line"><span class="number">2</span>	K1	K0	A2	B2</span><br><span class="line"><span class="number">3</span>	K2	K1	A3	B3</span><br><span class="line">right</span><br><span class="line">	keyl	key2	C	D</span><br><span class="line"><span class="number">0</span>	K0	K0	C0	D0</span><br><span class="line"><span class="number">1</span>	K1	K0	C1	D1</span><br><span class="line"><span class="number">2</span>	K1	K0	C2	D2</span><br><span class="line"><span class="number">3</span>	K2	K0	C3	D3</span><br><span class="line"><span class="comment">#内连接</span></span><br><span class="line">pd.merge(left,right,how=<span class="string">"inner"</span>,on=[<span class="string">"key1"</span>,<span class="string">"key2"</span>])</span><br><span class="line">	key1	key2	A	B	C	D</span><br><span class="line"><span class="number">0</span>	K0	K0	A0	B0	C0	D0</span><br><span class="line"><span class="number">1</span>	K1	K0	A2	B2	C1	D1</span><br><span class="line"><span class="number">2</span>	K1	K0	A2	B2	C2	D2</span><br><span class="line"><span class="comment">#左连接</span></span><br><span class="line">pd.merge(left,right,how=<span class="string">"left"</span>,on=[<span class="string">"key1"</span>,<span class="string">"key2"</span>])</span><br><span class="line">	key1	key2	A	B	C	D</span><br><span class="line"><span class="number">0</span>	K0	K0	A0	B0	C0	D0</span><br><span class="line"><span class="number">1</span>	K0	K1	A1	B1	NaN	NaN</span><br><span class="line"><span class="number">2</span>	K1	K0	A2	B2	C1	D1</span><br><span class="line"><span class="number">3</span>	K1	K0	A2	B2	C2	D2</span><br><span class="line"><span class="number">4</span>	K2	K1	A3	B3	NaN	NaN</span><br><span class="line"><span class="comment">#右连接</span></span><br><span class="line">pd.merge(left,right,how=<span class="string">"right"</span>,on=[<span class="string">"key1"</span>,<span class="string">"key2"</span>])</span><br><span class="line">	key1	key2	A	B	C	D</span><br><span class="line"><span class="number">0</span>	K0	K0	A0	B0	C0	D0</span><br><span class="line"><span class="number">1</span>	K1	K0	A2	B2	C1	D1</span><br><span class="line"><span class="number">2</span>	K1	K0	A2	B2	C2	D2</span><br><span class="line"><span class="number">3</span>	K2	K0	NaN	NaN	C3	D3</span><br><span class="line"><span class="comment">#外连接</span></span><br><span class="line">pd.merge(left,right,how=<span class="string">"outer"</span>,on=[<span class="string">"key1"</span>,<span class="string">"key2"</span>])</span><br><span class="line">	key1	key2	A	B	C	D</span><br><span class="line"><span class="number">0</span>	K0	K0	A0	B0	C0	D0</span><br><span class="line"><span class="number">1</span>	K0	K1	A1	B1	NaN	NaN</span><br><span class="line"><span class="number">2</span>	K1	K0	A2	B2	C1	D1</span><br><span class="line"><span class="number">3</span>	K1	K0	A2	B2	C2	D2</span><br><span class="line"><span class="number">4</span>	K2	K1	A3	B3	NaN	NaN</span><br><span class="line"><span class="number">5</span>	K2	K0	NaN	NaN	C3	D3</span><br></pre></td></tr></table></figure>

<h1 id="四、交叉表与透视表"><a href="#四、交叉表与透视表" class="headerlink" title="四、交叉表与透视表"></a>四、交叉表与透视表</h1><p>找到、探索两个变量之间的关系</p>
<h2 id="4-1-使用crosstab-交叉表-实现"><a href="#4-1-使用crosstab-交叉表-实现" class="headerlink" title="4.1 使用crosstab(交叉表)实现"></a>4.1 使用crosstab(交叉表)实现</h2><p>交叉表用于计算一列数据对于另外一列数据的分组个数(寻找两个列之间的关系)</p>
<p>pd.crosstab(value1, value2)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">date.weekday</span><br><span class="line">Int64Index([<span class="number">1</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>,</span><br><span class="line">            ...</span><br><span class="line">            <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">           dtype=<span class="string">'int64'</span>, length=<span class="number">643</span>)</span><br><span class="line">stock[<span class="string">"week"</span>]= date.weekday</span><br><span class="line"><span class="comment">#涨跌幅数据列</span></span><br><span class="line">stock[<span class="string">"pona"</span>] = np.where(stock[<span class="string">"p_change"</span>]&gt; <span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>)</span><br><span class="line"><span class="comment">#星期列与涨跌幅数据列形成交叉表</span></span><br><span class="line">data = pd.crosstab(stock[<span class="string">"week"</span>],stock[<span class="string">"pona"</span>])</span><br><span class="line"><span class="comment">#得到每天涨跌幅频数</span></span><br><span class="line">pona <span class="number">0</span>	<span class="number">1</span></span><br><span class="line">week		</span><br><span class="line"><span class="number">0</span>	<span class="number">63</span>	<span class="number">62</span></span><br><span class="line"><span class="number">1</span>	<span class="number">55</span>	<span class="number">76</span></span><br><span class="line"><span class="number">2</span>	<span class="number">61</span>	<span class="number">71</span></span><br><span class="line"><span class="number">3</span>	<span class="number">63</span>	<span class="number">65</span></span><br><span class="line"><span class="number">4</span>	<span class="number">59</span>	<span class="number">68</span></span><br><span class="line"><span class="comment">#得到百分比</span></span><br><span class="line">data.div(data.sum(axis=<span class="number">1</span>),axis=<span class="number">0</span>)</span><br><span class="line">	pona	<span class="number">0</span>	<span class="number">1</span></span><br><span class="line">	week		</span><br><span class="line">	<span class="number">0</span>	<span class="number">0.504000</span>	<span class="number">0.496000</span></span><br><span class="line">	<span class="number">1</span>	<span class="number">0.419847</span>	<span class="number">0.580153</span></span><br><span class="line">	<span class="number">2</span>	<span class="number">0.462121</span>	<span class="number">0.537879</span></span><br><span class="line">	<span class="number">3</span>	<span class="number">0.492188</span>	<span class="number">0.507812</span></span><br><span class="line">	<span class="number">4</span>	<span class="number">0.464567</span>	<span class="number">0.535433</span></span><br></pre></td></tr></table></figure>

<h2 id="4-2-透视表piovt-table"><a href="#4-2-透视表piovt-table" class="headerlink" title="4.2 透视表piovt_table"></a>4.2 透视表piovt_table</h2><p>DataFrame.pivot_table([ ], index=[ ])</p>
<p>直接得到百分比</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">stock.pivot_table([<span class="string">"pona"</span>],index=[<span class="string">"week"</span>])</span><br><span class="line">	pona</span><br><span class="line">week	</span><br><span class="line"><span class="number">0</span>	<span class="number">0.496000</span></span><br><span class="line"><span class="number">1</span>	<span class="number">0.580153</span></span><br><span class="line"><span class="number">2</span>	<span class="number">0.537879</span></span><br><span class="line"><span class="number">3</span>	<span class="number">0.507812</span></span><br><span class="line"><span class="number">4</span>	<span class="number">0.535433</span></span><br></pre></td></tr></table></figure>

<h1 id="五、分组与聚合"><a href="#五、分组与聚合" class="headerlink" title="五、分组与聚合"></a>五、分组与聚合</h1><h2 id="5-1-DataFrame方法"><a href="#5-1-DataFrame方法" class="headerlink" title="5.1 DataFrame方法"></a>5.1 DataFrame方法</h2><p>DataFrame.groupby(key, as_ index=False)</p>
<p>key:分组的列数据,可以多个</p>
<p>注：分组并聚合后才能显示</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">col = pd.DataFrame(&#123;<span class="string">'color'</span>:[<span class="string">'white'</span>,<span class="string">'red'</span>,<span class="string">'green'</span>,<span class="string">'red'</span>,<span class="string">'green'</span>],</span><br><span class="line">                    <span class="string">'object'</span>:[<span class="string">'pen'</span>,<span class="string">'pencil'</span>,<span class="string">'pencil'</span>,<span class="string">'ashtray'</span>,<span class="string">'pen'</span>],</span><br><span class="line">                    <span class="string">'price1'</span>:[<span class="string">'5.56'</span>,<span class="string">'4.20'</span>,<span class="string">'1.30'</span>,<span class="string">'0.56'</span>,<span class="string">'2.75'</span>],</span><br><span class="line">                    <span class="string">'price2'</span>:[<span class="string">'4.75'</span>,<span class="string">'4.12'</span>,<span class="string">'1.60'</span>,<span class="string">'0.75'</span>,<span class="string">'3.15'</span>]&#125;)</span><br><span class="line"></span><br><span class="line">color	object			price1	price2</span><br><span class="line"><span class="number">0</span>	white		pen		<span class="number">5.56</span>	<span class="number">4.75</span></span><br><span class="line"><span class="number">1</span>	red			pencil	<span class="number">4.20</span>	<span class="number">4.12</span></span><br><span class="line"><span class="number">2</span>	green		pencil	<span class="number">1.30</span>	<span class="number">1.60</span></span><br><span class="line"><span class="number">3</span>	red			ashtray	<span class="number">0.56</span>	<span class="number">0.75</span></span><br><span class="line"><span class="number">4</span>	green		pen		<span class="number">2.75</span>	<span class="number">3.15</span></span><br><span class="line"><span class="comment">#对颜色分组，对price1进行聚合</span></span><br><span class="line"><span class="comment">#DataFrame的方法进行分组</span></span><br><span class="line">col.groupby(by=<span class="string">"color"</span>)[<span class="string">"price1"</span>].max()</span><br><span class="line">color</span><br><span class="line">green    <span class="number">2.75</span></span><br><span class="line">red      <span class="number">4.20</span></span><br><span class="line">white    <span class="number">5.56</span></span><br><span class="line">Name: price1, dtype: object</span><br></pre></td></tr></table></figure>

<h2 id="5-2-Series方法"><a href="#5-2-Series方法" class="headerlink" title="5.2 Series方法"></a>5.2 Series方法</h2><p>Series.groupby(key, as_ index=False)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#用Series方法</span></span><br><span class="line">col[<span class="string">"price1"</span>].groupby(col[<span class="string">"color"</span>]).max()</span><br><span class="line">color</span><br><span class="line">green    <span class="number">2.75</span></span><br><span class="line">red      <span class="number">4.20</span></span><br><span class="line">white    <span class="number">5.56</span></span><br><span class="line">Name: price1, dtype: object</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>pandas</tag>
      </tags>
  </entry>
  <entry>
    <title>Pandas</title>
    <url>/2021/01/21/Pandas/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h1><p>封装了Numpy和Matplotlib，具有便捷的数据处理能力，读取文件方便，专门用于数据挖掘。</p>
<h1 id="二、三大数据结构"><a href="#二、三大数据结构" class="headerlink" title="二、三大数据结构"></a>二、三大数据结构</h1><h2 id="2-1-DataFrame"><a href="#2-1-DataFrame" class="headerlink" title="2.1 DataFrame"></a>2.1 DataFrame</h2><h3 id="2-1-1-结构"><a href="#2-1-1-结构" class="headerlink" title="2.1.1 结构"></a>2.1.1 结构</h3><p>既有行索引，又有列索引的二维数组</p>
<h4 id="1-生成DataFrame"><a href="#1-生成DataFrame" class="headerlink" title="1. 生成DataFrame"></a>1. 生成DataFrame</h4><p>pd.DataFrame(ndarrary)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="comment">#生成二维数组</span></span><br><span class="line">stock_change = np.random.normal(<span class="number">0</span>,<span class="number">1</span>,(<span class="number">10</span>,<span class="number">5</span>))</span><br><span class="line"><span class="comment">#创建DataFrame</span></span><br><span class="line">pd.DataFrame(stock_change)</span><br><span class="line">	<span class="number">0</span>	             <span class="number">1</span>	         <span class="number">2</span>	          <span class="number">3</span>	       <span class="number">4</span></span><br><span class="line"><span class="number">0</span>	<span class="number">-0.268469</span>	<span class="number">1.730915</span>	<span class="number">-1.009817</span>	<span class="number">-0.724267</span>	<span class="number">1.070360</span></span><br><span class="line"><span class="number">1</span>	<span class="number">-1.774932</span>	<span class="number">-1.477198</span>	<span class="number">1.293078</span>	<span class="number">0.111610</span>	<span class="number">0.422240</span></span><br><span class="line"><span class="number">2</span>	<span class="number">-0.339734</span>	<span class="number">-0.327221</span>	<span class="number">2.087621</span>	<span class="number">-1.105055</span>	<span class="number">0.372288</span></span><br><span class="line"><span class="number">3</span>	<span class="number">-1.511658</span>	<span class="number">-0.192350</span>	<span class="number">1.115869</span>	<span class="number">-0.668625</span>	<span class="number">0.223991</span></span><br><span class="line"><span class="number">4</span>	<span class="number">1.234608</span>	<span class="number">-0.030666</span>	<span class="number">-1.296268</span>	<span class="number">0.676021</span>	<span class="number">0.229242</span></span><br><span class="line"><span class="number">5</span>	<span class="number">-1.829124</span>	<span class="number">-1.455717</span>	<span class="number">1.119276</span>	<span class="number">-0.493858</span>	<span class="number">0.429053</span></span><br><span class="line"><span class="number">6</span>	<span class="number">1.849348</span>	<span class="number">-0.155816</span>	<span class="number">0.195674</span>	<span class="number">-1.608004</span>	<span class="number">-0.456923</span></span><br><span class="line"><span class="number">7</span>	<span class="number">-0.833554</span>	<span class="number">-0.301686</span>	<span class="number">0.189869</span>	<span class="number">0.664212</span>	<span class="number">-0.364294</span></span><br><span class="line"><span class="number">8</span>	<span class="number">-0.524520</span>	<span class="number">0.328688</span>	<span class="number">1.453038</span>	<span class="number">-0.950180</span>	<span class="number">1.066928</span></span><br><span class="line"><span class="number">9</span>	<span class="number">-0.014796</span>	<span class="number">0.046543</span>	<span class="number">0.194047</span>	<span class="number">-0.753442</span>	<span class="number">-1.235741</span></span><br></pre></td></tr></table></figure>

<h4 id="2-添加行索引"><a href="#2-添加行索引" class="headerlink" title="2. 添加行索引"></a>2. 添加行索引</h4><p>pd.DataFrame(ndarrary,index=  )</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1.生成行索引</span></span><br><span class="line">stock = [<span class="string">"股票&#123;&#125;"</span>.format(i) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>)]</span><br><span class="line">[<span class="string">'股票0'</span>, <span class="string">'股票1'</span>, <span class="string">'股票2'</span>, <span class="string">'股票3'</span>, <span class="string">'股票4'</span>, <span class="string">'股票5'</span>, <span class="string">'股票6'</span>, <span class="string">'股票7'</span>, <span class="string">'股票8'</span>, <span class="string">'股票9'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.添加行索引</span></span><br><span class="line">pd.DataFrame(stock_change,index=stock)</span><br><span class="line"></span><br><span class="line"><span class="number">0</span>	                <span class="number">1</span>	          <span class="number">2</span>	          <span class="number">3</span>	        <span class="number">4</span></span><br><span class="line">股票<span class="number">0</span>	<span class="number">-0.268469</span>	<span class="number">1.730915</span>	<span class="number">-1.009817</span>	<span class="number">-0.724267</span>	<span class="number">1.070360</span></span><br><span class="line">股票<span class="number">1</span>	<span class="number">-1.774932</span>	<span class="number">-1.477198</span>	<span class="number">1.293078</span>	<span class="number">0.111610</span>	<span class="number">0.422240</span></span><br><span class="line">股票<span class="number">2</span>	<span class="number">-0.339734</span>	<span class="number">-0.327221</span>	<span class="number">2.087621</span>	<span class="number">-1.105055</span>	<span class="number">0.372288</span></span><br><span class="line">股票<span class="number">3</span>	<span class="number">-1.511658</span>	<span class="number">-0.192350</span>	<span class="number">1.115869</span>	<span class="number">-0.668625</span>	<span class="number">0.223991</span></span><br><span class="line">股票<span class="number">4</span>	<span class="number">1.234608</span>	<span class="number">-0.030666</span>	<span class="number">-1.296268</span>	<span class="number">0.676021</span>	<span class="number">0.229242</span></span><br><span class="line">股票<span class="number">5</span>	<span class="number">-1.829124</span>	<span class="number">-1.455717</span>	<span class="number">1.119276</span>	<span class="number">-0.493858</span>	<span class="number">0.429053</span></span><br><span class="line">股票<span class="number">6</span>	<span class="number">1.849348</span>	<span class="number">-0.155816</span>	<span class="number">0.195674</span>	<span class="number">-1.608004</span>	<span class="number">-0.456923</span></span><br><span class="line">股票<span class="number">7</span>	<span class="number">-0.833554</span>	<span class="number">-0.301686</span>	<span class="number">0.189869</span>	<span class="number">0.664212</span>	<span class="number">-0.364294</span></span><br><span class="line">股票<span class="number">8</span>	<span class="number">-0.524520</span>	<span class="number">0.328688</span>	<span class="number">1.453038</span>	<span class="number">-0.950180</span>	<span class="number">1.066928</span></span><br><span class="line">股票<span class="number">9</span>	<span class="number">-0.014796</span>	<span class="number">0.046543</span>	<span class="number">0.194047</span>	<span class="number">-0.753442</span>	<span class="number">-1.235741</span></span><br></pre></td></tr></table></figure>

<h4 id="3-添加列索引"><a href="#3-添加列索引" class="headerlink" title="3. 添加列索引"></a>3. 添加列索引</h4><p>pd.DataFrame(ndarrary,columns=  )</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#生成列索引</span></span><br><span class="line">date = pd.date_range(start=<span class="string">"20210101"</span>,periods=<span class="number">5</span>,freq=<span class="string">"B"</span>)</span><br><span class="line">DatetimeIndex([<span class="string">'2021-01-01'</span>, <span class="string">'2021-01-04'</span>, <span class="string">'2021-01-05'</span>, <span class="string">'2021-01-06'</span>,</span><br><span class="line">               <span class="string">'2021-01-07'</span>],dtype=<span class="string">'datetime64[ns]'</span>, freq=<span class="string">'B'</span>)</span><br><span class="line"><span class="comment">#添加列索引</span></span><br><span class="line">pd.DataFrame(stock_change,index=stock,columns=date)</span><br><span class="line">	<span class="number">2021</span><span class="number">-01</span><span class="number">-01</span>	<span class="number">2021</span><span class="number">-01</span><span class="number">-04</span>	<span class="number">2021</span><span class="number">-01</span><span class="number">-05</span>	<span class="number">2021</span><span class="number">-01</span><span class="number">-06</span>	<span class="number">2021</span><span class="number">-01</span><span class="number">-07</span></span><br><span class="line">股票<span class="number">0</span>	<span class="number">-0.268469</span>	<span class="number">1.730915</span>	<span class="number">-1.009817</span>	<span class="number">-0.724267</span>	<span class="number">1.070360</span></span><br><span class="line">股票<span class="number">1</span>	<span class="number">-1.774932</span>	<span class="number">-1.477198</span>	<span class="number">1.293078</span>	<span class="number">0.111610</span>	<span class="number">0.422240</span></span><br><span class="line">股票<span class="number">2</span>	<span class="number">-0.339734</span>	<span class="number">-0.327221</span>	<span class="number">2.087621</span>	<span class="number">-1.105055</span>	<span class="number">0.372288</span></span><br><span class="line">股票<span class="number">3</span>	<span class="number">-1.511658</span>	<span class="number">-0.192350</span>	<span class="number">1.115869</span>	<span class="number">-0.668625</span>	<span class="number">0.223991</span></span><br><span class="line">股票<span class="number">4</span>	<span class="number">1.234608</span>	<span class="number">-0.030666</span>	<span class="number">-1.296268</span>	<span class="number">0.676021</span>	<span class="number">0.229242</span></span><br><span class="line">股票<span class="number">5</span>	<span class="number">-1.829124</span>	<span class="number">-1.455717</span>	<span class="number">1.119276</span>	<span class="number">-0.493858</span>	<span class="number">0.429053</span></span><br><span class="line">股票<span class="number">6</span>	<span class="number">1.849348</span>	<span class="number">-0.155816</span>	<span class="number">0.195674</span>	<span class="number">-1.608004</span>	<span class="number">-0.456923</span></span><br><span class="line">股票<span class="number">7</span>	<span class="number">-0.833554</span>	<span class="number">-0.301686</span>	<span class="number">0.189869</span>	<span class="number">0.664212</span>	<span class="number">-0.364294</span></span><br><span class="line">股票<span class="number">8</span>	<span class="number">-0.524520</span>	<span class="number">0.328688</span>	<span class="number">1.453038</span>	<span class="number">-0.950180</span>	<span class="number">1.066928</span></span><br><span class="line">股票<span class="number">9</span>	<span class="number">-0.014796</span>	<span class="number">0.046543</span>	<span class="number">0.194047</span>	<span class="number">-0.753442</span>	<span class="number">-1.235741</span></span><br></pre></td></tr></table></figure>

<h3 id="2-1-2-属性"><a href="#2-1-2-属性" class="headerlink" title="2.1.2 属性"></a>2.1.2 属性</h3><h4 id="1-常用属性"><a href="#1-常用属性" class="headerlink" title="1. 常用属性"></a>1. 常用属性</h4><p>shape 矩阵形状</p>
<p>index  行索引列表</p>
<p>columns  列索引列表</p>
<p>values  显示ndarrary，不显示行列索引</p>
<p>T  行列转置</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data.shape</span><br><span class="line">(<span class="number">10</span>, <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">data.index</span><br><span class="line">Index([<span class="string">'股票0'</span>, <span class="string">'股票1'</span>, <span class="string">'股票2'</span>, <span class="string">'股票3'</span>, <span class="string">'股票4'</span>, <span class="string">'股票5'</span>, <span class="string">'股票6'</span>, <span class="string">'股票7'</span>, <span class="string">'股票8'</span>, <span class="string">'股票9'</span>], dtype=<span class="string">'object'</span>)</span><br><span class="line"></span><br><span class="line">data.columns</span><br><span class="line">DatetimeIndex([<span class="string">'2021-01-01'</span>, <span class="string">'2021-01-04'</span>, <span class="string">'2021-01-05'</span>, <span class="string">'2021-01-06'</span>,</span><br><span class="line">               <span class="string">'2021-01-07'</span>],</span><br><span class="line">              dtype=<span class="string">'datetime64[ns]'</span>, freq=<span class="string">'B'</span>)</span><br><span class="line"></span><br><span class="line">data.values</span><br><span class="line">array([[<span class="number">-0.26846949</span>,  <span class="number">1.73091461</span>, <span class="number">-1.00981674</span>, <span class="number">-0.72426739</span>,  <span class="number">1.0703596</span> ],</span><br><span class="line">       [<span class="number">-1.77493189</span>, <span class="number">-1.4771981</span> ,  <span class="number">1.29307836</span>,  <span class="number">0.11161021</span>,  <span class="number">0.42224003</span>],</span><br><span class="line">       [<span class="number">-0.3397336</span> , <span class="number">-0.32722064</span>,  <span class="number">2.08762105</span>, <span class="number">-1.10505512</span>,  <span class="number">0.37228785</span>],</span><br><span class="line">       [<span class="number">-1.51165829</span>, <span class="number">-0.19235048</span>,  <span class="number">1.11586897</span>, <span class="number">-0.66862519</span>,  <span class="number">0.22399066</span>],</span><br><span class="line">       [ <span class="number">1.23460754</span>, <span class="number">-0.03066557</span>, <span class="number">-1.29626776</span>,  <span class="number">0.67602135</span>,  <span class="number">0.22924198</span>],</span><br><span class="line">       [<span class="number">-1.8291236</span> , <span class="number">-1.45571725</span>,  <span class="number">1.11927613</span>, <span class="number">-0.49385831</span>,  <span class="number">0.42905348</span>],</span><br><span class="line">       [ <span class="number">1.8493478</span> , <span class="number">-0.15581612</span>,  <span class="number">0.19567402</span>, <span class="number">-1.60800405</span>, <span class="number">-0.45692313</span>],</span><br><span class="line">       [<span class="number">-0.83355434</span>, <span class="number">-0.30168627</span>,  <span class="number">0.18986934</span>,  <span class="number">0.66421236</span>, <span class="number">-0.36429427</span>],</span><br><span class="line">       [<span class="number">-0.52451968</span>,  <span class="number">0.32868791</span>,  <span class="number">1.45303844</span>, <span class="number">-0.95018047</span>,  <span class="number">1.06692751</span>],</span><br><span class="line">       [<span class="number">-0.01479553</span>,  <span class="number">0.04654277</span>,  <span class="number">0.19404728</span>, <span class="number">-0.75344158</span>, <span class="number">-1.23574094</span>]])</span><br><span class="line"></span><br><span class="line">data.T</span><br><span class="line"></span><br><span class="line">               股票<span class="number">0</span>	股票<span class="number">1</span>	股票<span class="number">2</span>	股票<span class="number">3</span>	股票<span class="number">4</span>	股票<span class="number">5</span>	股票<span class="number">6</span>	股票<span class="number">7</span>	股票<span class="number">8</span>	股票<span class="number">9</span></span><br><span class="line"><span class="number">2021</span><span class="number">-01</span><span class="number">-01</span>	<span class="number">-0.268469</span>	<span class="number">-1.774932</span>	<span class="number">-0.339734</span>	<span class="number">-1.511658</span>	<span class="number">1.234608</span>	<span class="number">-1.829124</span>	                <span class="number">1.849348</span>	<span class="number">-0.833554</span>	<span class="number">-0.524520</span>	<span class="number">-0.014796</span></span><br><span class="line"><span class="number">2021</span><span class="number">-01</span><span class="number">-04</span>	<span class="number">1.730915</span>	<span class="number">-1.477198</span>	<span class="number">-0.327221</span>	<span class="number">-0.192350</span>	<span class="number">-0.030666</span>	<span class="number">-1.455717</span>	               <span class="number">-0.155816</span>	<span class="number">-0.301686</span>	<span class="number">0.328688</span>	<span class="number">0.046543</span></span><br><span class="line"><span class="number">2021</span><span class="number">-01</span><span class="number">-05</span>	<span class="number">-1.009817</span>	<span class="number">1.293078</span>	<span class="number">2.087621</span>	<span class="number">1.115869</span>	<span class="number">-1.296268</span>	<span class="number">1.119276</span>	                <span class="number">0.195674</span>	<span class="number">0.189869</span>	<span class="number">1.453038</span>	<span class="number">0.194047</span></span><br><span class="line"><span class="number">2021</span><span class="number">-01</span><span class="number">-06</span>	<span class="number">-0.724267</span>	<span class="number">0.111610</span>	<span class="number">-1.105055</span>	<span class="number">-0.668625</span>	<span class="number">0.676021</span>	<span class="number">-0.493858</span>	                <span class="number">-1.608004</span>	<span class="number">0.664212</span>	<span class="number">-0.950180</span>	<span class="number">-0.753442</span></span><br><span class="line"><span class="number">2021</span><span class="number">-01</span><span class="number">-07</span>	<span class="number">1.070360</span>	<span class="number">0.422240</span>	<span class="number">0.372288</span>	<span class="number">0.223991</span>	<span class="number">0.229242</span>	<span class="number">0.429053</span>	                 <span class="number">-0.456923</span>	<span class="number">-0.364294</span>	<span class="number">1.066928</span>	<span class="number">-1.235741</span></span><br></pre></td></tr></table></figure>

<h4 id="2-方法"><a href="#2-方法" class="headerlink" title="2. 方法"></a>2. 方法</h4><p>head( )  显示开头几行数据，默认为5，可以指定</p>
<p>tail( )  显示尾部几行数据，默认为5，可以指定</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#显示开头三行</span></span><br><span class="line">data.head(<span class="number">3</span>)</span><br><span class="line">	<span class="number">2021</span><span class="number">-01</span><span class="number">-01</span>	<span class="number">2021</span><span class="number">-01</span><span class="number">-04</span>	<span class="number">2021</span><span class="number">-01</span><span class="number">-05</span>	<span class="number">2021</span><span class="number">-01</span><span class="number">-06</span>	<span class="number">2021</span><span class="number">-01</span><span class="number">-07</span></span><br><span class="line">股票<span class="number">0</span>	<span class="number">-0.268469</span>	<span class="number">1.730915</span>	<span class="number">-1.009817</span>	<span class="number">-0.724267</span>	<span class="number">1.070360</span></span><br><span class="line">股票<span class="number">1</span>	<span class="number">-1.774932</span>	<span class="number">-1.477198</span>	<span class="number">1.293078</span>	<span class="number">0.111610</span>	<span class="number">0.422240</span></span><br><span class="line">股票<span class="number">2</span>	<span class="number">-0.339734</span>	<span class="number">-0.327221</span>	<span class="number">2.087621</span>	<span class="number">-1.105055</span>	<span class="number">0.372288</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#显示尾部两行</span></span><br><span class="line">data.tail(<span class="number">2</span>)</span><br><span class="line">	<span class="number">2021</span><span class="number">-01</span><span class="number">-01</span>	<span class="number">2021</span><span class="number">-01</span><span class="number">-04</span>	<span class="number">2021</span><span class="number">-01</span><span class="number">-05</span>	<span class="number">2021</span><span class="number">-01</span><span class="number">-06</span>	<span class="number">2021</span><span class="number">-01</span><span class="number">-07</span></span><br><span class="line">股票<span class="number">8</span>	<span class="number">-0.524520</span>	<span class="number">0.328688</span>	<span class="number">1.453038</span>	<span class="number">-0.950180</span>	<span class="number">1.066928</span></span><br><span class="line">股票<span class="number">9</span>	<span class="number">-0.014796</span>	<span class="number">0.046543</span>	<span class="number">0.194047</span>	<span class="number">-0.753442</span>	<span class="number">-1.235741</span></span><br></pre></td></tr></table></figure>

<h3 id="2-1-3-索引的设置"><a href="#2-1-3-索引的设置" class="headerlink" title="2.1.3 索引的设置"></a>2.1.3 索引的设置</h3><h4 id="1-修改行列索引"><a href="#1-修改行列索引" class="headerlink" title="1. 修改行列索引"></a>1. 修改行列索引</h4><p>不能单个修改，只能全部重新生成</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">stock_code = [<span class="string">"股票_"</span>+ str(i) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>)]</span><br><span class="line">data.index = stock_code</span><br><span class="line"><span class="number">2021</span><span class="number">-01</span><span class="number">-01</span>	<span class="number">2021</span><span class="number">-01</span><span class="number">-04</span>	<span class="number">2021</span><span class="number">-01</span><span class="number">-05</span>	<span class="number">2021</span><span class="number">-01</span><span class="number">-06</span>	<span class="number">2021</span><span class="number">-01</span><span class="number">-07</span></span><br><span class="line">股票_0	<span class="number">-0.268469</span>	<span class="number">1.730915</span>	<span class="number">-1.009817</span>	<span class="number">-0.724267</span>	<span class="number">1.070360</span></span><br><span class="line">股票_1	<span class="number">-1.774932</span>	<span class="number">-1.477198</span>	<span class="number">1.293078</span>	<span class="number">0.111610</span>	<span class="number">0.422240</span></span><br><span class="line">股票_2	<span class="number">-0.339734</span>	<span class="number">-0.327221</span>	<span class="number">2.087621</span>	<span class="number">-1.105055</span>	<span class="number">0.372288</span></span><br><span class="line">股票_3	<span class="number">-1.511658</span>	<span class="number">-0.192350</span>	<span class="number">1.115869</span>	<span class="number">-0.668625</span>	<span class="number">0.223991</span></span><br><span class="line">股票_4	<span class="number">1.234608</span>	<span class="number">-0.030666</span>	<span class="number">-1.296268</span>	<span class="number">0.676021</span>	<span class="number">0.229242</span></span><br><span class="line">股票_5	<span class="number">-1.829124</span>	<span class="number">-1.455717</span>	<span class="number">1.119276</span>	<span class="number">-0.493858</span>	<span class="number">0.429053</span></span><br><span class="line">股票_6	<span class="number">1.849348</span>	<span class="number">-0.155816</span>	<span class="number">0.195674</span>	<span class="number">-1.608004</span>	<span class="number">-0.456923</span></span><br><span class="line">股票_7	<span class="number">-0.833554</span>	<span class="number">-0.301686</span>	<span class="number">0.189869</span>	<span class="number">0.664212</span>	<span class="number">-0.364294</span></span><br><span class="line">股票_8	<span class="number">-0.524520</span>	<span class="number">0.328688</span>	<span class="number">1.453038</span>	<span class="number">-0.950180</span>	<span class="number">1.066928</span></span><br><span class="line">股票_9	<span class="number">-0.014796</span>	<span class="number">0.046543</span>	<span class="number">0.194047</span>	<span class="number">-0.753442</span>	<span class="number">-1.235741</span></span><br></pre></td></tr></table></figure>

<h4 id="2-重设索引"><a href="#2-重设索引" class="headerlink" title="2. 重设索引"></a>2. 重设索引</h4><p>rest_index(drop=False)</p>
<ul>
<li>设置新的下标索引</li>
<li>drop:默认为False，不删除原来的索引，如果为True，则会删除原来的索引值</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data.reset_index()</span><br><span class="line">    index	<span class="number">2021</span><span class="number">-01</span><span class="number">-01</span> 	<span class="number">2021</span><span class="number">-01</span><span class="number">-04</span> <span class="number">2021</span><span class="number">-01</span><span class="number">-05</span> 	<span class="number">2021</span><span class="number">-01</span><span class="number">-06</span> 	<span class="number">2021</span><span class="number">-01</span><span class="number">-07</span> </span><br><span class="line"><span class="number">0</span>	股票_0	<span class="number">-0.268469</span>	<span class="number">1.730915</span>	<span class="number">-1.009817</span>	<span class="number">-0.724267</span>	<span class="number">1.070360</span></span><br><span class="line"><span class="number">1</span>	股票_1	<span class="number">-1.774932</span>	<span class="number">-1.477198</span>	<span class="number">1.293078</span>	<span class="number">0.111610</span>	<span class="number">0.422240</span></span><br><span class="line"><span class="number">2</span>	股票_2	<span class="number">-0.339734</span>	<span class="number">-0.327221</span>	<span class="number">2.087621</span>	<span class="number">-1.105055</span>	<span class="number">0.372288</span></span><br><span class="line"><span class="number">3</span>	股票_3	<span class="number">-1.511658</span>	<span class="number">-0.192350</span>	<span class="number">1.115869</span>	<span class="number">-0.668625</span>	<span class="number">0.223991</span></span><br><span class="line"><span class="number">4</span>	股票_4	<span class="number">1.234608</span>	<span class="number">-0.030666</span>	<span class="number">-1.296268</span>	<span class="number">0.676021</span>	<span class="number">0.229242</span></span><br><span class="line"><span class="number">5</span>	股票_5	<span class="number">-1.829124</span>	<span class="number">-1.455717</span>	<span class="number">1.119276</span>	<span class="number">-0.493858</span>	<span class="number">0.429053</span></span><br></pre></td></tr></table></figure>

<h4 id="3-设置新索引"><a href="#3-设置新索引" class="headerlink" title="3.设置新索引"></a>3.设置新索引</h4><p>set_index(keys,drop=True)</p>
<ul>
<li>keys：列索引名或者列索引名列表</li>
<li>drop：默认为True，当作新的索引，删除原来的列</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df = pd.DataFrame(&#123; <span class="string">'month'</span> : [<span class="number">1</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">10</span>],<span class="string">'year'</span>:[<span class="number">2012</span>,<span class="number">2014</span>,<span class="number">2013</span>,<span class="number">2014</span>],<span class="string">'sale'</span>:[<span class="number">55</span>,<span class="number">40</span>,<span class="number">84</span>,<span class="number">31</span>]&#125;)</span><br><span class="line">	month year sale</span><br><span class="line"><span class="number">0</span>	<span class="number">1</span>	<span class="number">2012</span>	<span class="number">55</span></span><br><span class="line"><span class="number">1</span>	<span class="number">4</span>	<span class="number">2014</span>	<span class="number">40</span></span><br><span class="line"><span class="number">2</span>	<span class="number">7</span>	<span class="number">2013</span>	<span class="number">84</span></span><br><span class="line"><span class="number">3</span>	<span class="number">10</span>	<span class="number">2014</span>	<span class="number">31</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将月份设置为新的索引</span></span><br><span class="line">df.set_index(<span class="string">"month"</span>)</span><br><span class="line">     year	sale</span><br><span class="line">month		</span><br><span class="line"><span class="number">1</span>	<span class="number">2012</span>	<span class="number">55</span></span><br><span class="line"><span class="number">4</span>	<span class="number">2014</span>	<span class="number">40</span></span><br><span class="line"><span class="number">7</span>	<span class="number">2013</span>	<span class="number">84</span></span><br><span class="line"><span class="number">10</span>	<span class="number">2014</span>	<span class="number">31</span></span><br><span class="line"></span><br><span class="line">df.set_index(<span class="string">"month"</span>,<span class="literal">False</span>)</span><br><span class="line">month	year	sale</span><br><span class="line">month			</span><br><span class="line"><span class="number">1</span>	<span class="number">1</span>	<span class="number">2012</span>	<span class="number">55</span></span><br><span class="line"><span class="number">4</span>	<span class="number">4</span>	<span class="number">2014</span>	<span class="number">40</span></span><br><span class="line"><span class="number">7</span>	<span class="number">7</span>	<span class="number">2013</span>	<span class="number">84</span></span><br><span class="line"><span class="number">10</span>	<span class="number">10</span>	<span class="number">2014</span>	<span class="number">31</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#将year和month设置为索引</span></span><br><span class="line">new_df = df.set_index([<span class="string">'year'</span>,<span class="string">'month'</span>])</span><br><span class="line"><span class="comment">#注:通过刚才的设置,这样 DataFrame就变成了一个具有 MultiIndex的 DataFrame。</span></span><br><span class="line">new_df.index.names</span><br><span class="line">MultiIndex([(<span class="number">2012</span>,  <span class="number">1</span>),</span><br><span class="line">            (<span class="number">2014</span>,  <span class="number">4</span>),</span><br><span class="line">            (<span class="number">2013</span>,  <span class="number">7</span>),</span><br><span class="line">            (<span class="number">2014</span>, <span class="number">10</span>)],</span><br><span class="line">           names=[<span class="string">'year'</span>, <span class="string">'month'</span>])</span><br></pre></td></tr></table></figure>

<h3 id="2-1-4-MultiIndex和Panel"><a href="#2-1-4-MultiIndex和Panel" class="headerlink" title="2.1.4 MultiIndex和Panel"></a>2.1.4 MultiIndex和Panel</h3><h4 id="1-Multilndex"><a href="#1-Multilndex" class="headerlink" title="1.Multilndex"></a>1.Multilndex</h4><p>用来储存三维数组</p>
<p>属性：</p>
<ul>
<li>names：levels名称</li>
<li>levels：每个level的元组值</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">new_df.index.names</span><br><span class="line">FrozenList([<span class="string">'year'</span>, <span class="string">'month'</span>])</span><br><span class="line"></span><br><span class="line">new_df.index.levels</span><br><span class="line">FrozenList([[<span class="number">2012</span>, <span class="number">2013</span>, <span class="number">2014</span>], [<span class="number">1</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">10</span>]])</span><br></pre></td></tr></table></figure>

<h4 id="2-Panel"><a href="#2-Panel" class="headerlink" title="2.Panel"></a>2.Panel</h4><p>和Multilndex相同，但0.20.0弃用</p>
<h2 id="2-2-Series"><a href="#2-2-Series" class="headerlink" title="2.2 Series"></a>2.2 Series</h2><p>带索引的一维数组</p>
<h3 id="2-2-1-创建"><a href="#2-2-1-创建" class="headerlink" title="2.2.1 创建"></a>2.2.1 创建</h3><h4 id="1-指定内容，索引为默认"><a href="#1-指定内容，索引为默认" class="headerlink" title="1.指定内容，索引为默认"></a>1.指定内容，索引为默认</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.Series(np.arange(<span class="number">3</span>,<span class="number">9</span>,<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line"><span class="number">0</span>    <span class="number">3</span></span><br><span class="line"><span class="number">1</span>    <span class="number">5</span></span><br><span class="line"><span class="number">2</span>    <span class="number">7</span></span><br><span class="line">dtype: int32</span><br></pre></td></tr></table></figure>

<h4 id="2-指定索引"><a href="#2-指定索引" class="headerlink" title="2.指定索引"></a>2.指定索引</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.Series(np.arange(<span class="number">3</span>,<span class="number">9</span>,<span class="number">2</span>),index=[<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>])</span><br><span class="line"></span><br><span class="line">a    <span class="number">3</span></span><br><span class="line">b    <span class="number">5</span></span><br><span class="line">c    <span class="number">7</span></span><br><span class="line">dtype: int32</span><br></pre></td></tr></table></figure>

<h4 id="3-通过字典创建"><a href="#3-通过字典创建" class="headerlink" title="3.通过字典创建"></a>3.通过字典创建</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.Series(&#123;<span class="string">'red'</span>:<span class="number">100</span>,<span class="string">'bule'</span>:<span class="number">200</span>,<span class="string">'green'</span>:<span class="number">500</span>,<span class="string">'yellow'</span>:<span class="number">1000</span>&#125;)</span><br><span class="line"></span><br><span class="line">red        <span class="number">100</span></span><br><span class="line">bule       <span class="number">200</span></span><br><span class="line">green      <span class="number">500</span></span><br><span class="line">yellow    <span class="number">1000</span></span><br><span class="line">dtype: int64</span><br></pre></td></tr></table></figure>

<h3 id="2-2-2-属性"><a href="#2-2-2-属性" class="headerlink" title="2.2.2 属性"></a>2.2.2 属性</h3><p>index  行索引列表</p>
<p>values  显示ndarrary，不显示行索引</p>
<h1 id="三、基本数据操作"><a href="#三、基本数据操作" class="headerlink" title="三、基本数据操作"></a>三、基本数据操作</h1><h2 id="3-1-索引操作"><a href="#3-1-索引操作" class="headerlink" title="3.1 索引操作"></a>3.1 索引操作</h2><h3 id="3-1-1-直接使用索引操作"><a href="#3-1-1-直接使用索引操作" class="headerlink" title="3.1.1 直接使用索引操作"></a>3.1.1 直接使用索引操作</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data.head()</span><br><span class="line"></span><br><span class="line">open	high	close	low	volume	price_change	p_change	turnover</span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-27</span>	<span class="number">23.53</span>	<span class="number">25.88</span>	<span class="number">24.16</span>	<span class="number">23.53</span>	<span class="number">95578.03</span>	<span class="number">0.63</span>	<span class="number">2.68</span>	<span class="number">2.39</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-26</span>	<span class="number">22.80</span>	<span class="number">23.78</span>	<span class="number">23.53</span>	<span class="number">22.80</span>	<span class="number">60985.11</span>	<span class="number">0.69</span>	<span class="number">3.02</span>	<span class="number">1.53</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-23</span>	<span class="number">22.88</span>	<span class="number">23.37</span>	<span class="number">22.82</span>	<span class="number">22.71</span>	<span class="number">52914.01</span>	<span class="number">0.54</span>	<span class="number">2.42</span>	<span class="number">1.32</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-22</span>	<span class="number">22.25</span>	<span class="number">22.76</span>	<span class="number">22.28</span>	<span class="number">22.02</span>	<span class="number">36105.01</span>	<span class="number">0.36</span>	<span class="number">1.64</span>	<span class="number">0.90</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-14</span>	<span class="number">21.49</span>	<span class="number">21.99</span>	<span class="number">21.92</span>	<span class="number">21.48</span>	<span class="number">23331.04</span>	<span class="number">0.44</span>	<span class="number">2.05</span>	<span class="number">0.58</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#必须先列后行</span></span><br><span class="line">data[<span class="string">"open"</span>][<span class="string">"2018-02-06"</span>] </span><br><span class="line"><span class="number">22.8</span></span><br></pre></td></tr></table></figure>

<h3 id="3-1-2-按行列名进行索引"><a href="#3-1-2-按行列名进行索引" class="headerlink" title="3.1.2 按行列名进行索引"></a>3.1.2 按行列名进行索引</h3><p>ndarrary.loc</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">data.loc[&quot;2018-02-06&quot;][&quot;open&quot;]</span><br><span class="line">22.8</span><br><span class="line">data.loc[&quot;2018-02-06&quot;,&quot;open&quot;]</span><br><span class="line">22.8</span><br></pre></td></tr></table></figure>

<h3 id="3-1-3-按数组位置进行索引"><a href="#3-1-3-按数组位置进行索引" class="headerlink" title="3.1.3 按数组位置进行索引"></a>3.1.3 按数组位置进行索引</h3><p>ndarrary.iloc</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data.iloc[<span class="number">1</span>,<span class="number">0</span>]</span><br><span class="line"><span class="number">22.8</span></span><br></pre></td></tr></table></figure>

<h3 id="3-1-4-组合索引"><a href="#3-1-4-组合索引" class="headerlink" title="3.1.4 组合索引"></a>3.1.4 组合索引</h3><p>ndarrary.ix   (已经失效)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data.loc[data.index[:<span class="number">4</span>],[<span class="string">'open'</span>,<span class="string">'close'</span>,<span class="string">'high'</span>,<span class="string">'low'</span>]]</span><br><span class="line">data iloc[<span class="number">0</span>:<span class="number">4</span>, data.columns.get_indexer([<span class="string">'open'</span>,<span class="string">'close'</span>,<span class="string">'high'</span>,<span class="string">'low'</span>])]</span><br><span class="line"></span><br><span class="line">open	close	high	low</span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-27</span>	<span class="number">23.53</span>	<span class="number">24.16</span>	<span class="number">25.88</span>	<span class="number">23.53</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-26</span>	<span class="number">22.80</span>	<span class="number">23.53</span>	<span class="number">23.78</span>	<span class="number">22.80</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-23</span>	<span class="number">22.88</span>	<span class="number">22.82</span>	<span class="number">23.37</span>	<span class="number">22.71</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-22</span>	<span class="number">22.25</span>	<span class="number">22.28</span>	<span class="number">22.76</span>	<span class="number">22.02</span></span><br></pre></td></tr></table></figure>

<h2 id="3-2-赋值操作"><a href="#3-2-赋值操作" class="headerlink" title="3.2 赋值操作"></a>3.2 赋值操作</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data.open = <span class="number">100</span></span><br><span class="line">	        open	high	close	low	volume	price_change	p_change	turnover</span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-27</span>	<span class="number">100</span>		<span class="number">25.88</span>	<span class="number">24.16</span>	<span class="number">23.53</span>	<span class="number">95578.03</span>	<span class="number">0.63</span>	<span class="number">2.68</span>	<span class="number">2.39</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-26</span>	<span class="number">100</span>		<span class="number">23.78</span>	<span class="number">23.53</span>	<span class="number">22.80</span>	<span class="number">60985.11</span>	<span class="number">0.69</span>	<span class="number">3.02</span>	<span class="number">1.53</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-23</span>	<span class="number">100</span>		<span class="number">23.37</span>	<span class="number">22.82</span>	<span class="number">22.71</span>	<span class="number">52914.01</span>	<span class="number">0.54</span>	<span class="number">2.42</span>	<span class="number">1.32</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-22</span>	<span class="number">100</span>		<span class="number">22.76</span>	<span class="number">22.28</span>	<span class="number">22.02</span>	<span class="number">36105.01</span>	<span class="number">0.36</span>	<span class="number">1.64</span>	<span class="number">0.90</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-14</span>	<span class="number">100</span>		<span class="number">21.99</span>	<span class="number">21.92</span>	<span class="number">21.48</span>	<span class="number">23331.04</span>	<span class="number">0.44</span>	<span class="number">2.05</span>	<span class="number">0.58</span></span><br><span class="line"></span><br><span class="line">data.iloc[<span class="number">1</span>,<span class="number">0</span>] = <span class="number">222</span></span><br><span class="line">            open	high	close	low	volume	price_change	p_change	turnover</span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-27</span>	<span class="number">100</span>		<span class="number">25.88</span>	<span class="number">24.16</span>	<span class="number">23.53</span>	<span class="number">95578.03</span>	<span class="number">0.63</span>	<span class="number">2.68</span>	<span class="number">2.39</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-26</span>	<span class="number">222</span>		<span class="number">23.78</span>	<span class="number">23.53</span>	<span class="number">22.80</span>	<span class="number">60985.11</span>	<span class="number">0.69</span>	<span class="number">3.02</span>	<span class="number">1.53</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-23</span>	<span class="number">100</span>		<span class="number">23.37</span>	<span class="number">22.82</span>	<span class="number">22.71</span>	<span class="number">52914.01</span>	<span class="number">0.54</span>	<span class="number">2.42</span>	<span class="number">1.32</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-22</span>	<span class="number">100</span>		<span class="number">22.76</span>	<span class="number">22.28</span>	<span class="number">22.02</span>	<span class="number">36105.01</span>	<span class="number">0.36</span>	<span class="number">1.64</span>	<span class="number">0.90</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-14</span>	<span class="number">100</span>		<span class="number">21.99</span>	<span class="number">21.92</span>	<span class="number">21.48</span>	<span class="number">23331.04</span>	<span class="number">0.44</span>	<span class="number">2.05</span>	<span class="number">0.58</span></span><br></pre></td></tr></table></figure>

<h2 id="3-3-排序"><a href="#3-3-排序" class="headerlink" title="3.3 排序"></a>3.3 排序</h2><h3 id="3-3-1-对内容进行排序"><a href="#3-3-1-对内容进行排序" class="headerlink" title="3.3.1 对内容进行排序"></a>3.3.1 对内容进行排序</h3><h4 id="1-DataFrame"><a href="#1-DataFrame" class="headerlink" title="1.DataFrame"></a>1.DataFrame</h4><p>data.sort_values(key=,ascending=)</p>
<ul>
<li>单个键或者多个键，进行排序，默认升序</li>
<li>ascending=False：降序</li>
<li>ascending=True：升序</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#按high列数据，升序排列</span></span><br><span class="line">data.sort_values(by=<span class="string">"high"</span>)</span><br><span class="line">			open	high	close	low	volume	price_change	p_change	turnover</span><br><span class="line"><span class="number">2015</span><span class="number">-03</span><span class="number">-02</span>	<span class="number">12.25</span>	<span class="number">12.67</span>	<span class="number">12.52</span>	<span class="number">12.20</span>	<span class="number">96291.73</span>	<span class="number">0.32</span>	<span class="number">2.62</span>	<span class="number">3.30</span></span><br><span class="line"><span class="number">2015</span><span class="number">-03</span><span class="number">-04</span>	<span class="number">12.80</span>	<span class="number">12.92</span>	<span class="number">12.90</span>	<span class="number">12.61</span>	<span class="number">67075.44</span>	<span class="number">0.20</span>	<span class="number">1.57</span>	<span class="number">2.30</span></span><br><span class="line"><span class="number">2015</span><span class="number">-03</span><span class="number">-03</span>	<span class="number">12.52</span>	<span class="number">13.06</span>	<span class="number">12.70</span>	<span class="number">12.52</span>	<span class="number">139071.61</span>	<span class="number">0.18</span>	<span class="number">1.44</span>	<span class="number">4.76</span></span><br><span class="line"><span class="number">2015</span><span class="number">-09</span><span class="number">-07</span>	<span class="number">12.92</span>	<span class="number">13.38</span>	<span class="number">12.77</span>	<span class="number">12.63</span>	<span class="number">52490.04</span>	<span class="number">0.37</span>	<span class="number">2.98</span>	<span class="number">1.80</span></span><br><span class="line"><span class="number">2015</span><span class="number">-03</span><span class="number">-05</span>	<span class="number">12.88</span>	<span class="number">13.45</span>	<span class="number">13.16</span>	<span class="number">12.87</span>	<span class="number">93180.39</span>	<span class="number">0.26</span>	<span class="number">2.02</span>	<span class="number">3.19</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#high数据相同情况下，按price_change大小排序</span></span><br><span class="line">data.sort_values([<span class="string">"high"</span>,<span class="string">"price_change"</span>],ascending = <span class="literal">False</span>)</span><br><span class="line">			open	high	close	low	volume	price_change	p_change	turnover</span><br><span class="line"><span class="number">2015</span><span class="number">-06</span><span class="number">-10</span>	<span class="number">34.10</span>	<span class="number">36.35</span>	<span class="number">33.85</span>	<span class="number">32.23</span>	<span class="number">269033.12</span>	<span class="number">0.51</span>	<span class="number">1.53</span>	<span class="number">9.21</span></span><br><span class="line"><span class="number">2015</span><span class="number">-06</span><span class="number">-12</span>	<span class="number">34.69</span>	<span class="number">35.98</span>	<span class="number">35.21</span>	<span class="number">34.01</span>	<span class="number">159825.88</span>	<span class="number">0.82</span>	<span class="number">2.38</span>	<span class="number">5.47</span></span><br><span class="line"><span class="number">2017</span><span class="number">-10</span><span class="number">-31</span>	<span class="number">32.62</span>	<span class="number">35.22</span>	<span class="number">34.44</span>	<span class="number">32.20</span>	<span class="number">361660.88</span>	<span class="number">2.38</span>	<span class="number">7.42</span>	<span class="number">9.05</span></span><br><span class="line"><span class="number">2015</span><span class="number">-06</span><span class="number">-15</span>	<span class="number">34.99</span>	<span class="number">34.99</span>	<span class="number">31.69</span>	<span class="number">31.69</span>	<span class="number">199369.53</span>	<span class="number">-3.52</span>	<span class="number">-10.00</span>	<span class="number">6.82</span></span><br><span class="line"><span class="number">2015</span><span class="number">-06</span><span class="number">-11</span>	<span class="number">33.17</span>	<span class="number">34.98</span>	<span class="number">34.39</span>	<span class="number">32.51</span>	<span class="number">173075.73</span>	<span class="number">0.54</span>	<span class="number">1.59</span>	<span class="number">5.92</span></span><br></pre></td></tr></table></figure>

<h4 id="2-Series"><a href="#2-Series" class="headerlink" title="2. Series"></a>2. Series</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sr.sort_values(ascending=<span class="literal">False</span>)</span><br><span class="line"><span class="number">2015</span><span class="number">-06</span><span class="number">-09</span>    <span class="number">3.03</span></span><br><span class="line"><span class="number">2017</span><span class="number">-10</span><span class="number">-26</span>    <span class="number">2.68</span></span><br><span class="line"><span class="number">2015</span><span class="number">-05</span><span class="number">-21</span>    <span class="number">2.57</span></span><br><span class="line"><span class="number">2017</span><span class="number">-10</span><span class="number">-31</span>    <span class="number">2.38</span></span><br><span class="line"><span class="number">2017</span><span class="number">-06</span><span class="number">-22</span>    <span class="number">2.36</span></span><br><span class="line">Name: price_change, dtype: float64</span><br></pre></td></tr></table></figure>

<h3 id="3-3-2-对索引排序"><a href="#3-3-2-对索引排序" class="headerlink" title="3.3.2 对索引排序"></a>3.3.2 对索引排序</h3><h4 id="1-DataFrame-1"><a href="#1-DataFrame-1" class="headerlink" title="1.DataFrame"></a>1.DataFrame</h4><p>data.sort_index( )</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data.sort_index()</span><br><span class="line">			open	high	close	low	volume	price_change	p_change	turnover</span><br><span class="line"><span class="number">2015</span><span class="number">-03</span><span class="number">-02</span>	<span class="number">12.25</span>	<span class="number">12.67</span>	<span class="number">12.52</span>	<span class="number">12.20</span>	<span class="number">96291.73</span>	<span class="number">0.32</span>	<span class="number">2.62</span>	<span class="number">3.30</span></span><br><span class="line"><span class="number">2015</span><span class="number">-03</span><span class="number">-03</span>	<span class="number">12.52</span>	<span class="number">13.06</span>	<span class="number">12.70</span>	<span class="number">12.52</span>	<span class="number">139071.61</span>	<span class="number">0.18</span>	<span class="number">1.44</span>	<span class="number">4.76</span></span><br><span class="line"><span class="number">2015</span><span class="number">-03</span><span class="number">-04</span>	<span class="number">12.80</span>	<span class="number">12.92</span>	<span class="number">12.90</span>	<span class="number">12.61</span>	<span class="number">67075.44</span>	<span class="number">0.20</span>	<span class="number">1.57</span>	<span class="number">2.30</span></span><br><span class="line"><span class="number">2015</span><span class="number">-03</span><span class="number">-05</span>	<span class="number">12.88</span>	<span class="number">13.45</span>	<span class="number">13.16</span>	<span class="number">12.87</span>	<span class="number">93180.39</span>	<span class="number">0.26</span>	<span class="number">2.02</span>	<span class="number">3.19</span></span><br><span class="line"><span class="number">2015</span><span class="number">-03</span><span class="number">-06</span>	<span class="number">13.17</span>	<span class="number">14.48</span>	<span class="number">14.28</span>	<span class="number">13.13</span>	<span class="number">179831.72</span>	<span class="number">1.12</span>	<span class="number">8.51</span>	<span class="number">6.16</span></span><br></pre></td></tr></table></figure>

<h4 id="2-Series-1"><a href="#2-Series-1" class="headerlink" title="2.Series"></a>2.Series</h4><p>sr.sort_index()</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sr.sort_index()</span><br><span class="line"><span class="number">2015</span><span class="number">-03</span><span class="number">-02</span>    <span class="number">0.32</span></span><br><span class="line"><span class="number">2015</span><span class="number">-03</span><span class="number">-03</span>    <span class="number">0.18</span></span><br><span class="line"><span class="number">2015</span><span class="number">-03</span><span class="number">-04</span>    <span class="number">0.20</span></span><br><span class="line"><span class="number">2015</span><span class="number">-03</span><span class="number">-05</span>    <span class="number">0.26</span></span><br><span class="line"><span class="number">2015</span><span class="number">-03</span><span class="number">-06</span>    <span class="number">1.12</span></span><br><span class="line">              ... </span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-14</span>    <span class="number">0.44</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-22</span>    <span class="number">0.36</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-23</span>    <span class="number">0.54</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-26</span>    <span class="number">0.69</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-27</span>    <span class="number">0.63</span></span><br><span class="line">Name: price_change, Length: <span class="number">643</span>, dtype: float64</span><br></pre></td></tr></table></figure>

<h1 id="四、DataFrame运算"><a href="#四、DataFrame运算" class="headerlink" title="四、DataFrame运算"></a>四、DataFrame运算</h1><h2 id="4-1-算术运算"><a href="#4-1-算术运算" class="headerlink" title="4.1 算术运算"></a>4.1 算术运算</h2><h3 id="1-add"><a href="#1-add" class="headerlink" title="1.add( )"></a>1.add( )</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data</span><br><span class="line">			open	high	close	low	volume	price_change	p_change	turnover</span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-27</span>	<span class="number">23.53</span>	<span class="number">25.88</span>	<span class="number">24.16</span>	<span class="number">23.53</span>	<span class="number">95578.03</span>	<span class="number">0.63</span>	<span class="number">2.68</span>	<span class="number">2.39</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-26</span>	<span class="number">22.80</span>	<span class="number">23.78</span>	<span class="number">23.53</span>	<span class="number">22.80</span>	<span class="number">60985.11</span>	<span class="number">0.69</span>	<span class="number">3.02</span>	<span class="number">1.53</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-23</span>	<span class="number">22.88</span>	<span class="number">23.37</span>	<span class="number">22.82</span>	<span class="number">22.71</span>	<span class="number">52914.01</span>	<span class="number">0.54</span>	<span class="number">2.42</span>	<span class="number">1.32</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-22</span>	<span class="number">22.25</span>	<span class="number">22.76</span>	<span class="number">22.28</span>	<span class="number">22.02</span>	<span class="number">36105.01</span>	<span class="number">0.36</span>	<span class="number">1.64</span>	<span class="number">0.90</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-14</span>	<span class="number">21.49</span>	<span class="number">21.99</span>	<span class="number">21.92</span>	<span class="number">21.48</span>	<span class="number">23331.04</span>	<span class="number">0.44</span>	<span class="number">2.05</span>	<span class="number">0.58</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#两种写法都可以</span></span><br><span class="line">data.open + <span class="number">3</span></span><br><span class="line">data.open.add(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-27</span>    <span class="number">26.53</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-26</span>    <span class="number">25.80</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-23</span>    <span class="number">25.88</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-22</span>    <span class="number">25.25</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-14</span>    <span class="number">24.49</span></span><br><span class="line">Name: open, Length: <span class="number">643</span>, dtype: float64</span><br><span class="line"></span><br><span class="line">data + <span class="number">10</span></span><br><span class="line">			open	high	close	low	volume	price_change	p_change	turnover</span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-27</span>	<span class="number">33.53</span>	<span class="number">35.88</span>	<span class="number">34.16</span>	<span class="number">33.53</span>	<span class="number">95588.03</span>	<span class="number">10.63</span>	<span class="number">12.68</span>	<span class="number">12.39</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-26</span>	<span class="number">32.80</span>	<span class="number">33.78</span>	<span class="number">33.53</span>	<span class="number">32.80</span>	<span class="number">60995.11</span>	<span class="number">10.69</span>	<span class="number">13.02</span>	<span class="number">11.53</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-23</span>	<span class="number">32.88</span>	<span class="number">33.37</span>	<span class="number">32.82</span>	<span class="number">32.71</span>	<span class="number">52924.01</span>	<span class="number">10.54</span>	<span class="number">12.42</span>	<span class="number">11.32</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-22</span>	<span class="number">32.25</span>	<span class="number">32.76</span>	<span class="number">32.28</span>	<span class="number">32.02</span>	<span class="number">36115.01</span>	<span class="number">10.36</span>	<span class="number">11.64</span>	<span class="number">10.90</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-14</span>	<span class="number">31.49</span>	<span class="number">31.99</span>	<span class="number">31.92</span>	<span class="number">31.48</span>	<span class="number">23341.04</span>	<span class="number">10.44</span>	<span class="number">12.05</span>	<span class="number">10.58</span></span><br></pre></td></tr></table></figure>

<h3 id="2-sub"><a href="#2-sub" class="headerlink" title="2.sub( )"></a>2.sub( )</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data.sub(<span class="number">10</span>)</span><br><span class="line">			open	high	close	low	volume	price_change	p_change	turnover</span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-27</span>	<span class="number">13.53</span>	<span class="number">15.88</span>	<span class="number">14.16</span>	<span class="number">13.53</span>	<span class="number">95568.03</span>	<span class="number">-9.37</span>	<span class="number">-7.32</span>	<span class="number">-7.61</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-26</span>	<span class="number">12.80</span>	<span class="number">13.78</span>	<span class="number">13.53</span>	<span class="number">12.80</span>	<span class="number">60975.11</span>	<span class="number">-9.31</span>	<span class="number">-6.98</span>	<span class="number">-8.47</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-23</span>	<span class="number">12.88</span>	<span class="number">13.37</span>	<span class="number">12.82</span>	<span class="number">12.71</span>	<span class="number">52904.01</span>	<span class="number">-9.46</span>	<span class="number">-7.58</span>	<span class="number">-8.68</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-22</span>	<span class="number">12.25</span>	<span class="number">12.76</span>	<span class="number">12.28</span>	<span class="number">12.02</span>	<span class="number">36095.01</span>	<span class="number">-9.64</span>	<span class="number">-8.36</span>	<span class="number">-9.10</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-14</span>	<span class="number">11.49</span>	<span class="number">11.99</span>	<span class="number">11.92</span>	<span class="number">11.48</span>	<span class="number">23321.04</span>	<span class="number">-9.56</span>	<span class="number">-7.95</span>	<span class="number">-9.42</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#close列数据减去open列数据</span></span><br><span class="line">data[<span class="string">"close"</span>].sub(data.open)</span><br><span class="line"></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-27</span>    <span class="number">0.63</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-26</span>    <span class="number">0.73</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-23</span>   <span class="number">-0.06</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-22</span>    <span class="number">0.03</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-14</span>    <span class="number">0.43</span></span><br><span class="line">Length: <span class="number">643</span>, dtype: float64</span><br></pre></td></tr></table></figure>

<h2 id="4-2-逻辑运算"><a href="#4-2-逻辑运算" class="headerlink" title="4.2 逻辑运算"></a>4.2 逻辑运算</h2><h3 id="4-2-1-逻辑运算符"><a href="#4-2-1-逻辑运算符" class="headerlink" title="4.2.1 逻辑运算符"></a>4.2.1 逻辑运算符</h3><p>&lt;、&gt;、 |、 &amp;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data[<span class="string">"p_change"</span>] &gt; <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-27</span>     <span class="literal">True</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-26</span>     <span class="literal">True</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-23</span>     <span class="literal">True</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-22</span>    <span class="literal">False</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-14</span>     <span class="literal">True</span></span><br><span class="line">Name: p_change, Length: <span class="number">643</span>, dtype: bool</span><br></pre></td></tr></table></figure>

<p>布尔索引</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#显示p_change列数值大于2的数据</span></span><br><span class="line">data[data.p_change&gt;<span class="number">2</span>]</span><br><span class="line">			open	high	close	low	volume	price_change	p_change	turnover</span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-27</span>	<span class="number">23.53</span>	<span class="number">25.88</span>	<span class="number">24.16</span>	<span class="number">23.53</span>	<span class="number">95578.03</span>	<span class="number">0.63</span>	<span class="number">2.68</span>	<span class="number">2.39</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-26</span>	<span class="number">22.80</span>	<span class="number">23.78</span>	<span class="number">23.53</span>	<span class="number">22.80</span>	<span class="number">60985.11</span>	<span class="number">0.69</span>	<span class="number">3.02</span>	<span class="number">1.53</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-23</span>	<span class="number">22.88</span>	<span class="number">23.37</span>	<span class="number">22.82</span>	<span class="number">22.71</span>	<span class="number">52914.01</span>	<span class="number">0.54</span>	<span class="number">2.42</span>	<span class="number">1.32</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-14</span>	<span class="number">21.49</span>	<span class="number">21.99</span>	<span class="number">21.92</span>	<span class="number">21.48</span>	<span class="number">23331.04</span>	<span class="number">0.44</span>	<span class="number">2.05</span>	<span class="number">0.58</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-12</span>	<span class="number">20.70</span>	<span class="number">21.40</span>	<span class="number">21.19</span>	<span class="number">20.63</span>	<span class="number">32445.39</span>	<span class="number">0.82</span>	<span class="number">4.03</span>	<span class="number">0.81</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#显示p_change&gt;2并且low&gt;15的数据</span></span><br><span class="line">data[(data.p_change&gt;<span class="number">2</span>) &amp; (data.low&gt;<span class="number">15</span>)]</span><br><span class="line">			open	high	close	low	volume	price_change	p_change	turnover</span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-27</span>	<span class="number">23.53</span>	<span class="number">25.88</span>	<span class="number">24.16</span>	<span class="number">23.53</span>	<span class="number">95578.03</span>	<span class="number">0.63</span>	<span class="number">2.68</span>	<span class="number">2.39</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-26</span>	<span class="number">22.80</span>	<span class="number">23.78</span>	<span class="number">23.53</span>	<span class="number">22.80</span>	<span class="number">60985.11</span>	<span class="number">0.69</span>	<span class="number">3.02</span>	<span class="number">1.53</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-23</span>	<span class="number">22.88</span>	<span class="number">23.37</span>	<span class="number">22.82</span>	<span class="number">22.71</span>	<span class="number">52914.01</span>	<span class="number">0.54</span>	<span class="number">2.42</span>	<span class="number">1.32</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-14</span>	<span class="number">21.49</span>	<span class="number">21.99</span>	<span class="number">21.92</span>	<span class="number">21.48</span>	<span class="number">23331.04</span>	<span class="number">0.44</span>	<span class="number">2.05</span>	<span class="number">0.58</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-12</span>	<span class="number">20.70</span>	<span class="number">21.40</span>	<span class="number">21.19</span>	<span class="number">20.63</span>	<span class="number">32445.39</span>	<span class="number">0.82</span>	<span class="number">4.03</span>	<span class="number">0.81</span></span><br></pre></td></tr></table></figure>

<h3 id="4-2-2-逻辑运算函数"><a href="#4-2-2-逻辑运算函数" class="headerlink" title="4.2.2 逻辑运算函数"></a>4.2.2 逻辑运算函数</h3><h4 id="1-query"><a href="#1-query" class="headerlink" title="1.query( )"></a>1.query( )</h4><p>指令语句执行函数，直接指定列名即可</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data.query(<span class="string">"p_change&gt;2 &amp; low&gt;15"</span>)</span><br><span class="line">			open	high	close	low	volume	price_change	p_change	turnover</span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-27</span>	<span class="number">23.53</span>	<span class="number">25.88</span>	<span class="number">24.16</span>	<span class="number">23.53</span>	<span class="number">95578.03</span>	<span class="number">0.63</span>	<span class="number">2.68</span>	<span class="number">2.39</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-26</span>	<span class="number">22.80</span>	<span class="number">23.78</span>	<span class="number">23.53</span>	<span class="number">22.80</span>	<span class="number">60985.11</span>	<span class="number">0.69</span>	<span class="number">3.02</span>	<span class="number">1.53</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-23</span>	<span class="number">22.88</span>	<span class="number">23.37</span>	<span class="number">22.82</span>	<span class="number">22.71</span>	<span class="number">52914.01</span>	<span class="number">0.54</span>	<span class="number">2.42</span>	<span class="number">1.32</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-14</span>	<span class="number">21.49</span>	<span class="number">21.99</span>	<span class="number">21.92</span>	<span class="number">21.48</span>	<span class="number">23331.04</span>	<span class="number">0.44</span>	<span class="number">2.05</span>	<span class="number">0.58</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-12</span>	<span class="number">20.70</span>	<span class="number">21.40</span>	<span class="number">21.19</span>	<span class="number">20.63</span>	<span class="number">32445.39</span>	<span class="number">0.82</span>	<span class="number">4.03</span>	<span class="number">0.81</span></span><br></pre></td></tr></table></figure>

<h4 id="2-isin"><a href="#2-isin" class="headerlink" title="2.isin( )"></a>2.isin( )</h4><p>筛选数值范围之内的数据</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#筛选turnover列数值介于4.19和2.39之间的数据</span></span><br><span class="line">data.turnover.isin([<span class="number">4.19</span>,<span class="number">2.39</span>])</span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-27</span>     <span class="literal">True</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-26</span>    <span class="literal">False</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-23</span>    <span class="literal">False</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-22</span>    <span class="literal">False</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-14</span>    <span class="literal">False</span></span><br><span class="line">Name: turnover, Length: <span class="number">643</span>, dtype: bool</span><br><span class="line">            </span><br><span class="line">data[data.turnover.isin([<span class="number">4.19</span>,<span class="number">2.39</span>])]</span><br><span class="line">			open	high	close	low	volume	price_change	p_change	turnover</span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-27</span>	<span class="number">23.53</span>	<span class="number">25.88</span>	<span class="number">24.16</span>	<span class="number">23.53</span>	<span class="number">95578.03</span>	<span class="number">0.63</span>	<span class="number">2.68</span>	<span class="number">2.39</span></span><br><span class="line"><span class="number">2017</span><span class="number">-07</span><span class="number">-25</span>	<span class="number">23.07</span>	<span class="number">24.20</span>	<span class="number">23.70</span>	<span class="number">22.64</span>	<span class="number">167489.48</span>	<span class="number">0.67</span>	<span class="number">2.91</span>	<span class="number">4.19</span></span><br><span class="line"><span class="number">2016</span><span class="number">-09</span><span class="number">-28</span>	<span class="number">19.88</span>	<span class="number">20.98</span>	<span class="number">20.86</span>	<span class="number">19.71</span>	<span class="number">95580.75</span>	<span class="number">0.98</span>	<span class="number">4.93</span>	<span class="number">2.39</span></span><br><span class="line"><span class="number">2015</span><span class="number">-04</span><span class="number">-07</span>	<span class="number">16.54</span>	<span class="number">17.98</span>	<span class="number">17.54</span>	<span class="number">16.50</span>	<span class="number">122471.85</span>	<span class="number">0.88</span>	<span class="number">5.28</span>	<span class="number">4.19</span></span><br></pre></td></tr></table></figure>

<h2 id="4-3-统计运算"><a href="#4-3-统计运算" class="headerlink" title="4.3 统计运算"></a>4.3 统计运算</h2><h3 id="4-3-1-常用统计运算符"><a href="#4-3-1-常用统计运算符" class="headerlink" title="4.3.1 常用统计运算符"></a>4.3.1 常用统计运算符</h3><p>min、 max、 mean、 median、 var、 std</p>
<p>describe  一次性获得所有类型</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data.describe()</span><br><span class="line">		open	high	close	low	volume	price_change	p_change	turnover</span><br><span class="line">count	<span class="number">643.000000</span>	<span class="number">643.000000</span>	<span class="number">643.000000</span>	<span class="number">643.000000</span>	<span class="number">643.000000</span>	<span class="number">643.000000</span>				<span class="number">643.000000</span>	<span class="number">643.000000</span></span><br><span class="line">mean	<span class="number">21.272706</span>	<span class="number">21.900513</span>	<span class="number">21.336267</span>	<span class="number">20.771835</span>	<span class="number">99905.519114</span>	<span class="number">0.018802</span>			<span class="number">0.190280</span>	<span class="number">2.936190</span></span><br><span class="line">std	<span class="number">3.930973</span>	<span class="number">4.077578</span>	<span class="number">3.942806</span>	<span class="number">3.791968</span>	<span class="number">73879.119354</span>	<span class="number">0.898476</span>				<span class="number">4.079698</span>	<span class="number">2.079375</span></span><br><span class="line">min	<span class="number">12.250000</span>	<span class="number">12.670000</span>	<span class="number">12.360000</span>	<span class="number">12.200000</span>	<span class="number">1158.120000</span>	<span class="number">-3.520000</span>					<span class="number">-10.030000</span>	<span class="number">0.040000</span></span><br><span class="line"><span class="number">25</span>%	<span class="number">19.000000</span>	<span class="number">19.500000</span>	<span class="number">19.045000</span>	<span class="number">18.525000</span>	<span class="number">48533.210000</span>	<span class="number">-0.390000</span>				<span class="number">-1.850000</span>	<span class="number">1.360000</span></span><br><span class="line"><span class="number">50</span>%	<span class="number">21.440000</span>	<span class="number">21.970000</span>	<span class="number">21.450000</span>	<span class="number">20.980000</span>	<span class="number">83175.930000</span>	<span class="number">0.050000</span>				<span class="number">0.260000</span>	<span class="number">2.500000</span></span><br><span class="line"><span class="number">75</span>%	<span class="number">23.400000</span>	<span class="number">24.065000</span>	<span class="number">23.415000</span>	<span class="number">22.850000</span>	<span class="number">127580.055000</span>	<span class="number">0.455000</span>				<span class="number">2.305000</span>	<span class="number">3.915000</span></span><br><span class="line">max	<span class="number">34.990000</span>	<span class="number">36.350000</span>	<span class="number">35.210000</span>	<span class="number">34.010000</span>	<span class="number">501915.410000</span>	<span class="number">3.030000</span>				<span class="number">10.030000</span>	<span class="number">12.560000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#按列获得最大值（默认）</span></span><br><span class="line">data.max(<span class="number">0</span>)</span><br><span class="line">open                <span class="number">34.99</span></span><br><span class="line">high                <span class="number">36.35</span></span><br><span class="line">close               <span class="number">35.21</span></span><br><span class="line">low                 <span class="number">34.01</span></span><br><span class="line">volume          <span class="number">501915.41</span></span><br><span class="line">price_change         <span class="number">3.03</span></span><br><span class="line">p_change            <span class="number">10.03</span></span><br><span class="line">turnover            <span class="number">12.56</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#按行获得最大值</span></span><br><span class="line">data.max(<span class="number">1</span>)</span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-27</span>     <span class="number">95578.03</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-26</span>     <span class="number">60985.11</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-23</span>     <span class="number">52914.01</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-22</span>     <span class="number">36105.01</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-14</span>     <span class="number">23331.04</span></span><br></pre></td></tr></table></figure>

<h3 id="4-3-2-获取位置"><a href="#4-3-2-获取位置" class="headerlink" title="4.3.2 获取位置"></a>4.3.2 获取位置</h3><p>idxmax( )、idxmin( )…</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data.idxmax()</span><br><span class="line">open            <span class="number">2015</span><span class="number">-06</span><span class="number">-15</span></span><br><span class="line">high            <span class="number">2015</span><span class="number">-06</span><span class="number">-10</span></span><br><span class="line">close           <span class="number">2015</span><span class="number">-06</span><span class="number">-12</span></span><br><span class="line">low             <span class="number">2015</span><span class="number">-06</span><span class="number">-12</span></span><br><span class="line">volume          <span class="number">2017</span><span class="number">-10</span><span class="number">-26</span></span><br><span class="line">price_change    <span class="number">2015</span><span class="number">-06</span><span class="number">-09</span></span><br><span class="line">p_change        <span class="number">2015</span><span class="number">-08</span><span class="number">-28</span></span><br><span class="line">turnover        <span class="number">2017</span><span class="number">-10</span><span class="number">-26</span></span><br><span class="line">dtype: object</span><br></pre></td></tr></table></figure>

<h3 id="4-3-3-累计统计函数"><a href="#4-3-3-累计统计函数" class="headerlink" title="4.3.3 累计统计函数"></a>4.3.3 累计统计函数</h3><p>cumsum    计算前1/2/3/.n个数的和<br>cummax    计算前1/2/3.n个数的最大值<br>cummin     计算前1/2/3/.n个数的最小值<br>cumprod   计算前1/2/3/.n个数的积</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data.p_change</span><br><span class="line"><span class="number">2018</span><span class="number">-82</span><span class="number">-27</span>  <span class="number">2.68</span></span><br><span class="line"><span class="number">2018</span><span class="number">-92</span><span class="number">-26</span>  <span class="number">3.82</span></span><br><span class="line"><span class="number">2018</span><span class="number">-2</span><span class="number">-23</span>  <span class="number">2.42</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-22</span>  <span class="number">1.64</span></span><br><span class="line"><span class="number">2018</span><span class="number">-82</span><span class="number">-14</span>  <span class="number">2.85</span></span><br><span class="line"></span><br><span class="line">data.p_change.cumsum()</span><br><span class="line"><span class="number">2018</span><span class="number">-92</span><span class="number">-27</span>  <span class="number">2.68</span></span><br><span class="line"><span class="number">2018</span><span class="number">-2</span><span class="number">-26</span>  <span class="number">5.7</span></span><br><span class="line"><span class="number">2018</span><span class="number">-92</span><span class="number">-23</span>  <span class="number">8.12</span></span><br><span class="line"><span class="number">2018</span><span class="number">-92</span><span class="number">-22</span>  <span class="number">9.76</span></span><br><span class="line"><span class="number">2018</span><span class="number">-92</span><span class="number">-14</span>  <span class="number">11.81</span></span><br></pre></td></tr></table></figure>

<h2 id="4-4-自定义运算"><a href="#4-4-自定义运算" class="headerlink" title="4.4 自定义运算"></a>4.4 自定义运算</h2><p>apply(func,axis=0)</p>
<ul>
<li>func:自定义函数</li>
<li>axis:0默认为列，1为行</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data.apply(<span class="keyword">lambda</span> x: x.max() - x.min())</span><br><span class="line"></span><br><span class="line">open                <span class="number">22.74</span></span><br><span class="line">high                <span class="number">23.68</span></span><br><span class="line">close               <span class="number">22.85</span></span><br><span class="line">low                 <span class="number">21.81</span></span><br><span class="line">volume          <span class="number">500757.29</span></span><br><span class="line">price_change         <span class="number">6.55</span></span><br><span class="line">p_change            <span class="number">20.06</span></span><br><span class="line">turnover            <span class="number">12.52</span></span><br><span class="line">dtype: float64</span><br></pre></td></tr></table></figure>

<h1 id="五、画图"><a href="#五、画图" class="headerlink" title="五、画图"></a>五、画图</h1><h2 id="5-1-Dataframe-plot"><a href="#5-1-Dataframe-plot" class="headerlink" title="5.1 Dataframe.plot( )"></a>5.1 Dataframe.plot( )</h2><p>二维数组直接用plot( )，会自动生成统计图</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#指定volume为x轴，turnover为y轴，类型为散点图</span></span><br><span class="line">data.plot(x=<span class="string">"volume"</span>,y=<span class="string">"turnover"</span>,kind=<span class="string">"scatter"</span>)</span><br></pre></td></tr></table></figure>

<h2 id="5-2-Series-plot"><a href="#5-2-Series-plot" class="headerlink" title="5.2 Series.plot( )"></a>5.2 Series.plot( )</h2><p>同Dataframe</p>
<h1 id="六、文件读取与存储"><a href="#六、文件读取与存储" class="headerlink" title="六、文件读取与存储"></a>六、文件读取与存储</h1><h2 id="6-1-CSV文件"><a href="#6-1-CSV文件" class="headerlink" title="6.1 CSV文件"></a>6.1 CSV文件</h2><h3 id="1-读取"><a href="#1-读取" class="headerlink" title="1.读取"></a>1.读取</h3><p>pd.read_csv(path)</p>
<ul>
<li>usecols=  获取想要的列</li>
<li>names=  添加列索引</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.read_csv(<span class="string">"stock_day.csv"</span>,usecols=[<span class="string">"high"</span>,<span class="string">"low"</span>,<span class="string">"open"</span>,<span class="string">"close"</span>])</span><br><span class="line"></span><br><span class="line">			open	high	close	low</span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-27</span>	<span class="number">23.53</span>	<span class="number">25.88</span>	<span class="number">24.16</span>	<span class="number">23.53</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-26</span>	<span class="number">22.80</span>	<span class="number">23.78</span>	<span class="number">23.53</span>	<span class="number">22.80</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-23</span>	<span class="number">22.88</span>	<span class="number">23.37</span>	<span class="number">22.82</span>	<span class="number">22.71</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-22</span>	<span class="number">22.25</span>	<span class="number">22.76</span>	<span class="number">22.28</span>	<span class="number">22.02</span></span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-14</span>	<span class="number">21.49</span>	<span class="number">21.99</span>	<span class="number">21.92</span>	<span class="number">21.48</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#读取文件不含列索引，读取时添加列索引</span></span><br><span class="line">data = pd.read_csv(<span class="string">"stock_day2.csv"</span>,names=[<span class="string">'open'</span>, <span class="string">'high'</span>, <span class="string">'close'</span>, <span class="string">'low'</span>, <span class="string">'volume'</span>, <span class="string">'price_change'</span>, <span class="string">'p_change'</span>,<span class="string">'ma5'</span>, <span class="string">'ma10'</span>, <span class="string">'ma20'</span>, <span class="string">'v_ma5'</span>, <span class="string">'v_ma10'</span>, <span class="string">'v_ma20'</span>, <span class="string">'turnover'</span>])</span><br><span class="line">			open	high	close	low	volume	price_change	p_change	ma5	</span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-27</span>	<span class="number">23.53</span>	<span class="number">25.88</span>	<span class="number">24.16</span>	<span class="number">23.53</span>	<span class="number">95578.03</span>	<span class="number">0.63</span>	<span class="number">2.68</span>	<span class="number">22.942</span>	</span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-26</span>	<span class="number">22.80</span>	<span class="number">23.78</span>	<span class="number">23.53</span>	<span class="number">22.80</span>	<span class="number">60985.11</span>	<span class="number">0.69</span>	<span class="number">3.02</span>	<span class="number">22.406</span>	</span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-23</span>	<span class="number">22.88</span>	<span class="number">23.37</span>	<span class="number">22.82</span>	<span class="number">22.71</span>	<span class="number">52914.01</span>	<span class="number">0.54</span>	<span class="number">2.42</span>	<span class="number">21.938</span>	</span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-22</span>	<span class="number">22.25</span>	<span class="number">22.76</span>	<span class="number">22.28</span>	<span class="number">22.02</span>	<span class="number">36105.01</span>	<span class="number">0.36</span>	<span class="number">1.64</span>	<span class="number">21.446</span>	</span><br><span class="line"><span class="number">2018</span><span class="number">-02</span><span class="number">-14</span>	<span class="number">21.49</span>	<span class="number">21.99</span>	<span class="number">21.92</span>	<span class="number">21.48</span>	<span class="number">23331.04</span>	<span class="number">0.44</span>	<span class="number">2.05</span>	<span class="number">21.366</span></span><br></pre></td></tr></table></figure>

<h3 id="2-写入"><a href="#2-写入" class="headerlink" title="2.写入"></a>2.写入</h3><p>DataFrame.to_csv（path）</p>
<ul>
<li>columns=[ ] 需要写入文件的列</li>
<li>index=False 不保存行索引</li>
<li>header=False 不保存列索引</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#保存open列的数据</span></span><br><span class="line">data[:<span class="number">10</span>].to_csv(<span class="string">"mytest.csv"</span>,columns=[<span class="string">"open"</span>])</span><br><span class="line">	Unnamed: <span class="number">0</span>	open</span><br><span class="line"><span class="number">0</span>	<span class="number">2018</span><span class="number">-02</span><span class="number">-27</span>	<span class="number">23.53</span></span><br><span class="line"><span class="number">1</span>	<span class="number">2018</span><span class="number">-02</span><span class="number">-26</span>	<span class="number">22.80</span></span><br><span class="line"><span class="number">2</span>	<span class="number">2018</span><span class="number">-02</span><span class="number">-23</span>	<span class="number">22.88</span></span><br><span class="line"><span class="number">3</span>	<span class="number">2018</span><span class="number">-02</span><span class="number">-22</span>	<span class="number">22.25</span></span><br><span class="line"><span class="number">4</span>	<span class="number">2018</span><span class="number">-02</span><span class="number">-14</span>	<span class="number">21.49</span></span><br><span class="line"><span class="number">5</span>	<span class="number">2018</span><span class="number">-02</span><span class="number">-13</span>	<span class="number">21.40</span></span><br><span class="line"><span class="number">6</span>	<span class="number">2018</span><span class="number">-02</span><span class="number">-12</span>	<span class="number">20.70</span></span><br><span class="line"><span class="number">7</span>	<span class="number">2018</span><span class="number">-02</span><span class="number">-09</span>	<span class="number">21.20</span></span><br><span class="line"><span class="number">8</span>	<span class="number">2018</span><span class="number">-02</span><span class="number">-08</span>	<span class="number">21.79</span></span><br><span class="line"><span class="number">9</span>	<span class="number">2018</span><span class="number">-02</span><span class="number">-07</span>	<span class="number">22.69</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置index为False</span></span><br><span class="line">data[:<span class="number">10</span>].to_csv(<span class="string">"mytest.csv"</span>,columns=[<span class="string">"open"</span>],index=<span class="literal">False</span>)</span><br><span class="line">	open</span><br><span class="line"><span class="number">0</span>	<span class="number">23.53</span></span><br><span class="line"><span class="number">1</span>	<span class="number">22.80</span></span><br><span class="line"><span class="number">2</span>	<span class="number">22.88</span></span><br><span class="line"><span class="number">3</span>	<span class="number">22.25</span></span><br><span class="line"><span class="number">4</span>	<span class="number">21.49</span></span><br><span class="line"><span class="number">5</span>	<span class="number">21.40</span></span><br><span class="line"><span class="number">6</span>	<span class="number">20.70</span></span><br><span class="line"><span class="number">7</span>	<span class="number">21.20</span></span><br><span class="line"><span class="number">8</span>	<span class="number">21.79</span></span><br><span class="line"><span class="number">9</span>	<span class="number">22.69</span></span><br></pre></td></tr></table></figure>

<h2 id="6-2-HDF5文件"><a href="#6-2-HDF5文件" class="headerlink" title="6.2 HDF5文件"></a>6.2 HDF5文件</h2><p>hdf5存储三维数据的文件</p>
<p>key1 dataframe1 二维数据</p>
<p>key2 dataframe2 二维数据</p>
<p>key相当于存进大文件的小文件的文件名，在读取时必须指定key</p>
<h3 id="1-读取-1"><a href="#1-读取-1" class="headerlink" title="1.读取"></a>1.读取</h3><p>pd.read_hdf（path，key=）</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#读取h5文件中，key值为close的数组</span></span><br><span class="line">pd.read_hdf(<span class="string">"mytest.h5"</span>,key=<span class="string">"close"</span>)</span><br><span class="line">pd.read_hdf(<span class="string">"mytest.h5"</span>,key=<span class="string">"open"</span>)</span><br></pre></td></tr></table></figure>

<h3 id="2-写入-1"><a href="#2-写入-1" class="headerlink" title="2.写入"></a>2.写入</h3><p>pd.to_hdf（path，key=）</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#将day_close数组写入h5文件中，key指定为close</span></span><br><span class="line">day_close.to_hdf(<span class="string">"mytest.h5"</span>,key=<span class="string">"close"</span>)</span><br><span class="line"><span class="comment">#将day_open数组写入h5文件中，key指定为open</span></span><br><span class="line">day_open.to_hdf(<span class="string">"mytest.h5"</span>,key=<span class="string">"open"</span>)</span><br></pre></td></tr></table></figure>

<h2 id="6-3-JSON文件"><a href="#6-3-JSON文件" class="headerlink" title="6.3 JSON文件"></a>6.3 JSON文件</h2><h3 id="1-读取-2"><a href="#1-读取-2" class="headerlink" title="1.读取"></a>1.读取</h3><p>pd.read_json（path）</p>
<ul>
<li>orient=”records”</li>
<li>lines=True 按行读取，默认为False</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sa = pd.read_json(<span class="string">"Sarcasm_Headlines_Dataset.json"</span>,orient=<span class="string">"records"</span>,lines=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">	article_link										headline	is_sarcastic</span><br><span class="line"><span class="number">0</span>	https://www.huffingtonpost.com/entry/versace-b...	former versace store 	<span class="number">0</span></span><br><span class="line"><span class="number">1</span>	https://www.huffingtonpost.com/entry/roseanne-...	the <span class="string">'roseanne'</span> revival	<span class="number">0</span></span><br><span class="line"><span class="number">2</span>	https://local.theonion.com/mom-starting-to-fea...	mom starting to fear    <span class="number">1</span></span><br><span class="line"><span class="number">3</span>	https://politics.theonion.com/boehner-just-wan...	boehner just wants w    <span class="number">1</span></span><br><span class="line"><span class="number">4</span>	https://www.huffingtonpost.com/entry/jk-rowlin...	j.k. rowling wishes     <span class="number">0</span></span><br></pre></td></tr></table></figure>

<h3 id="2-写入-2"><a href="#2-写入-2" class="headerlink" title="2.写入"></a>2.写入</h3><p>pd.to_json( path)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#将数据按行写入json文件中</span></span><br><span class="line">sa.to_json(<span class="string">"mytest.json"</span>,orient=<span class="string">"records"</span>,lines=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>pandas</tag>
      </tags>
  </entry>
  <entry>
    <title>Numpy-ndarray运算</title>
    <url>/2021/01/18/Numpy-ndarray%E8%BF%90%E7%AE%97/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="一、逻辑运算"><a href="#一、逻辑运算" class="headerlink" title="一、逻辑运算"></a>一、逻辑运算</h1><h2 id="1-布尔运算"><a href="#1-布尔运算" class="headerlink" title="1.布尔运算"></a>1.布尔运算</h2><p>​        &nbsp;通过&lt; , &gt;号判断数组全部值是否符合条件，如是否大于1，大于1会置为True，小于1会置为False</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#生成0到1之间，8行10列均匀分布的数组</span></span><br><span class="line">stock_change = np.random.normal(<span class="number">0</span>,<span class="number">1</span>,(<span class="number">8</span>,<span class="number">10</span>))</span><br><span class="line"><span class="comment">#大于0.5的值置为True，否则置为False</span></span><br><span class="line">stock_change &gt; <span class="number">0.5</span></span><br><span class="line"></span><br><span class="line">array([[<span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>,</span><br><span class="line">         <span class="literal">True</span>],</span><br><span class="line">       [<span class="literal">False</span>,  <span class="literal">True</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>,</span><br><span class="line">         <span class="literal">True</span>],</span><br><span class="line">       [<span class="literal">False</span>,  <span class="literal">True</span>, <span class="literal">False</span>,  <span class="literal">True</span>,  <span class="literal">True</span>,  <span class="literal">True</span>, <span class="literal">False</span>, <span class="literal">False</span>,  <span class="literal">True</span>,</span><br><span class="line">        <span class="literal">False</span>],</span><br><span class="line">       [ <span class="literal">True</span>,  <span class="literal">True</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>,</span><br><span class="line">        <span class="literal">False</span>],</span><br><span class="line">       [<span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>,  <span class="literal">True</span>, <span class="literal">False</span>, <span class="literal">False</span>,  <span class="literal">True</span>, <span class="literal">False</span>,  <span class="literal">True</span>,</span><br><span class="line">        <span class="literal">False</span>],</span><br><span class="line">       [<span class="literal">False</span>,  <span class="literal">True</span>, <span class="literal">False</span>, <span class="literal">False</span>,  <span class="literal">True</span>,  <span class="literal">True</span>,  <span class="literal">True</span>, <span class="literal">False</span>, <span class="literal">False</span>,</span><br><span class="line">         <span class="literal">True</span>],</span><br><span class="line">       [ <span class="literal">True</span>, <span class="literal">False</span>,  <span class="literal">True</span>,  <span class="literal">True</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>,</span><br><span class="line">        <span class="literal">False</span>],</span><br><span class="line">       [ <span class="literal">True</span>, <span class="literal">False</span>,  <span class="literal">True</span>,  <span class="literal">True</span>,  <span class="literal">True</span>, <span class="literal">False</span>, <span class="literal">False</span>,  <span class="literal">True</span>, <span class="literal">False</span>,</span><br><span class="line">        <span class="literal">False</span>]])</span><br><span class="line"><span class="comment">#将大于0.5的数置为1.1</span></span><br><span class="line">stock_change[stock_change&gt;<span class="number">0.5</span>]=<span class="number">1.1</span></span><br></pre></td></tr></table></figure>

<h2 id="2-通用判断函数"><a href="#2-通用判断函数" class="headerlink" title="2.通用判断函数"></a>2.通用判断函数</h2><h3 id="nbsp-nbsp-np-all-布尔值"><a href="#nbsp-nbsp-np-all-布尔值" class="headerlink" title="&nbsp;&nbsp;np.all(布尔值)"></a>&nbsp;&nbsp;np.all(布尔值)</h3><p>​        &nbsp;只要有一个False，就返回False；只有全是True才返回True</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.all( stock_change[<span class="number">0</span>:<span class="number">2</span>,<span class="number">0</span>:<span class="number">5</span>]&gt;<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure>



<h3 id="nbsp-nbsp-np-any-布尔值"><a href="#nbsp-nbsp-np-any-布尔值" class="headerlink" title="&nbsp;&nbsp;np.any(布尔值)"></a>&nbsp;&nbsp;np.any(布尔值)</h3><p>​        &nbsp;只要有一个True，就返回True；只有全是False才返回False </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.any( stock_change[<span class="number">0</span>:<span class="number">2</span>,<span class="number">0</span>:<span class="number">5</span>]&gt;<span class="number">0</span>)</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure>



<h2 id="3-三元运算符"><a href="#3-三元运算符" class="headerlink" title="3.三元运算符"></a>3.三元运算符</h2><h3 id="nbsp-nbsp-np-where-布尔值，True的位置的值，False的位置的值"><a href="#nbsp-nbsp-np-where-布尔值，True的位置的值，False的位置的值" class="headerlink" title="&nbsp;&nbsp;np.where(布尔值，True的位置的值，False的位置的值)"></a>&nbsp;&nbsp;np.where(布尔值，True的位置的值，False的位置的值)</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">temp = stock_change[:<span class="number">4</span>,:<span class="number">4</span>]</span><br><span class="line"><span class="comment">#判断数组中的值是否大于0，是置于1，否置为0</span></span><br><span class="line">np.where(temp&gt;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">array([[<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">       [<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">       [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">       [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>]])</span><br></pre></td></tr></table></figure>

<h3 id="复合逻辑运算"><a href="#复合逻辑运算" class="headerlink" title="复合逻辑运算"></a>复合逻辑运算</h3><p>​        &nbsp;np.logical_and( ) 与运算</p>
<p>​        &nbsp;np.logical_or( ) 或运算</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#挑选大于0.5并且小于1的数</span></span><br><span class="line">np.logical_and(temp&gt;<span class="number">0.5</span>,temp&lt;<span class="number">1</span>)</span><br><span class="line">array([[<span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>],</span><br><span class="line">       [<span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>],</span><br><span class="line">       [<span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>],</span><br><span class="line">       [<span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>]])</span><br><span class="line"><span class="comment">#挑选大于0.5或小于1的数</span></span><br><span class="line">np.logical_or(temp&gt;<span class="number">0.5</span>,temp&lt;<span class="number">1</span>)</span><br><span class="line">array([[ <span class="literal">True</span>,  <span class="literal">True</span>,  <span class="literal">True</span>,  <span class="literal">True</span>],</span><br><span class="line">       [ <span class="literal">True</span>,  <span class="literal">True</span>,  <span class="literal">True</span>,  <span class="literal">True</span>],</span><br><span class="line">       [ <span class="literal">True</span>,  <span class="literal">True</span>,  <span class="literal">True</span>,  <span class="literal">True</span>],</span><br><span class="line">       [ <span class="literal">True</span>,  <span class="literal">True</span>,  <span class="literal">True</span>,  <span class="literal">True</span>]])</span><br></pre></td></tr></table></figure>



<h1 id="二、统计运算"><a href="#二、统计运算" class="headerlink" title="二、统计运算"></a>二、统计运算</h1><h2 id="1-统计指标函数"><a href="#1-统计指标函数" class="headerlink" title="1.统计指标函数"></a>1.统计指标函数</h2><h4 id="nbsp-nbsp-常见函数min、max、mean-平均值-、median-中位数-、var-方差-、std-标准差"><a href="#nbsp-nbsp-常见函数min、max、mean-平均值-、median-中位数-、var-方差-、std-标准差" class="headerlink" title="&nbsp;&nbsp;常见函数min、max、mean(平均值)、median(中位数)、var(方差)、std(标准差)"></a>&nbsp;&nbsp;常见函数min、max、mean(平均值)、median(中位数)、var(方差)、std(标准差)</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#调用方法</span></span><br><span class="line"><span class="comment">#1.temp.max(1)</span></span><br><span class="line"><span class="comment">#2.np.max(temp,0)</span></span><br><span class="line"><span class="comment">#1表示按行，0表示按列</span></span><br><span class="line">temp</span><br><span class="line">array([[<span class="number">-0.64249698</span>,  <span class="number">0.20527198</span>, <span class="number">-0.25116011</span>,  <span class="number">0.21976393</span>],</span><br><span class="line">       [<span class="number">-1.03996567</span>,  <span class="number">1.1</span>       ,  <span class="number">0.37277963</span>, <span class="number">-0.57377565</span>],</span><br><span class="line">       [ <span class="number">0.29487292</span>,  <span class="number">1.1</span>       , <span class="number">-1.39841772</span>,  <span class="number">1.1</span>       ],</span><br><span class="line">       [ <span class="number">1.1</span>       ,  <span class="number">1.1</span>       , <span class="number">-1.18514356</span>, <span class="number">-0.11440521</span>]])</span><br><span class="line"><span class="comment">#按列寻找最大值</span></span><br><span class="line">temp.max(<span class="number">0</span>)</span><br><span class="line">array([<span class="number">1.1</span>       , <span class="number">1.1</span>       , <span class="number">0.37277963</span>, <span class="number">1.1</span>       ])</span><br><span class="line"><span class="comment">#按行寻找最大值</span></span><br><span class="line">temp.max(<span class="number">1</span>)</span><br><span class="line">array([<span class="number">0.21976393</span>, <span class="number">1.1</span>       , <span class="number">1.1</span>       , <span class="number">1.1</span>       ])</span><br></pre></td></tr></table></figure>



<h2 id="2-返回最大值、最小值所在位置"><a href="#2-返回最大值、最小值所在位置" class="headerlink" title="2.返回最大值、最小值所在位置"></a>2.返回最大值、最小值所在位置</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#np.argmax(temp, axis=)  按行：1，按列：0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#np.argmin(temp, axis=)</span></span><br><span class="line">np.argmax(temp,<span class="number">1</span>)</span><br><span class="line">array([<span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>], dtype=int64)</span><br><span class="line"></span><br><span class="line">np.argmin(temp,<span class="number">0</span>)</span><br><span class="line">array([<span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>], dtype=int64)</span><br></pre></td></tr></table></figure>



<h1 id="三、数组间运算"><a href="#三、数组间运算" class="headerlink" title="三、数组间运算"></a>三、数组间运算</h1><h2 id="1-数组与数的运算"><a href="#1-数组与数的运算" class="headerlink" title="1.数组与数的运算"></a>1.数组与数的运算</h2><p>​    &nbsp;&nbsp;相当于数组每个数都进行相同的运算</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">arr1 = np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">4</span>],[<span class="number">5</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>]])</span><br><span class="line">arr1 + <span class="number">10</span></span><br><span class="line">array([[<span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">14</span>],</span><br><span class="line">       [<span class="number">15</span>, <span class="number">16</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">11</span>]])</span><br></pre></td></tr></table></figure>



<h2 id="2-数组与数组运算"><a href="#2-数组与数组运算" class="headerlink" title="2.数组与数组运算"></a>2.数组与数组运算</h2><h3 id="广播机制"><a href="#广播机制" class="headerlink" title="广播机制"></a>广播机制</h3><p>​    &nbsp;&nbsp;方便不同形状的ndarray进行运算</p>
<p><strong>&nbsp;可以运算的情况：</strong></p>
<p>&nbsp;&nbsp;1.维度相等</p>
<p>&nbsp;&nbsp;2.shape 其中对应一个地方为1</p>
<h2 id="3-矩阵运算"><a href="#3-矩阵运算" class="headerlink" title="3.矩阵运算"></a>3.矩阵运算</h2><h3 id="3-1矩阵存储方法"><a href="#3-1矩阵存储方法" class="headerlink" title="3.1矩阵存储方法"></a>3.1矩阵存储方法</h3><p>1.ndarrary二维数组</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data = np.array([[<span class="number">80</span>,<span class="number">86</span>],[<span class="number">82</span>,<span class="number">80</span>]])</span><br><span class="line">array([[<span class="number">80</span>, <span class="number">86</span>],</span><br><span class="line">       [<span class="number">82</span>, <span class="number">80</span>]])</span><br></pre></td></tr></table></figure>

<p>2.matrix数据结构</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.mat([[<span class="number">80</span>,<span class="number">86</span>],[<span class="number">82</span>,<span class="number">80</span>]])</span><br><span class="line">matrix([[<span class="number">80</span>, <span class="number">86</span>],</span><br><span class="line">        [<span class="number">82</span>, <span class="number">80</span>]])</span><br></pre></td></tr></table></figure>

<h3 id="3-2矩阵乘法运算"><a href="#3-2矩阵乘法运算" class="headerlink" title="3.2矩阵乘法运算"></a>3.2矩阵乘法运算</h3><p>要求：</p>
<p>   &nbsp;&nbsp;&nbsp;&nbsp;形状：（m ， n） * （n ， l）</p>
<p>运算规则：1.ndarray存储</p>
<p>​                    <strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;np.matmul(arr1,arr2)</strong></p>
<p>​                    <strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;np.dot(arr1,arr2)</strong></p>
<p>​                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.matrix存储</p>
<p>​                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>arr1 * arr2</strong></p>
<p>​    注：ndarray存储相乘需要满足广播机制</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">weights_mat</span><br><span class="line">matrix([[<span class="number">0.3</span>],</span><br><span class="line">        [<span class="number">0.7</span>]])</span><br><span class="line">data = np.array([[<span class="number">80</span>,<span class="number">86</span>],</span><br><span class="line">    			[<span class="number">82</span>,<span class="number">80</span>],</span><br><span class="line">    			[<span class="number">85</span>,<span class="number">78</span>],</span><br><span class="line">   				[<span class="number">90</span>,<span class="number">90</span>],</span><br><span class="line">    			[<span class="number">86</span>,<span class="number">82</span>],</span><br><span class="line">    			[<span class="number">82</span>,<span class="number">90</span>],</span><br><span class="line">    			[<span class="number">78</span>,<span class="number">80</span>],</span><br><span class="line">    			[<span class="number">92</span>,<span class="number">94</span>]])</span><br><span class="line">data * weights_mat</span><br><span class="line">matrix([[<span class="number">84.2</span>],</span><br><span class="line">        [<span class="number">80.6</span>],</span><br><span class="line">        [<span class="number">80.1</span>],</span><br><span class="line">        [<span class="number">90.</span> ],</span><br><span class="line">        [<span class="number">83.2</span>],</span><br><span class="line">        [<span class="number">87.6</span>],</span><br><span class="line">        [<span class="number">79.4</span>],</span><br><span class="line">        [<span class="number">93.4</span>]])</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>numpy</tag>
      </tags>
  </entry>
  <entry>
    <title>攻防世界-Web篇</title>
    <url>/2020/05/16/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-Web%E7%AF%87/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="1、题目：X老师让小宁同学查看一个网页的源代码，但小宁同学发现鼠标右键好像不管用了。"><a href="#1、题目：X老师让小宁同学查看一个网页的源代码，但小宁同学发现鼠标右键好像不管用了。" class="headerlink" title="1、题目：X老师让小宁同学查看一个网页的源代码，但小宁同学发现鼠标右键好像不管用了。"></a>1、题目：X老师让小宁同学查看一个网页的源代码，但小宁同学发现鼠标右键好像不管用了。</h2><p>思路及方法：</p>
<ol>
<li>浏览器快捷键<label style="color:yellow">F12</label>查看源代码</li>
<li>url前加<label style="color:yellow">view-source:</label>前即可查看</li>
</ol>
<h2 id="2、X老师上课讲了Robots协议，小宁同学却上课打了瞌睡，赶紧来教教小宁Robots协议是什么吧。"><a href="#2、X老师上课讲了Robots协议，小宁同学却上课打了瞌睡，赶紧来教教小宁Robots协议是什么吧。" class="headerlink" title="2、X老师上课讲了Robots协议，小宁同学却上课打了瞌睡，赶紧来教教小宁Robots协议是什么吧。"></a>2、X老师上课讲了Robots协议，小宁同学却上课打了瞌睡，赶紧来教教小宁Robots协议是什么吧。</h2><p>概念：<em>robots</em>是网站跟爬虫间的协议，用简单直接的txt格式文本方式告诉对应的爬虫被允许的权限</p>
<p>思路及方法：robots.txt一般放在网站根目录下，直接访问即可。在url后加<label style="color:yellow">/robots.txt</label>后访问该文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: </span><br><span class="line">Disallow: f1ag_1s_h3re.php</span><br></pre></td></tr></table></figure>

<p>看到<label style="color:yellow">f1ag_1s_h3re.php</label>不被允许爬取，所以url后直接访问该文件即可查看到flag</p>
<h2 id="3、X老师忘记删除备份文件，他派小宁同学去把备份文件找出来-一起来帮小宁同学吧！"><a href="#3、X老师忘记删除备份文件，他派小宁同学去把备份文件找出来-一起来帮小宁同学吧！" class="headerlink" title="3、X老师忘记删除备份文件，他派小宁同学去把备份文件找出来,一起来帮小宁同学吧！"></a>3、X老师忘记删除备份文件，他派小宁同学去把备份文件找出来,一起来帮小宁同学吧！</h2><p>思路及方法：进入场景后提示，</p>
<blockquote>
<h3 id="你知道index-php的备份文件名吗？"><a href="#你知道index-php的备份文件名吗？" class="headerlink" title="你知道index.php的备份文件名吗？"></a>你知道index.php的备份文件名吗？</h3></blockquote>
<p>url后加<label style="color:yellow">index.php.bak</label>下载备份文件，记事本打开即可获得flag</p>
]]></content>
      <categories>
        <category>攻防世界</category>
      </categories>
      <tags>
        <tag>攻防世界-Web篇</tag>
      </tags>
  </entry>
  <entry>
    <title>分类算法：K-近邻算法</title>
    <url>/2020/05/03/%E5%88%86%E7%B1%BB%E7%AE%97%E6%B3%95%EF%BC%9AK-%E8%BF%91%E9%82%BB%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="一、定义"><a href="#一、定义" class="headerlink" title="一、定义"></a>一、定义</h1><p>​        如果一个样本在特征空间中的k个最相似，即特征空间中最邻近)的样本中的大多数属于某个类别，则该样本也属于这个类别</p>
<div class="note info">
            <p>总结：根据你的“邻居”来推断出你的类别</p>
          </div>

<h1 id="二、距离公式"><a href="#二、距离公式" class="headerlink" title="二、距离公式"></a>二、距离公式</h1><h2 id="1、欧式距离"><a href="#1、欧式距离" class="headerlink" title="1、欧式距离"></a>1、欧式距离</h2><p>​            a(a1,a2,a3)   b(b1,b2,b3)</p>
<p>​            计算a、b两点距离：</p>
<p>​            $\sqrt{(a1-b1)^2 +(a2-b2)^2 +(a3-b3)^2}$</p>
<h2 id="2、曼哈顿距离"><a href="#2、曼哈顿距离" class="headerlink" title="2、曼哈顿距离"></a>2、曼哈顿距离</h2><p>​            a(a1,a2,a3)   b(b1,b2,b3)</p>
<p>​            计算a、b两点距离：</p>
<p>​            $|a1-b1|+|a2-b2|+|a3-b3|$</p>
<h1 id="三、API"><a href="#三、API" class="headerlink" title="三、API"></a>三、API</h1><ul>
<li>sklearn. neighbors.     KNeighborsClassifier(n_neighbors=5, algorithm=‘auto’)<ul>
<li>n_ neighbors:int,可选(默认=5),k_ neighbors查询默认使用的邻居数</li>
<li>algorithm:{‘auto’,‘ ball tree’, ‘kd_ tree’,’ brute’},可选用于计算最近邻居的算法:‘ ball tree’将会使用 BallTree, kd tree’将使用 KDTree。auto’将尝试根据传递给fit方法的值来决定最合适的算法。(不同实现方式影响效率)</li>
</ul>
</li>
</ul>
<h1 id="四、代码实现"><a href="#四、代码实现" class="headerlink" title="四、代码实现"></a>四、代码实现</h1><p>鸢尾花数据集：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_iris</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler</span><br><span class="line"><span class="keyword">from</span> sklearn.neighbors <span class="keyword">import</span> KNeighborsClassifier</span><br><span class="line">   </span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">knn_iris</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#1、获取数据</span></span><br><span class="line">    iris = load_iris()</span><br><span class="line">    <span class="comment">#2、划分数据集</span></span><br><span class="line">    x_train,x_test,y_train,y_test = train_test_split(iris.data,iris.target,random_state=<span class="number">6</span>)</span><br><span class="line">    <span class="comment">#3、特征工程：标准化</span></span><br><span class="line">    transfer = StandardScaler()</span><br><span class="line">    x_train = transfer.fit_transform(x_train)</span><br><span class="line">    x_test = transfer.transform(x_test)</span><br><span class="line">    <span class="comment">#4、KNN算法预估器</span></span><br><span class="line">    estimator = KNeighborsClassifier(n_neighbors=<span class="number">22</span>)</span><br><span class="line">    estimator.fit(x_train,y_train)</span><br><span class="line">    <span class="comment">#5、模型评估</span></span><br><span class="line">    <span class="comment">#方法1：直接比对真实值和预测值</span></span><br><span class="line">    y_predict = estimator.predict(x_test)</span><br><span class="line">    print(<span class="string">"y_predict:\n"</span>,y_predict)</span><br><span class="line">    print(<span class="string">"直接比对真实值和预测值：\n"</span>,y_test == y_predict)</span><br><span class="line">    <span class="comment">#方法2：计算准确率吧</span></span><br><span class="line">    score = estimator.score(x_test,y_test)</span><br><span class="line">    print(<span class="string">"准确率为：\n"</span>,score)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br></pre></td></tr></table></figure>

<h1 id="五、运行结果"><a href="#五、运行结果" class="headerlink" title="五、运行结果"></a>五、运行结果</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">y_predict:</span><br><span class="line"> [0 2 0 0 2 1 2 0 2 1 2 1 2 2 1 1 2 1 1 0 0 2 0 0 1 1 1 2 0 1 0 1 0 0 1 2 1</span><br><span class="line"> 2]</span><br><span class="line">直接比对真实值和预测值：</span><br><span class="line"> [ True  True  True  True  True  True  True  True  True  True  True  True</span><br><span class="line">  True  True  True False  True  True  True  True  True  True  True  True</span><br><span class="line">  True  True  True  True  True  True  True  True  True  True False  True</span><br><span class="line">  True  True]</span><br><span class="line">准确率为：</span><br><span class="line"> 0.9473684210526315</span><br></pre></td></tr></table></figure>

<h1 id="六、总结"><a href="#六、总结" class="headerlink" title="六、总结"></a>六、总结</h1><p>优点：</p>
<div class="note success no-icon">
            <p>简单,易于理解,易于实现,无需训练</p>
          </div>

缺点：

<div class="note danger no-icon">
            <p>懒惰算法,对测试样本分类时的计算量大,内存开销大</p>
          </div>

<div class="note danger no-icon">
            <p>必须指定K值,K值选择不当则分类精度不能保证</p>
          </div>

<p>使用场景:小数据场景,几千~几万样本,具体场景具体业务去测试</p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>k-近邻算法</tag>
      </tags>
  </entry>
  <entry>
    <title>特征降维-主成分分析</title>
    <url>/2020/04/28/%E7%89%B9%E5%BE%81%E9%99%8D%E7%BB%B4-%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="一、模块"><a href="#一、模块" class="headerlink" title="一、模块"></a>一、模块</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sklearn. feature_selection</span><br></pre></td></tr></table></figure>

<h1 id="二、定义"><a href="#二、定义" class="headerlink" title="二、定义"></a>二、定义</h1><p>高维数据转化为低维数据的过程,在此过程中可能会舍弃原有数据、创造新的变量</p>
<p>使数据维数压缩,尽可能降低原数据的维数(复杂度),损失少量信息。</p>
<p>*<em>应用: *</em>回归分析或者聚类分析当中</p>
<p><img src="/" class="lazyload" data-src="https://i.loli.net/2020/04/28/SNkqCdV4RInBiWv.png"  alt="image.png"></p>
<p><strong>原理：</strong>找到一条合适直线，通过一个矩阵计算得出主成分分析的结果</p>
<h1 id="三、API"><a href="#三、API" class="headerlink" title="三、API"></a>三、API</h1><ul>
<li><p>sklearn.decomposition.PCA(n_components=None)</p>
</li>
<li><ul>
<li><p>将数据分解为较低维数空间</p>
</li>
<li><p>n_components</p>
</li>
<li><ul>
<li>小数:表示保留百分之多少的信息</li>
<li>整数:减少到多少特征</li>
</ul>
</li>
<li><p>PCA. fit_transfor( X)  X :numpy array格式的数据</p>
</li>
<li><p>[n_samples, n_features]</p>
</li>
<li><p>返回值:转换后指定维度的array</p>
</li>
</ul>
</li>
</ul>
<h1 id="四、代码实现"><a href="#四、代码实现" class="headerlink" title="四、代码实现"></a>四、代码实现</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.decomposition <span class="keyword">import</span> PCA</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pca_demo</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#pca降维</span></span><br><span class="line">    data = [[<span class="number">2</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">5</span>],[<span class="number">6</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">8</span>],[<span class="number">5</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">1</span>]]</span><br><span class="line">    <span class="comment">#1、实例化一个转换器类</span></span><br><span class="line">    transfer = PCA(n_components=<span class="number">2</span>)</span><br><span class="line">    <span class="comment">#2、调用fit_transform</span></span><br><span class="line">    data_new = transfer.fit_transform(data)</span><br><span class="line">    print(<span class="string">"data_new: \n"</span>,data_new)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br></pre></td></tr></table></figure>

<h1 id="五、运行结果"><a href="#五、运行结果" class="headerlink" title="五、运行结果"></a>五、运行结果</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data_new: </span><br><span class="line"> [[ <span class="number">1.22879107e-15</span>  <span class="number">3.82970843e+00</span>]</span><br><span class="line"> [ <span class="number">5.74456265e+00</span> <span class="number">-1.91485422e+00</span>]</span><br><span class="line"> 	 [<span class="number">-5.74456265e+00</span> <span class="number">-1.91485422e+00</span>]]</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>主成分分析</tag>
      </tags>
  </entry>
  <entry>
    <title>特征降维-Filter(过滤式)特征选择</title>
    <url>/2020/04/28/%E7%89%B9%E5%BE%81%E9%99%8D%E7%BB%B4-Filter-%E8%BF%87%E6%BB%A4%E5%BC%8F-%E7%89%B9%E5%BE%81%E9%80%89%E6%8B%A9/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="一、模块"><a href="#一、模块" class="headerlink" title="一、模块"></a>一、模块</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sklearn. feature_selection</span><br></pre></td></tr></table></figure>

<h1 id="二、过滤式"><a href="#二、过滤式" class="headerlink" title="二、过滤式"></a>二、过滤式</h1><h2 id="1、低方差特征过滤"><a href="#1、低方差特征过滤" class="headerlink" title="1、低方差特征过滤"></a>1、低方差特征过滤</h2><p>删除低方差的一些特征,再结合方差的大小来考虑这个方式的角度</p>
<ul>
<li>特征方差小:某个特征大多样本的值比较相近</li>
<li>特征方差大:某个特征很多样本的值都有差别</li>
</ul>
<h3 id="1-1、API"><a href="#1-1、API" class="headerlink" title="1.1、API"></a>1.1、API</h3><ul>
<li><p>sklearn .feature_ selection     .VarianceThreshold(threshold=0.0)</p>
</li>
<li><ul>
<li><p>删除所有低方差特征</p>
</li>
<li><p>Variance.fit_transform(X)</p>
</li>
<li><ul>
<li>X: numpy array格式的数据[ n_ samples, n_features]</li>
<li>返回值: 训练集差异低于 threshold的特征将被删除。默认值是保留所有非零方差特征,即删除所有样本中具有相同值的特征。</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="2、相关系数"><a href="#2、相关系数" class="headerlink" title="2、相关系数"></a>2、相关系数</h2><h3 id="2-1、皮尔逊相关系数"><a href="#2-1、皮尔逊相关系数" class="headerlink" title="2.1、皮尔逊相关系数"></a>2.1、皮尔逊相关系数</h3><p>反映变量之间相关关系密切程度的统计指标</p>
<p><strong>公式：</strong></p>
<p>​        <img src="/" class="lazyload" data-src="https://i.loli.net/2020/04/28/mjwap1ksLBTuQv3.png"  alt="image.png"></p>
<p><strong>示例：</strong></p>
<p><img src="/" class="lazyload" data-src="https://i.loli.net/2020/04/28/9BNkvnSGTmeUK6x.png"  alt="image.png"></p>
<p>结果为： 0.9942</p>
<p>所以我们最终得出结论是广告投入费与月平均销售额之间有高度的正相关</p>
<h3 id="2-2、取值范围"><a href="#2-2、取值范围" class="headerlink" title="2.2、取值范围"></a>2.2、取值范围</h3><p>相关系数的值介于-1与+1之间,即-1≤r≤+1。其性质如下</p>
<ul>
<li><p>当r&gt;0时,表示两变量正相关,r&lt;0时,两变量为负相关</p>
</li>
<li><p>当|r|=1时,表示两变量为完全相关,当r=0时,表示两变量间无相关关系</p>
</li>
<li><p>当0&lt;|r|&lt;1时,表示两变量存在一定程度的相关。且r越接近1,两变量间线</p>
<p>性关系越密切;|r|越接近于0,表示两变量的线性相关越弱</p>
</li>
<li><p>一般可按三级划分:|r|&lt;0.4为低度相关;0.4≤|r|≤0.7为显著性相关;0.7≤|r|</p>
<p>&lt;1为高度线性相关</p>
</li>
</ul>
<h3 id="2-3、API"><a href="#2-3、API" class="headerlink" title="2.3、API"></a>2.3、API</h3><p>from scipy.stats import pearsonr</p>
<ul>
<li>x:(N, )array_like</li>
<li>y: (N, )     array_like Returns:(Pearson’s correlation coefficient, p-value)</li>
</ul>
<h1 id="三、代码实现"><a href="#三、代码实现" class="headerlink" title="三、代码实现"></a>三、代码实现</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy.stats <span class="keyword">import</span> pearsonr</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">variance_demo</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#过滤低方差特征</span></span><br><span class="line">    <span class="comment">#1、获取数据</span></span><br><span class="line">    data = pd.read_csv(<span class="string">"factor_returns.csv"</span>)</span><br><span class="line">    </span><br><span class="line">    data = data.iloc[:,<span class="number">1</span>:<span class="number">-2</span>]</span><br><span class="line">    print(<span class="string">"data:\n"</span>,data)</span><br><span class="line">    <span class="comment">#2、实例化一个转换器</span></span><br><span class="line">    transfer = VarianceThreshold()</span><br><span class="line">    <span class="comment">#3、调用fit_transform</span></span><br><span class="line">    data_new = transfer.fit_transform(data)</span><br><span class="line">    print(<span class="string">"data_new:\n"</span>,data_new)</span><br><span class="line">    <span class="comment">#计算某两个变量之间的相关系数</span></span><br><span class="line">    r1 = pearsonr(data[<span class="string">"pe_ratio"</span>],data[<span class="string">"pb_ratio"</span>])</span><br><span class="line">    r2 = pearsonr(data[<span class="string">"revenue"</span>],data[<span class="string">"total_expense"</span>])</span><br><span class="line">    print(<span class="string">"相关系数：\n"</span>,r2)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br></pre></td></tr></table></figure>

<h1 id="四、运行结果"><a href="#四、运行结果" class="headerlink" title="四、运行结果"></a>四、运行结果</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data:</span><br><span class="line">       pe_ratio  pb_ratio  ...       revenue  total_expense</span><br><span class="line"><span class="number">0</span>       <span class="number">5.9572</span>    <span class="number">1.1818</span>  ...  <span class="number">2.070140e+10</span>   <span class="number">1.088254e+10</span></span><br><span class="line"><span class="number">1</span>       <span class="number">7.0289</span>    <span class="number">1.5880</span>  ...  <span class="number">2.930837e+10</span>   <span class="number">2.378348e+10</span></span><br><span class="line"><span class="number">2</span>    <span class="number">-262.7461</span>    <span class="number">7.0003</span>  ...  <span class="number">1.167983e+07</span>   <span class="number">1.203008e+07</span></span><br><span class="line"><span class="number">3</span>      <span class="number">16.4760</span>    <span class="number">3.7146</span>  ...  <span class="number">9.189387e+09</span>   <span class="number">7.935543e+09</span></span><br><span class="line"><span class="number">4</span>      <span class="number">12.5878</span>    <span class="number">2.5616</span>  ...  <span class="number">8.951453e+09</span>   <span class="number">7.091398e+09</span></span><br><span class="line"><span class="meta">... </span>       ...       ...  ...           ...            ...</span><br><span class="line"><span class="number">2313</span>   <span class="number">25.0848</span>    <span class="number">4.2323</span>  ...  <span class="number">1.148170e+10</span>   <span class="number">1.041419e+10</span></span><br><span class="line"><span class="number">2314</span>   <span class="number">59.4849</span>    <span class="number">1.6392</span>  ...  <span class="number">1.731713e+09</span>   <span class="number">1.089783e+09</span></span><br><span class="line"><span class="number">2315</span>   <span class="number">39.5523</span>    <span class="number">4.0052</span>  ...  <span class="number">1.789082e+10</span>   <span class="number">1.749295e+10</span></span><br><span class="line"><span class="number">2316</span>   <span class="number">52.5408</span>    <span class="number">2.4646</span>  ...  <span class="number">6.465392e+09</span>   <span class="number">6.009007e+09</span></span><br><span class="line"><span class="number">2317</span>   <span class="number">14.2203</span>    <span class="number">1.4103</span>  ...  <span class="number">4.509872e+10</span>   <span class="number">4.132842e+10</span></span><br><span class="line"></span><br><span class="line">[<span class="number">2318</span> rows x <span class="number">9</span> columns]</span><br><span class="line">data_new:</span><br><span class="line"> [[ <span class="number">5.95720000e+00</span>  <span class="number">1.18180000e+00</span>  <span class="number">8.52525509e+10</span> ...  <span class="number">2.01000000e+00</span></span><br><span class="line">   <span class="number">2.07014010e+10</span>  <span class="number">1.08825400e+10</span>]</span><br><span class="line"> [ <span class="number">7.02890000e+00</span>  <span class="number">1.58800000e+00</span>  <span class="number">8.41133582e+10</span> ...  <span class="number">3.26000000e-01</span></span><br><span class="line">   <span class="number">2.93083692e+10</span>  <span class="number">2.37834769e+10</span>]</span><br><span class="line"> [<span class="number">-2.62746100e+02</span>  <span class="number">7.00030000e+00</span>  <span class="number">5.17045520e+08</span> ... <span class="number">-6.00000000e-03</span></span><br><span class="line">   <span class="number">1.16798290e+07</span>  <span class="number">1.20300800e+07</span>]</span><br><span class="line"> ...</span><br><span class="line"> [ <span class="number">3.95523000e+01</span>  <span class="number">4.00520000e+00</span>  <span class="number">1.70243430e+10</span> ...  <span class="number">2.20000000e-01</span></span><br><span class="line">   <span class="number">1.78908166e+10</span>  <span class="number">1.74929478e+10</span>]</span><br><span class="line"> [ <span class="number">5.25408000e+01</span>  <span class="number">2.46460000e+00</span>  <span class="number">3.28790988e+10</span> ...  <span class="number">1.21000000e-01</span></span><br><span class="line">   <span class="number">6.46539204e+09</span>  <span class="number">6.00900728e+09</span>]</span><br><span class="line"> [ <span class="number">1.42203000e+01</span>  <span class="number">1.41030000e+00</span>  <span class="number">5.91108572e+10</span> ...  <span class="number">2.47000000e-01</span></span><br><span class="line">   <span class="number">4.50987171e+10</span>  <span class="number">4.13284212e+10</span>]]</span><br><span class="line">相关系数：</span><br><span class="line"> (<span class="number">0.9958450413136111</span>, <span class="number">0.0</span>)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>Filter特征选择</tag>
      </tags>
  </entry>
  <entry>
    <title>机器学习-特征预处理：标准化</title>
    <url>/2020/04/28/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E7%89%B9%E5%BE%81%E9%A2%84%E5%A4%84%E7%90%86%EF%BC%9A%E6%A0%87%E5%87%86%E5%8C%96/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="一、定义"><a href="#一、定义" class="headerlink" title="一、定义"></a>一、定义</h1><p>通过对原始数据进行变换把数据变换到均值为0,标准差为1范围內</p>
<h1 id="二、公式"><a href="#二、公式" class="headerlink" title="二、公式"></a>二、公式</h1><p><img src="/" class="lazyload" data-src="https://i.loli.net/2020/04/28/sfxQtiX7MH5vjW3.png"  alt="image.png"></p>
<p>​    示例：</p>
<p><img src="/" class="lazyload" data-src="https://i.loli.net/2020/04/28/ITWDcukps59Hwb3.png"  alt="image.png"></p>
<h1 id="三、API"><a href="#三、API" class="headerlink" title="三、API"></a>三、API</h1><p><strong>sklearn. preprocessing .MinMaxScaler (feature_range=(0, 1)…)</strong></p>
<p>​        <strong>o MinMaxScalar .fit_ transform(X)</strong></p>
<pre><code>**X: numpy array格式的数据[n_ samples, n_ features]**</code></pre><p>​        <strong>返回值:转换后的形状相同的array</strong></p>
<h1 id="四、代码实例"><a href="#四、代码实例" class="headerlink" title="四、代码实例"></a>四、代码实例</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">stand_demo</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#标准化</span></span><br><span class="line">    <span class="comment">#归一化</span></span><br><span class="line">    <span class="comment">#1.获取数据</span></span><br><span class="line">    data = pd.read_csv(<span class="string">"dating.txt"</span>)</span><br><span class="line">    data = data.iloc[:,:<span class="number">3</span>]</span><br><span class="line">    print(<span class="string">"data:\n"</span>,data)</span><br><span class="line">    <span class="comment">#2.实例化一个转换器类</span></span><br><span class="line">    transfer = StandardScaler()</span><br><span class="line">    <span class="comment">#3.调用fit_transform</span></span><br><span class="line">    data_new = transfer.fit_transform(data)</span><br><span class="line">    print(<span class="string">"data_new:\n"</span>,data_new)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br></pre></td></tr></table></figure>

<h1 id="五、运行结果"><a href="#五、运行结果" class="headerlink" title="五、运行结果"></a>五、运行结果</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">data:</span><br><span class="line">     milage     Liters  Consumtime</span><br><span class="line">0    40920   8.326976    0.953952</span><br><span class="line">1    14488   7.153469    1.673904</span><br><span class="line">2    26052   1.441871    0.895124</span><br><span class="line">3    75136  13.147394    0.428964</span><br><span class="line">4    38344   1.669788    0.134296</span><br><span class="line">5    72993  18.141748    1.932955</span><br><span class="line">6    35948   6.838792    1.213192</span><br><span class="line">7    42666  13.276369    0.543888</span><br><span class="line">8    67497   8.631577    0.749278</span><br><span class="line">9    35483  12.273169    1.508953</span><br><span class="line">10   50242   3.723498    0.831917</span><br><span class="line">11   63275   8.385879    1.669485</span><br><span class="line">12    5569   4.875435    0.728658</span><br><span class="line">13   51052   4.688098    0.625224</span><br><span class="line">14   77372  15.299570    0.331351</span><br><span class="line">15   43673   1.889461    0.191283</span><br><span class="line">16   61364   7.516754    1.269164</span><br><span class="line">17   69673  14.239195    0.261333</span><br><span class="line">18   15669   0.000000    1.259185</span><br><span class="line">data_new:</span><br><span class="line"> [[ 0.12304713  0.24281169  0.08961701]</span><br><span class="line"> [-1.09340804  0.00255574  1.51545904]</span><br><span class="line"> [-0.5612089  -1.16679851 -0.02688998]</span><br><span class="line"> [ 1.69773803  1.22971173 -0.95010503]</span><br><span class="line"> [ 0.00449429 -1.12013631 -1.53368563]</span><br><span class="line"> [ 1.59911275  2.25222225  2.02850131]</span><br><span class="line"> [-0.10577457 -0.06186912  0.60303358]</span><br><span class="line"> [ 0.20340165  1.2561172  -0.7225017 ]</span><br><span class="line"> [ 1.34617549  0.30517366 -0.31573334]</span><br><span class="line"> [-0.12717483  1.05072877  1.18877883]</span><br><span class="line"> [ 0.5520648  -0.6996735  -0.15206943]</span><br><span class="line"> [ 1.15187034  0.2548711   1.50670735]</span><br><span class="line"> [-1.50387882 -0.46383365 -0.3565706 ]</span><br><span class="line"> [ 0.58934267 -0.50218777 -0.56141834]</span><br><span class="line"> [ 1.80064336  1.6703338  -1.14342447]</span><br><span class="line"> [ 0.24974587 -1.07516193 -1.42082469]</span><br><span class="line"> [ 1.06392218  0.07693228  0.71388434]</span><br><span class="line"> [ 1.4463195   1.45323974 -1.28209289]</span><br><span class="line"> [-1.03905598 -1.4619975   0.69412125]]</span><br></pre></td></tr></table></figure>

<h3 id="六、总结"><a href="#六、总结" class="headerlink" title="六、总结"></a>六、总结</h3><p>在已有样本足够多的情况下比较稳定，适合现代嘈杂大数据场景。</p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>标准化</tag>
      </tags>
  </entry>
  <entry>
    <title>机器学习-特征预处理：归一化</title>
    <url>/2020/04/23/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E7%89%B9%E5%BE%81%E9%A2%84%E5%A4%84%E7%90%86%EF%BC%9A%E5%BD%92%E4%B8%80%E5%8C%96/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="一、定义"><a href="#一、定义" class="headerlink" title="一、定义"></a>一、定义</h3><p>通过对原始数据进行变换把数据映射到(默认为[0,1])之间</p>
<h3 id="二、公式"><a href="#二、公式" class="headerlink" title="二、公式"></a>二、公式</h3><p><img src="/" class="lazyload" data-src="https://i.loli.net/2020/04/23/rkHtfgzn7aoDAjU.png"  alt="image.png"></p>
<a id="more"></a>

<h3 id="三、API"><a href="#三、API" class="headerlink" title="三、API"></a>三、API</h3><p>sklearn. preprocessing .MinMaxScaler (feature_range=(0, 1)…)</p>
<p>​    o MinMaxScalar .fit_ transform(X)</p>
<pre><code>X: numpy array格式的数据[n_ samples, n_ features]</code></pre><p>​    返回值:转换后的形状相同的array</p>
<h3 id="四、代码实例"><a href="#四、代码实例" class="headerlink" title="四、代码实例"></a>四、代码实例</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> MinMaxScaler</span><br><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">minmax_demo</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#归一化</span></span><br><span class="line">    <span class="comment">#1.获取数据</span></span><br><span class="line">    data = pd.read_csv(<span class="string">"dating.txt"</span>)</span><br><span class="line">    data = data.iloc[:,:<span class="number">3</span>]</span><br><span class="line">    print(<span class="string">"data:\n"</span>,data)</span><br><span class="line">    <span class="comment">#2.实例化一个转换器类</span></span><br><span class="line">    transfer = MinMaxScaler(feature_range=[<span class="number">0</span>,<span class="number">1</span>])</span><br><span class="line">    <span class="comment">#3.调用fit_transform</span></span><br><span class="line">    data_new = transfer.fit_transform(data)</span><br><span class="line">    print(<span class="string">"data_new:\n"</span>,data_new)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br></pre></td></tr></table></figure>

<h3 id="五、运行结果"><a href="#五、运行结果" class="headerlink" title="五、运行结果"></a>五、运行结果</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">data:</span><br><span class="line">     milage     Liters  Consumtime</span><br><span class="line">0    40920   8.326976    0.953952</span><br><span class="line">1    14488   7.153469    1.673904</span><br><span class="line">2    26052   1.441871    0.895124</span><br><span class="line">3    75136  13.147394    0.428964</span><br><span class="line">4    38344   1.669788    0.134296</span><br><span class="line">5    72993  18.141748    1.932955</span><br><span class="line">6    35948   6.838792    1.213192</span><br><span class="line">7    42666  13.276369    0.543888</span><br><span class="line">8    67497   8.631577    0.749278</span><br><span class="line">9    35483  12.273169    1.508953</span><br><span class="line">10   50242   3.723498    0.831917</span><br><span class="line">11   63275   8.385879    1.669485</span><br><span class="line">12    5569   4.875435    0.728658</span><br><span class="line">13   51052   4.688098    0.625224</span><br><span class="line">14   77372  15.299570    0.331351</span><br><span class="line">15   43673   1.889461    0.191283</span><br><span class="line">16   61364   7.516754    1.269164</span><br><span class="line">17   69673  14.239195    0.261333</span><br><span class="line">18   15669   0.000000    1.259185</span><br><span class="line">19   28488  10.528555    1.304844</span><br><span class="line">20    6487   3.549265    0.822483</span><br><span class="line">21   37708   2.991551    0.833920</span><br><span class="line">22   22620   5.297865    0.638306</span><br><span class="line">23   28782   6.593803    0.187108</span><br><span class="line">24   19739   2.816760    1.686209</span><br><span class="line">25   36788  12.458258    0.649617</span><br><span class="line">26    5741   0.000000    1.656418</span><br><span class="line">27   28567   9.968648    0.731232</span><br><span class="line">28    6808   1.364838    0.640103</span><br><span class="line">data_new:</span><br><span class="line"> [[0.49233319 0.45899524 0.45570394]</span><br><span class="line"> [0.12421487 0.3943098  0.85597548]</span><br><span class="line"> [0.28526663 0.07947806 0.42299736]</span><br><span class="line"> [0.96885924 0.72470382 0.1638265 ]</span><br><span class="line"> [0.45645725 0.09204119 0.        ]</span><br><span class="line"> [0.93901369 1.         1.        ]</span><br><span class="line"> [0.42308817 0.37696434 0.59983354]</span><br><span class="line"> [0.51664972 0.73181311 0.22772076]</span><br><span class="line"> [0.86247093 0.4757853  0.34191139]</span><br><span class="line"> [0.41661212 0.67651524 0.76426771]</span><br><span class="line"> [0.62216063 0.20524472 0.38785618]</span><br><span class="line"> [0.80367116 0.46224206 0.85351865]</span><br><span class="line"> [0.         0.26874119 0.33044729]</span><br><span class="line"> [0.6334415  0.2584149  0.27294112]</span><br><span class="line"> [1.         0.84333494 0.10955662]</span><br><span class="line"> [0.53067421 0.10414989 0.03168305]</span><br><span class="line"> [0.77705667 0.41433461 0.63095228]</span><br><span class="line"> [0.89277607 0.7848855  0.07062873]</span><br><span class="line"> [0.14066265 0.         0.62540426]</span><br><span class="line"> [0.31919279 0.58034953 0.65078928]</span><br><span class="line"> [0.01278498 0.19564074 0.38261116]</span><br><span class="line"> [0.44759968 0.16489872 0.38896978]</span><br><span class="line"> [0.23746919 0.29202616 0.28021432]</span><br><span class="line"> [0.32328733 0.36346018 0.02936187]</span><br><span class="line"> [0.19734551 0.15526398 0.86281669]</span><br><span class="line"> [0.43478685 0.68671762 0.28650289]</span><br><span class="line"> [0.00239544 0.         0.84625379]</span><br><span class="line"> [0.32029302 0.54948663 0.33187836]</span><br><span class="line"> [0.01725555 0.07523189 0.28121339]]</span><br></pre></td></tr></table></figure>

<h3 id="六、总结"><a href="#六、总结" class="headerlink" title="六、总结"></a>六、总结</h3><p>最大值最小值是变化的，最大值与最小值非常容易受异常点影响</p>
<p>所以这种方法鲁棒性较差,只适合传统精确小数据场景</p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>归一化</tag>
      </tags>
  </entry>
  <entry>
    <title>机器学习-字典、文字特征提取</title>
    <url>/2020/04/20/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E5%AD%97%E5%85%B8%E3%80%81%E6%96%87%E5%AD%97%E7%89%B9%E5%BE%81%E6%8F%90%E5%8F%96/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="一、字典特征提取"><a href="#一、字典特征提取" class="headerlink" title="一、字典特征提取"></a>一、字典特征提取</h4><p><strong>1、导入包</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_extraction <span class="keyword">import</span> DictVectorizer</span><br></pre></td></tr></table></figure>

<p><strong>2、函数编写</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dict_demo</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#字典特征提取</span></span><br><span class="line">    data = [&#123;<span class="string">'city'</span>:<span class="string">'北京'</span>,<span class="string">'temperature'</span>:<span class="number">100</span>&#125;,&#123;<span class="string">'city'</span>:<span class="string">'上海'</span>,<span class="string">'temperature'</span>:<span class="number">60</span>&#125;,&#123;<span class="string">'city'</span>:<span class="string">'深圳'</span>,<span class="string">'temperature'</span>:<span class="number">30</span>&#125;]</span><br><span class="line">    <span class="comment">#1、实例化一个转换器类</span></span><br><span class="line">    transfer = DictVectorizer(sparse=<span class="literal">False</span>) <span class="comment">#显示为全矩阵</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#2、调用fit_transform()</span></span><br><span class="line">    data_new = transfer.fit_transform(data)</span><br><span class="line">    print(<span class="string">"data_new:\n"</span>,data_new)</span><br><span class="line">    print(<span class="string">"特征名字：\n"</span>,transfer.get_feature_names())</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br></pre></td></tr></table></figure>

<p><strong>3、运行结果</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">data_new:</span><br><span class="line"> [[  0.   1.   0. 100.]</span><br><span class="line"> [  1.   0.   0.  60.]</span><br><span class="line"> [  0.   0.   1.  30.]]</span><br><span class="line">特征名字：</span><br><span class="line"> [&#39;city&#x3D;上海&#39;, &#39;city&#x3D;北京&#39;, &#39;city&#x3D;深圳&#39;, &#39;temperature&#39;]</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h4 id="二、文字特征提取"><a href="#二、文字特征提取" class="headerlink" title="二、文字特征提取"></a>二、文字特征提取</h4><h5 id="Countvectorizer提取"><a href="#Countvectorizer提取" class="headerlink" title="Countvectorizer提取"></a>Countvectorizer提取</h5><p>统计每个样本特征词出现的个数</p>
<p><strong>1、导入包</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_extraction.text <span class="keyword">import</span> CountVectorizer</span><br><span class="line"><span class="keyword">import</span> jieba</span><br></pre></td></tr></table></figure>

<p><strong>2、函数编写</strong></p>
<p>英文分词：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">count_demo</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#文本特征抽取</span></span><br><span class="line">    data = [<span class="string">"Life is short, i like python"</span>, <span class="string">"Flife is too Long, i dislike python"</span>]</span><br><span class="line">    <span class="comment">#实例化一个转换器类</span></span><br><span class="line">    transfer = CountVectorizer(stop_words=[<span class="string">"is"</span>,<span class="string">"too"</span>])</span><br><span class="line">    <span class="comment">#调用fit_fransform()</span></span><br><span class="line">    data_new = transfer.fit_transform(data)</span><br><span class="line">    print(<span class="string">"data_new:\n"</span>,data_new.toarray())</span><br><span class="line">    print(<span class="string">"特征名称:\n"</span>,transfer.get_feature_names())</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br></pre></td></tr></table></figure>

<p>中文 jieba 分词：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">count_Chinese_demo</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#中文文本特征抽取，自动分词</span></span><br><span class="line">    <span class="comment">#1、将中文文本进行分词</span></span><br><span class="line">    data = [<span class="string">"今天很残酷,明天更残酷,后天很美好,但绝对大部分是死在明天晚上,所以每个人不要放弃今天。"</span>,</span><br><span class="line">            <span class="string">"我们看到的从很远星系来的光是在几百万年之前发出的这样当我们看到宇宙时,我们是套看它的过去"</span>,</span><br><span class="line">            <span class="string">"如果只用一种方式了解某样事物,你就不会真正了解它。了解事物真正含义的秘密取决于如何将其与我们所了解的事物相联系"</span>]</span><br><span class="line">    data_new = []</span><br><span class="line">    <span class="keyword">for</span> sent <span class="keyword">in</span> data:</span><br><span class="line">        data_new.append(cut_word(sent))</span><br><span class="line">    <span class="comment"># print(data_new)</span></span><br><span class="line">    <span class="comment">#实例化一个转换器类</span></span><br><span class="line">    transfer = CountVectorizer()</span><br><span class="line">    <span class="comment">#调用fit_fransform()</span></span><br><span class="line">    data_final = transfer.fit_transform(data_new)</span><br><span class="line">    print(<span class="string">"data_new:\n"</span>,data_final.toarray())</span><br><span class="line">    print(<span class="string">"特征名称:\n"</span>,transfer.get_feature_names())</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cut_word</span><span class="params">(text)</span>:</span></span><br><span class="line">    <span class="comment">#进行中文分词</span></span><br><span class="line">    text = <span class="string">" "</span>.join(list(jieba.cut(text))) </span><br><span class="line">    <span class="keyword">return</span> text</span><br></pre></td></tr></table></figure>

<p><strong>3、运行结果</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">data_new:</span><br><span class="line"> [[0 0 1 1 0 1 1]</span><br><span class="line"> [1 1 0 0 1 1 0]]</span><br><span class="line">特征名称:</span><br><span class="line"> [&#39;dislike&#39;, &#39;flife&#39;, &#39;life&#39;, &#39;like&#39;, &#39;long&#39;, &#39;python&#39;, &#39;short&#39;]</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">data_new:</span><br><span class="line"> [[0 0 1 0 0 0 2 0 0 0 0 0 1 0 1 0 0 0 0 1 1 0 2 0 1 0 2 1 0 0 0 1 1 0 0 0]</span><br><span class="line"> [0 0 0 1 0 0 0 1 1 1 0 0 0 0 0 0 0 1 3 0 0 0 0 1 0 0 0 0 2 0 0 0 0 0 1 1]</span><br><span class="line"> [1 1 0 0 4 3 0 0 0 0 1 1 0 1 0 1 1 0 1 0 0 1 0 0 0 1 0 0 0 2 1 0 0 1 0 0]]</span><br><span class="line">特征名称:</span><br><span class="line"> [&#39;一种&#39;, &#39;不会&#39;, &#39;不要&#39;, &#39;之前&#39;, &#39;了解&#39;, &#39;事物&#39;, &#39;今天&#39;, &#39;光是在&#39;, &#39;几百万年&#39;, &#39;发出&#39;, &#39;取决于&#39;, &#39;只用&#39;, &#39;后天&#39;, &#39;含义&#39;, &#39;大部分&#39;, &#39;如何&#39;, &#39;如果&#39;, &#39;宇宙&#39;, &#39;我们&#39;, &#39;所以&#39;, &#39;放弃&#39;, &#39;方式&#39;, &#39;明天&#39;, &#39;星系&#39;, &#39;晚上&#39;, &#39;某样&#39;, &#39;残酷&#39;, &#39;每个&#39;, &#39;看到&#39;, &#39;真正&#39;, &#39;秘密&#39;, &#39;绝对&#39;, &#39;美好&#39;, &#39;联系&#39;, &#39;过去&#39;, &#39;这样&#39;]</span><br></pre></td></tr></table></figure>

<h5 id="TfidfVectorizer提取"><a href="#TfidfVectorizer提取" class="headerlink" title="TfidfVectorizer提取"></a>TfidfVectorizer提取</h5><p>用以评估一字词对于一个文件集或一个语料库中的其中一份文件的重要程度</p>
<p><strong>1、导入包</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from sklearn.feature_extraction.text import TfidfVectorizer</span><br><span class="line">import jieba</span><br></pre></td></tr></table></figure>

<p><strong>2、函数编写</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tfidf_demo</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#用TF-IDF的方法进行文本特征抽取</span></span><br><span class="line">    <span class="comment">#1、将中文文本进行分词</span></span><br><span class="line">    data = [<span class="string">"今天很残酷,明天更残酷,后天很美好,但绝对大部分是死在明天晚上,所以每个人不要放弃今天。"</span>,</span><br><span class="line">            <span class="string">"我们看到的从很远星系来的光是在几百万年之前发出的这样当我们看到宇宙时,我们是套看它的过去"</span>,</span><br><span class="line">            <span class="string">"如果只用一种方式了解某样事物,你就不会真正了解它。了解事物真正含义的秘密取决于如何将其与我们所了解的事物相联系"</span>]</span><br><span class="line">    data_new = []</span><br><span class="line">    <span class="keyword">for</span> sent <span class="keyword">in</span> data:</span><br><span class="line">        data_new.append(cut_word(sent))</span><br><span class="line">    <span class="comment"># print(data_new)</span></span><br><span class="line">    <span class="comment">#实例化一个转换器类</span></span><br><span class="line">    transfer = TfidfVectorizer()</span><br><span class="line">    <span class="comment">#调用fit_fransform()</span></span><br><span class="line">    data_final = transfer.fit_transform(data_new)</span><br><span class="line">    print(<span class="string">"data_new:\n"</span>,data_final.toarray())</span><br><span class="line">    print(<span class="string">"特征名称:\n"</span>,transfer.get_feature_names())</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cut_word</span><span class="params">(text)</span>:</span></span><br><span class="line">    <span class="comment">#进行中文分词</span></span><br><span class="line">    text = <span class="string">" "</span>.join(list(jieba.cut(text))) </span><br><span class="line">    <span class="keyword">return</span> text</span><br></pre></td></tr></table></figure>

<p><strong>3、运行结果</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">data_new:</span><br><span class="line"> [[0.         0.         0.21821789 0.         0.         0.</span><br><span class="line">  0.43643578 0.         0.         0.         0.         0.</span><br><span class="line">  0.21821789 0.         0.21821789 0.         0.         0.</span><br><span class="line">  0.         0.21821789 0.21821789 0.         0.43643578 0.</span><br><span class="line">  0.21821789 0.         0.43643578 0.21821789 0.         0.</span><br><span class="line">  0.         0.21821789 0.21821789 0.         0.         0.        ]</span><br><span class="line"> [0.         0.         0.         0.2410822  0.         0.</span><br><span class="line">  0.         0.2410822  0.2410822  0.2410822  0.         0.</span><br><span class="line">  0.         0.         0.         0.         0.         0.2410822</span><br><span class="line">  0.55004769 0.         0.         0.         0.         0.2410822</span><br><span class="line">  0.         0.         0.         0.         0.48216441 0.</span><br><span class="line">  0.         0.         0.         0.         0.2410822  0.2410822 ]</span><br><span class="line"> [0.15698297 0.15698297 0.         0.         0.62793188 0.47094891</span><br><span class="line">  0.         0.         0.         0.         0.15698297 0.15698297</span><br><span class="line">  0.         0.15698297 0.         0.15698297 0.15698297 0.</span><br><span class="line">  0.1193896  0.         0.         0.15698297 0.         0.</span><br><span class="line">  0.         0.15698297 0.         0.         0.         0.31396594</span><br><span class="line">  0.15698297 0.         0.         0.15698297 0.         0.        ]]</span><br><span class="line">特征名称:</span><br><span class="line"> [&#39;一种&#39;, &#39;不会&#39;, &#39;不要&#39;, &#39;之前&#39;, &#39;了解&#39;, &#39;事物&#39;, &#39;今天&#39;, &#39;光是在&#39;, &#39;几百万年&#39;, &#39;发出&#39;, &#39;取决于&#39;, &#39;只用&#39;, &#39;后天&#39;, &#39;含义&#39;, &#39;大部分&#39;, &#39;如何&#39;, &#39;如果&#39;, &#39;宇宙&#39;, &#39;我们&#39;, &#39;所以&#39;, &#39;放弃&#39;, &#39;方式&#39;, &#39;明天&#39;, &#39;星系&#39;, &#39;晚上&#39;, &#39;某样&#39;, &#39;残酷&#39;, &#39;每个&#39;, &#39;看到&#39;, &#39;真正&#39;, &#39;秘密&#39;, &#39;绝对&#39;, &#39;美好&#39;, &#39;联系&#39;, &#39;过去&#39;, &#39;这样&#39;]</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>特征提取</tag>
      </tags>
  </entry>
  <entry>
    <title>机器学习-线性回归模型示例</title>
    <url>/2020/04/17/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E6%A8%A1%E5%9E%8B%E7%A4%BA%E4%BE%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="一、拟合效果"><a href="#一、拟合效果" class="headerlink" title="一、拟合效果"></a>一、拟合效果</h3><p><img src="/" class="lazyload" data-src="https://i.loli.net/2020/04/17/PCknW7mZlSNbycq.png"  alt="image.png"></p>
<a id="more"></a>

<h3 id="二、代码实现"><a href="#二、代码实现" class="headerlink" title="二、代码实现"></a>二、代码实现</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf </span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt </span><br><span class="line"></span><br><span class="line"><span class="comment">#使用numpy生成200个随机点</span></span><br><span class="line">x_data = np.linspace(<span class="number">-0.5</span>,<span class="number">0.5</span>,<span class="number">200</span>)[:,np.newaxis]</span><br><span class="line">noise = np.random.normal(<span class="number">0</span>,<span class="number">0.02</span>,x_data.shape)</span><br><span class="line">y_data = np.square(x_data) + noise</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义两个placeholder</span></span><br><span class="line">x = tf.placeholder(tf.float32,[<span class="literal">None</span>,<span class="number">1</span>])</span><br><span class="line">y = tf.placeholder(tf.float32,[<span class="literal">None</span>,<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义神经网络中间层</span></span><br><span class="line">Weights_L1 = tf.Variable(tf.random_normal([<span class="number">1</span>,<span class="number">10</span>]))</span><br><span class="line">biases_L1 = tf.Variable(tf.zeros([<span class="number">1</span>,<span class="number">10</span>]))</span><br><span class="line">Wx_plus_b_L1 = tf.matmul(x,Weights_L1) + biases_L1</span><br><span class="line">L1 = tf.nn.tanh(Wx_plus_b_L1)</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义输出层</span></span><br><span class="line">Weights_L2 = tf.Variable(tf.random_normal([<span class="number">10</span>,<span class="number">1</span>]))</span><br><span class="line">biases_L2 = tf.Variable(tf.zeros([<span class="number">1</span>,<span class="number">1</span>]))</span><br><span class="line">Wx_plus_b_L2 = tf.matmul(L1,Weights_L2) + biases_L2</span><br><span class="line">prediction = tf.nn.tanh(Wx_plus_b_L2)</span><br><span class="line"></span><br><span class="line"><span class="comment">#二次代价函数</span></span><br><span class="line">loss = tf.reduce_mean(tf.square(y-prediction))</span><br><span class="line"><span class="comment">#梯度下降法训练</span></span><br><span class="line">train_step = tf.train.ProximalGradientDescentOptimizer(<span class="number">0.1</span>).minimize(loss)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    <span class="comment">#变量初始化</span></span><br><span class="line">    sess.run(tf.global_variables_initializer())</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">2000</span>):</span><br><span class="line">        sess.run(train_step,feed_dict=&#123;x:x_data,y:y_data&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#获取预测值</span></span><br><span class="line">    prediction_value = sess.run(prediction,feed_dict=&#123;x:x_data&#125;)</span><br><span class="line">    <span class="comment">#画图</span></span><br><span class="line">    plt.figure()</span><br><span class="line">    plt.scatter(x_data,y_data)</span><br><span class="line">    plt.plot(x_data,prediction_value,<span class="string">'r-'</span>,lw=<span class="number">5</span>)</span><br><span class="line">    plt.show()</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>线性回归</tag>
      </tags>
  </entry>
  <entry>
    <title>Anaconda 与 Tensorflow 安装及配置问题及解决</title>
    <url>/2020/04/14/Anaconda-%E4%B8%8E-Tensorflow-%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="一、Anaconda配置"><a href="#一、Anaconda配置" class="headerlink" title="一、Anaconda配置"></a>一、Anaconda配置</h4><h4 id="1、安装"><a href="#1、安装" class="headerlink" title="1、安装"></a>1、安装</h4><p><a href="https://www.anaconda.com/" target="_blank" rel="noopener">https://www.anaconda.com/</a> 官网下载安装包安装即可。</p>
<h4 id="2、Jupyter-Notebook默认工作路径配置"><a href="#2、Jupyter-Notebook默认工作路径配置" class="headerlink" title="2、Jupyter Notebook默认工作路径配置"></a>2、Jupyter Notebook默认工作路径配置</h4><p>​    （1）打开 Anaconda Prompt，运行下面命令，会生成 jupyter_notebook_config.py文件</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">jupyter notebook --generate-<span class="built_in">config</span></span><br></pre></td></tr></table></figure>

<p>​    （2）在生成的位置：C:\Users\用户名.jupyter\ 下找到文件打开</p>
<p>​    （3）找到 c.NotebookApp.notebook_dir 变量，去掉注释修改为</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">c.NotebookApp.notebook_dir = <span class="string">'自定义路径'</span></span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p><strong>如果没有效果，还需要以下步骤</strong></p>
<p>找到 Jupyter Notebook 右键属性，删掉目标里的%USERPROFILE%</p>
<p><img src="/" class="lazyload" data-src="https://i.loli.net/2020/04/14/j6DFIEUX1NLiMpB.png"  alt="image.png"></p>
<h3 id="3、Tensorflow安装"><a href="#3、Tensorflow安装" class="headerlink" title="3、Tensorflow安装"></a>3、Tensorflow安装</h3><p>​    <strong>管理员命令窗口安装太慢而且会报错超时，使用 Anaconda Prompt 安装</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda install tensorflow-gpu</span><br></pre></td></tr></table></figure>

<p>如果不成功可以用清华镜像源：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install tensorflow-gpu&#x3D;&#x3D;1.9 -i https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>Tensorflow</tag>
        <tag>Anaconda</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue-网页版音乐播放器实现（网易云音乐源）</title>
    <url>/2020/04/13/Vue-%E7%BD%91%E9%A1%B5%E7%89%88%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8%E5%AE%9E%E7%8E%B0%EF%BC%88%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E6%BA%90%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="一、页面展示（后续还会完善功能）"><a href="#一、页面展示（后续还会完善功能）" class="headerlink" title="一、页面展示（后续还会完善功能）"></a>一、页面展示（后续还会完善功能）</h3><p><img src="/" class="lazyload" data-src="https://i.loli.net/2020/04/13/8N6BZenUV4KPxfL.png"  alt="image.png"></p>
<h3 id="二、已完成功能"><a href="#二、已完成功能" class="headerlink" title="二、已完成功能"></a>二、已完成功能</h3><p><strong>1、搜索功能</strong></p>
<p><strong>2、音乐列表展示</strong></p>
<p><strong>3、歌曲图片展示和图片背景虚化效果</strong></p>
<p><strong>4、音乐播放动态效果</strong></p>
<p><strong>5、音乐暂停以及上下首切换</strong></p>
<p><strong>6、音乐时长获取及格式化</strong></p>
<a id="more"></a>

<h3 id="三、未完成功能"><a href="#三、未完成功能" class="headerlink" title="三、未完成功能"></a>三、未完成功能</h3><p><strong>1、歌曲正在播放标识</strong></p>
<p><strong>2、播放模式</strong></p>
<p><strong>3、歌曲播放进度</strong></p>
<p><strong>4、音量调整</strong></p>
<p><strong>5、歌曲评论</strong></p>
<h3 id="四、页面代码"><a href="#四、页面代码" class="headerlink" title="四、页面代码"></a>四、页面代码</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>音乐播放器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css"</span> <span class="attr">integrity</span>=<span class="string">"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u"</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"fonts/iconfont.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">media</span>=<span class="string">"screen"</span> <span class="attr">href</span>=<span class="string">"css/reset.css"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">media</span>=<span class="string">"screen"</span> <span class="attr">href</span>=<span class="string">"css/player.css"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align:center;clear:both;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 播放器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"music-player"</span> <span class="attr">id</span>=<span class="string">"player"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-lg-6"</span> <span class="attr">style</span>=<span class="string">"margin-bottom: 20px;float: none;width:100%;align:center"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group"</span>&gt;</span></span><br><span class="line">		  <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"query"</span> @<span class="attr">keyup.enter</span>=<span class="string">"searchMusic"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">"查找歌曲"</span>&gt;</span></span><br><span class="line">		  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"input-group-btn"</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span> <span class="attr">type</span>=<span class="string">"button"</span> @<span class="attr">click</span>=<span class="string">"searchMusic"</span>&gt;</span>搜索<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">		  <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /input-group --&gt;</span></span><br><span class="line">	  <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.col-lg-6 --&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- audio标签 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">audio</span> <span class="attr">ref</span>=<span class="string">"audio"</span> <span class="attr">class</span>=<span class="string">"music-player__audio"</span> <span class="attr">:src</span>=<span class="string">"musicUrl"</span> <span class="attr">autoplay</span>=<span class="string">"autoplay"</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 播放器主体 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"music-player__main"</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 模糊背景 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"music-player__blur"</span> <span class="attr">:style</span>=<span class="string">"&#123;'backgroundImage':'url('+picUrl+')'&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 唱片 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"music-player__disc"</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 唱片图片 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"music-player__image"</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">:src</span>=<span class="string">"picUrl"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 指针 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span>  <span class="attr">class</span>=<span class="string">"music-player__pointer"</span> <span class="attr">:class</span>=<span class="string">"play"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">src</span>=<span class="string">"./images/cd_tou.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 控件主体 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"music-player__controls"</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 歌曲信息 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"music__info"</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"music__info--title"</span> <span class="attr">v-text</span>=<span class="string">"musicName"</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"music__info--singer"</span> <span class="attr">v-text</span>=<span class="string">"artist"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 控件... --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"player-control"</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"player-control__content"</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"player-control__btns"</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"player-control__btn player-control__btn--prev"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"iconfont icon-prev"</span> @<span class="attr">click</span>=<span class="string">"musicChange('pre')"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"player-control__btn player-control__btn--play"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span>  @<span class="attr">click</span>=<span class="string">"musiccl"</span> <span class="attr">:class</span>=<span class="string">"pause"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"player-control__btn player-control__btn--next"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"iconfont icon-next"</span> @<span class="attr">click</span>=<span class="string">"musicChange('next')"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"player-control__btn player-control__btn--mode"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"iconfont icon-loop"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"player-control__volume"</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"control__volume--icon player-control__btn"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"iconfont icon-volume"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"control__volume--progress progress"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">				<span class="comment">&lt;!-- 歌曲播放进度 --&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"player-control__content"</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"player__song--progress progress"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"player__song--timeProgess nowTime"</span>&gt;</span>00:00<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"player__song--timeProgess totalTime"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">v-text</span>=<span class="string">"totalTime"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 歌曲列表 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"music-player__list"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"music__list_content"</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"music__list__item"</span> <span class="attr">:class</span>=<span class="string">"playing"</span> <span class="attr">v-for</span>=<span class="string">"(item,index) in musicList"</span> @<span class="attr">click</span>=<span class="string">"playMusic(item.id,item.name,item.artists[0].name,index)"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"color:aliceblue;"</span>&gt;</span>&#123;&#123; item.name &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>&#123;&#123; item.artists[0].name &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://unpkg.com/axios/dist/axios.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/main.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="五、Js-代码"><a href="#五、Js-代码" class="headerlink" title="五、Js 代码"></a>五、Js 代码</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el:<span class="string">"#player"</span>,</span><br><span class="line">    data:&#123;</span><br><span class="line">        <span class="comment">//查询关键字</span></span><br><span class="line">        query:<span class="string">""</span>,</span><br><span class="line">        <span class="comment">//歌曲数组</span></span><br><span class="line">        musicList:[],</span><br><span class="line">        <span class="comment">//歌曲地址</span></span><br><span class="line">        musicUrl:<span class="string">""</span>,</span><br><span class="line">        <span class="comment">//歌曲播放图标切换</span></span><br><span class="line">        pause:<span class="string">"iconfont icon-play"</span>,</span><br><span class="line">        playing:<span class="string">"music__list__item"</span>,</span><br><span class="line">        <span class="comment">//歌曲名</span></span><br><span class="line">        musicName:<span class="string">"..."</span>,</span><br><span class="line">        <span class="comment">//作者</span></span><br><span class="line">        artist:<span class="string">"..."</span>,</span><br><span class="line">        <span class="comment">//图片路径</span></span><br><span class="line">        picUrl:<span class="string">""</span>,</span><br><span class="line">        <span class="comment">//指针状态</span></span><br><span class="line">        play:<span class="string">""</span>,</span><br><span class="line">        <span class="comment">//歌曲在数组中的位置</span></span><br><span class="line">        musicIndex:<span class="number">0</span>,</span><br><span class="line">        totalTime:<span class="string">"00:00"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    methods:&#123;</span><br><span class="line">        <span class="comment">//歌曲搜索</span></span><br><span class="line">        searchMusic:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> that=<span class="keyword">this</span>;</span><br><span class="line">            axios.get(<span class="string">"https://autumnfish.cn/search?keywords="</span>+<span class="keyword">this</span>.query)</span><br><span class="line">            .then(<span class="function"><span class="keyword">function</span>(<span class="params">response</span>)</span>&#123;</span><br><span class="line">                that.musicList=response.data.result.songs;</span><br><span class="line">                <span class="built_in">console</span>.log(response)</span><br><span class="line">            &#125;,<span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;&#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">//歌曲播放</span></span><br><span class="line">        playMusic:<span class="function"><span class="keyword">function</span>(<span class="params">musicId,musicname,artist,index</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.play=<span class="string">"play"</span>;</span><br><span class="line">            <span class="keyword">this</span>.musicIndex=index;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//获取点击歌曲url并播放</span></span><br><span class="line">            <span class="keyword">var</span> that=<span class="keyword">this</span>;</span><br><span class="line">            axios.get(<span class="string">"https://autumnfish.cn/song/url?id="</span>+musicId)</span><br><span class="line">            .then(<span class="function"><span class="keyword">function</span>(<span class="params">response</span>)</span>&#123;</span><br><span class="line">                that.musicUrl=response.data.data[<span class="number">0</span>].url;</span><br><span class="line">                that.pause=<span class="string">"iconfont icon-pause"</span>;</span><br><span class="line">                that.playing=<span class="string">"music__list__item play"</span>;</span><br><span class="line">                that.musicName=musicname;</span><br><span class="line">                that.artist=artist;</span><br><span class="line">                <span class="built_in">console</span>.log(response)</span><br><span class="line">            &#125;,<span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;&#125;)</span><br><span class="line"></span><br><span class="line">            <span class="comment">//获取时长</span></span><br><span class="line">            totalMinute = <span class="built_in">parseInt</span>(<span class="keyword">this</span>.$refs.audio.duration / <span class="number">60</span>) &lt; <span class="number">10</span> ? <span class="string">"0"</span> + <span class="built_in">parseInt</span>(<span class="keyword">this</span>.$refs.audio.duration / <span class="number">60</span>) : <span class="built_in">parseInt</span>(<span class="keyword">this</span>.$refs.audio.duration / <span class="number">60</span>);</span><br><span class="line">            totalSecond = <span class="built_in">parseInt</span>(<span class="keyword">this</span>.$refs.audio.duration % <span class="number">60</span>) &lt; <span class="number">10</span> ? <span class="string">"0"</span> + <span class="built_in">parseInt</span>(<span class="keyword">this</span>.$refs.audio.duration % <span class="number">60</span>) : <span class="built_in">parseInt</span>(<span class="keyword">this</span>.$refs.audio.duration % <span class="number">60</span>);</span><br><span class="line">            <span class="keyword">this</span>.totalTime = totalMinute +<span class="string">":"</span>+ totalSecond;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>.totalTime)</span><br><span class="line">            </span><br><span class="line"></span><br><span class="line">            <span class="comment">//歌曲详情获取</span></span><br><span class="line">            axios.get(<span class="string">"https://autumnfish.cn/song/detail?ids="</span>+musicId)</span><br><span class="line">            .then(<span class="function"><span class="keyword">function</span>(<span class="params">response</span>)</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(response.data.songs[<span class="number">0</span>].al.picUrl)</span><br><span class="line">                that.picUrl=response.data.songs[<span class="number">0</span>].al.picUrl;</span><br><span class="line">            &#125;,<span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;&#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">//歌曲播放与暂停切换</span></span><br><span class="line">        musiccl:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">this</span>.pause==<span class="string">"iconfont icon-pause"</span>)&#123;</span><br><span class="line">                <span class="keyword">this</span>.$refs.audio.pause();</span><br><span class="line">                <span class="keyword">this</span>.pause=<span class="string">"iconfont icon-play"</span>;</span><br><span class="line">                <span class="keyword">this</span>.play=<span class="string">""</span></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">this</span>.$refs.audio.play();</span><br><span class="line">                <span class="keyword">this</span>.pause=<span class="string">"iconfont icon-pause"</span>;</span><br><span class="line">                <span class="keyword">this</span>.play=<span class="string">"play"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">//歌曲切换</span></span><br><span class="line">        musicChange:<span class="function"><span class="keyword">function</span>(<span class="params">changeid</span>)</span>&#123;</span><br><span class="line">            index=<span class="keyword">this</span>.musicIndex;</span><br><span class="line">            <span class="keyword">if</span>( index&gt;=<span class="number">0</span> &amp;&amp; index&lt;=<span class="keyword">this</span>.musicList.length)&#123;</span><br><span class="line">                <span class="comment">//上一首</span></span><br><span class="line">                <span class="keyword">if</span>(changeid==<span class="string">"pre"</span> &amp;&amp; index&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                    musicId=<span class="keyword">this</span>.musicList[index<span class="number">-1</span>].id;</span><br><span class="line">                    musicname=<span class="keyword">this</span>.musicList[index<span class="number">-1</span>].name;</span><br><span class="line">                    artist=<span class="keyword">this</span>.musicList[index<span class="number">-1</span>].artists[<span class="number">0</span>].name;</span><br><span class="line">                    <span class="keyword">this</span>.playMusic(musicId,musicname,artist,index<span class="number">-1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//下一首</span></span><br><span class="line">                <span class="keyword">if</span>(changeid==<span class="string">"next"</span> &amp;&amp; index&lt;<span class="keyword">this</span>.musicList.length)&#123;</span><br><span class="line">                    musicId=<span class="keyword">this</span>.musicList[index+<span class="number">1</span>].id;</span><br><span class="line">                    musicname=<span class="keyword">this</span>.musicList[index+<span class="number">1</span>].name;</span><br><span class="line">                    artist=<span class="keyword">this</span>.musicList[index+<span class="number">1</span>].artists[<span class="number">0</span>].name;</span><br><span class="line">                    <span class="keyword">this</span>.playMusic(musicId,musicname,artist,index+<span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="六、项目完整代码"><a href="#六、项目完整代码" class="headerlink" title="六、项目完整代码"></a>六、项目完整代码</h3><p>完善后会上传GitHub</p>
]]></content>
      <categories>
        <category>网页</category>
      </categories>
      <tags>
        <tag>Vue</tag>
        <tag>Axios</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue+Axios 实现天气查询</title>
    <url>/2020/04/12/Vue-Axios-%E5%AE%9E%E7%8E%B0%E5%A4%A9%E6%B0%94%E6%9F%A5%E8%AF%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="一、页面展示"><a href="#一、页面展示" class="headerlink" title="一、页面展示"></a>一、页面展示</h4><p>1、初始页面</p>
<p><img src="/" class="lazyload" data-src="https://i.loli.net/2020/04/12/uy5J3ZpawtiL1bD.png"  alt="image.png"></p>
<p>2、查询结果展示</p>
<p><img src="/" class="lazyload" data-src="https://i.loli.net/2020/04/12/4ZpjIqAr8Jdkb76.png"  alt="image.png"></p>
<a id="more"></a>

<h4 id="二、代码实现"><a href="#二、代码实现" class="headerlink" title="二、代码实现"></a>二、代码实现</h4><p><strong>1、html</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css"</span> <span class="attr">integrity</span>=<span class="string">"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u"</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"tianqi"</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span> <span class="attr">style</span>=<span class="string">"width: 40%;margin: 0px auto;margin-top: 50px;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-lg-6"</span> <span class="attr">style</span>=<span class="string">"text-align: center;"</span> &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-cloud"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group"</span>  <span class="attr">style</span>=<span class="string">"margin-top: 20px;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"city"</span> @<span class="attr">keyup.enter</span>=<span class="string">"searchWeather"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">"Search for..."</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"input-group-btn"</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"changecity(city)"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span> <span class="attr">type</span>=<span class="string">"button"</span>&gt;</span>查询<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- /input-group --&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.col-lg-6 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.row --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"weatherlist"</span> <span class="attr">style</span>=<span class="string">"margin: 0px auto;width: 80%;margin-top: 60px;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"item in weatherlist"</span> <span class="attr">style</span>=<span class="string">"float: left;width: 20%;list-style-type:none"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"font-size: 40px;color: #f8a05d;"</span>&gt;</span>&#123;&#123; item.type &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"font-size: 10px;color: #f8a05d;"</span>&gt;</span>&#123;&#123; item.low &#125;&#125;~&#123;&#123; item.high &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; item.date &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://unpkg.com/axios/dist/axios.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./main.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>2、main.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> tianqi = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el:<span class="string">"#tianqi"</span>,</span><br><span class="line">    data:&#123;</span><br><span class="line">        city:<span class="string">""</span>,</span><br><span class="line">        weatherlist:[]</span><br><span class="line">    &#125;,</span><br><span class="line">    methods:&#123;</span><br><span class="line">        searchWeather:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line">            axios.get(<span class="string">"http://wthrcdn.etouch.cn/weather_mini?city="</span>+<span class="keyword">this</span>.city)</span><br><span class="line">            .then(<span class="function"><span class="keyword">function</span>(<span class="params">response</span>)</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(response.data.data.forecast)</span><br><span class="line">                that.weatherlist=response.data.data.forecast;</span><br><span class="line">            &#125;)</span><br><span class="line">            .catch(<span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;</span><br><span class="line">                alert(<span class="string">"城市输入错误"</span>)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        changecity:<span class="function"><span class="keyword">function</span>(<span class="params">cityin</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.city=cityin;</span><br><span class="line">            <span class="keyword">this</span>.searchWeather();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>网页</category>
      </categories>
      <tags>
        <tag>Vue</tag>
        <tag>Axios</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue+BootStrap实现简单网页记事本</title>
    <url>/2020/04/12/Vue-BootStrap%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%BD%91%E9%A1%B5%E8%AE%B0%E4%BA%8B%E6%9C%AC/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="一、页面展示"><a href="#一、页面展示" class="headerlink" title="一、页面展示"></a>一、页面展示</h4><p>初始页面：</p>
<p><img src="/" class="lazyload" data-src="https://i.loli.net/2020/04/24/nxQCgYIf14hlWV2.png"  alt="image.png"></p>
<p>记录后页面：</p>
<p><img src="/" class="lazyload" data-src="https://i.loli.net/2020/04/24/2rIAwRCBekVsn1S.png"  alt="image.png"></p>
<a id="more"></a>

<h4 id="二、代码实现"><a href="#二、代码实现" class="headerlink" title="二、代码实现"></a>二、代码实现</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--引入Bootstrap的css样式--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css"</span> <span class="attr">integrity</span>=<span class="string">"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u"</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>v-model<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"note"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>记事本<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"list-group"</span> <span class="attr">style</span>=<span class="string">"width: 50%;margin:0px auto;margin-top: 50px;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"inputvalue"</span> @<span class="attr">keyup.enter</span>=<span class="string">"add"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">"请输入内容"</span> &gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span> <span class="attr">v-for</span>=<span class="string">"(item,index) in list"</span> &gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span> &#123;&#123; index+1 &#125;&#125; <span class="tag">&lt;/<span class="name">span</span>&gt;</span>&#123;&#123; item &#125;&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>  @<span class="attr">click</span>=<span class="string">"remove(index)"</span> <span class="attr">style</span>=<span class="string">"float: right;"</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-remove"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-show</span>=<span class="string">"list.length!=0"</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span> <span class="attr">style</span>=<span class="string">"overflow: hidden;font-size: 2px;color: silver;"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>  <span class="attr">style</span>=<span class="string">"float: left;height: 100%;"</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>&#123;&#123; list.length &#125;&#125;<span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span>item<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> @<span class="attr">click</span>=<span class="string">"clearall"</span> <span class="attr">style</span>=<span class="string">"float: right;height: 100%;"</span>&gt;</span>clear<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> note = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el:<span class="string">"#note"</span>,</span></span><br><span class="line">            data:&#123;</span><br><span class="line"><span class="actionscript">                list:[<span class="string">"吃饭"</span>,<span class="string">"睡觉"</span>],</span></span><br><span class="line"><span class="actionscript">                inputvalue:<span class="string">"学习"</span>,</span></span><br><span class="line"><span class="actionscript">                close:<span class="literal">false</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            methods:&#123;</span><br><span class="line"><span class="actionscript">                add:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.list.push(<span class="keyword">this</span>.inputvalue);</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                remove:<span class="function"><span class="keyword">function</span><span class="params">(index)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.list.splice(index,<span class="number">1</span>);</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                clearall:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.list=[];</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>网页</category>
      </categories>
      <tags>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot-基于Mybatis实现增删改查</title>
    <url>/2020/04/10/SpringBoot%E5%9F%BA%E4%BA%8EMybatis%E5%AE%9E%E7%8E%B0%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="一、使用-generator-插件生成-pojo-和-mapper"><a href="#一、使用-generator-插件生成-pojo-和-mapper" class="headerlink" title="一、使用 generator 插件生成 pojo 和 mapper"></a>一、使用 generator 插件生成 pojo 和 mapper</h4><p>参考：<a href="https://nfreak-man.cn/2020/04/09/Mybatis配置generator插件/" target="_blank" rel="noopener">Mybatis配置generator插件</a></p>
<h4 id="二、Controller编写"><a href="#二、Controller编写" class="headerlink" title="二、Controller编写"></a>二、Controller编写</h4><h4 id="1、页面跳转方法"><a href="#1、页面跳转方法" class="headerlink" title="1、页面跳转方法"></a>1、页面跳转方法</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PageController</span> </span>&#123;</span><br><span class="line">    <span class="comment">//页面跳转方法</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/&#123;page&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">showPage</span><span class="params">(@PathVariable String page)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> page;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h4 id="2、增删改查功能"><a href="#2、增删改查功能" class="headerlink" title="2、增删改查功能"></a>2、增删改查功能</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/user"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UsersController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UsersService usersService;</span><br><span class="line">	</span><br><span class="line">    <span class="comment">//添加用户信息</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/addUser"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">addUsers</span><span class="params">(User user)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.usersService.addUsers(user);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"error"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"redirect:/ok"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">	</span><br><span class="line">    <span class="comment">//获取所有用户信息</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/findUserAll"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">findUserAll</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            List&lt;User&gt; list = <span class="keyword">this</span>.usersService.findUserAll();</span><br><span class="line">            model.addAttribute(<span class="string">"list"</span>,list);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"error"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"showUsers"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">	</span><br><span class="line">    <span class="comment">//根据id查找用户</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/preUpdateUser"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">preUpdateUser</span><span class="params">(Integer id,Model model)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            User user = <span class="keyword">this</span>.usersService.preUpdateUser(id);</span><br><span class="line">            model.addAttribute(<span class="string">"user"</span>,user);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"error"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"updateUser"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">	</span><br><span class="line">    <span class="comment">//更新用户信息</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/updateUser"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">updateUser</span><span class="params">(User user)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.usersService.modifyUsers(user);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"error"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"redirect:/ok"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据id删除用户</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/deleteUser"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">deleteUser</span><span class="params">(Integer id)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.usersService.dropUsersById(id);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"error"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"redirect:/ok"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="二、业务层编写"><a href="#二、业务层编写" class="headerlink" title="二、业务层编写"></a>二、业务层编写</h3><h4 id="UserServiceImpl"><a href="#UserServiceImpl" class="headerlink" title="UserServiceImpl"></a>UserServiceImpl</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UsersServiceImpl</span> <span class="keyword">implements</span> <span class="title">UsersService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line">	</span><br><span class="line">    <span class="comment">//添加用户信息</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addUsers</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userMapper.insert(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取所有用户信息</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findUserAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        UserExample example = <span class="keyword">new</span> UserExample();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.userMapper.selectByExample(example);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据id查找用户</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">preUpdateUser</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.userMapper.selectByPrimaryKey(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//更新用户信息</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">modifyUsers</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userMapper.updateByPrimaryKey(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据id删除用户</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dropUsersById</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userMapper.deleteByPrimaryKey(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="四、简单前端页面部分代码"><a href="#四、简单前端页面部分代码" class="headerlink" title="四、简单前端页面部分代码"></a>四、简单前端页面部分代码</h3><p>所有页面开头需加入 Thymeleaf 支持</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>还需编写成功提示页和失败页面，随需求添加即可。</p>
<h4 id="1、用户信息展示页"><a href="#1、用户信息展示页" class="headerlink" title="1、用户信息展示页"></a>1、用户信息展示页</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>用户ID<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>用户姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>用户性别<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">"u : $&#123;list&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">"$&#123;u.id&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">"$&#123;u.name&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">"$&#123;u.gender&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/user/preUpdateUser(id=$&#123;u.id&#125;)&#125;"</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/user/deleteUser(id=$&#123;u.id&#125;)&#125;"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="2、添加用户信息页"><a href="#2、添加用户信息页" class="headerlink" title="2、添加用户信息页"></a>2、添加用户信息页</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">"@&#123;/user/addUser&#125;"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"gender"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"添加"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="3、更改用户信息页"><a href="#3、更改用户信息页" class="headerlink" title="3、更改用户信息页"></a>3、更改用户信息页</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">"@&#123;/user/updateUser&#125;"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">th:value</span>=<span class="string">"$&#123;user.id&#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">th:value</span>=<span class="string">"$&#123;user.name&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">th:value</span>=<span class="string">"$&#123;user.gender&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"添加"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>Mybatis</tag>
        <tag>Thymeleaf</tag>
      </tags>
  </entry>
  <entry>
    <title>使用generator插件生成mapper时报错-生成多张同名表信息</title>
    <url>/2020/04/10/%E4%BD%BF%E7%94%A8generator%E6%8F%92%E4%BB%B6%E7%94%9F%E6%88%90mapper%E6%97%B6%E6%8A%A5%E9%94%99-%E7%94%9F%E6%88%90%E5%A4%9A%E5%BC%A0%E5%90%8C%E5%90%8D%E8%A1%A8%E4%BF%A1%E6%81%AF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="报错信息"><a href="#报错信息" class="headerlink" title="报错信息"></a>报错信息</h4><p><strong>Result Maps collection already contains value for…BaseResultMap</strong></p>
<h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><p>1、数据库存在多张名称相同的表，在 mapper.xml 生成了多个 id 为 BaseResultMap 的 resultMap。</p>
<p>2、没有删除生成的 pojo 和 mapper 就再次生成代码。</p>
<h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><p>1、如果数据库存在多张名称相同的表，删除生成的其他表的 id 为 BaseResultMap 的代码。</p>
<p>2、如果是重复生成，全部删除后再重新生成。</p>
<p>3、如果不想生成多个同名的表的mapper，在generatorConfig.xml中数据库连接信息中添加</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"nullCatalogMeansCurrent"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Mybatis</category>
      </categories>
      <tags>
        <tag>generator</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot Mybatis配置generator插件 </title>
    <url>/2020/04/09/Mybatis%E9%85%8D%E7%BD%AEgenerator%E6%8F%92%E4%BB%B6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="一、在maven下添加插件坐标"><a href="#一、在maven下添加插件坐标" class="headerlink" title="一、在maven下添加插件坐标"></a>一、在maven下添加插件坐标</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置Generator插件--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.16<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--指定配置文件路径--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">configurationFile</span>&gt;</span>$&#123;project.basedir&#125;/src/main/resources/generatorConfig.xml<span class="tag">&lt;/<span class="name">configurationFile</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">verbose</span>&gt;</span>true<span class="tag">&lt;/<span class="name">verbose</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">overwrite</span>&gt;</span>true<span class="tag">&lt;/<span class="name">overwrite</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置资源拷贝插件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.*<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h4 id="二、添加配置文件"><a href="#二、添加配置文件" class="headerlink" title="二、添加配置文件"></a>二、添加配置文件</h4><p>resources 下添加 generatorConfig.xml 文件</p>
<p>配置数据库连接信息和mapper以及实体类生成路径。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">generatorConfiguration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">generatorConfiguration</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context</span> <span class="attr">id</span>=<span class="string">"DB2Tables"</span> <span class="attr">targetRuntime</span>=<span class="string">"MyBatis3"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--去掉自动生成的注释--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suppressAllComments"</span> <span class="attr">value</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--数据库连接信息--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">jdbcConnection</span> <span class="attr">driverClass</span>=<span class="string">"com.mysql.jdbc.Driver"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">connectionURL</span>=<span class="string">"jdbc:mysql:///day17?serverTimezone=UTC"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">userId</span>=<span class="string">"root"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">password</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--防止生成多张同名表--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"nullCatalogMeansCurrent"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">jdbcConnection</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaTypeResolver</span> &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"forceBigDecimals"</span> <span class="attr">value</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaTypeResolver</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--生成PO类位置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaModelGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"com.example.springbootmybatis.pojo"</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">targetProject</span>=<span class="string">".\src\main\java"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"trimStrings"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaModelGenerator</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--mapper映射文件生成位置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sqlMapGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"com.example.springbootmybatis.mapper"</span>  <span class="attr">targetProject</span>=<span class="string">".\src\main\java"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">sqlMapGenerator</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--mapper接口生成位置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaClientGenerator</span> <span class="attr">type</span>=<span class="string">"XMLMAPPER"</span> <span class="attr">targetPackage</span>=<span class="string">"com.example.springbootmybatis.mapper"</span>  <span class="attr">targetProject</span>=<span class="string">".\src\main\java"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaClientGenerator</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--指定数据库表--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">schema</span>=<span class="string">""</span> <span class="attr">tableName</span>=<span class="string">"user"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="三、添加DTD文件"><a href="#三、添加DTD文件" class="headerlink" title="三、添加DTD文件"></a>三、添加DTD文件</h4><p><a href="http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" target="_blank" rel="noopener">*<em>http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd *</em></a>复制链接到浏览器下载 dtd 文件</p>
<p>在 IDEA 中 ctrl+alt+s 打开设置，在 Languages &amp; Frameworks | Schemas and DTDs 中增加<a href="http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd，并选择" target="_blank" rel="noopener">http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd，并选择</a> dtd 保存路径</p>
<h4 id="四、运行插件生成代码"><a href="#四、运行插件生成代码" class="headerlink" title="四、运行插件生成代码"></a>四、运行插件生成代码</h4><p>在 maven 中选择Plugins–&gt;mybatis-generator–&gt;mybatis-generator:generate双击运行</p>
<h4 id="五、启动类中添加注解"><a href="#五、启动类中添加注解" class="headerlink" title="五、启动类中添加注解"></a>五、启动类中添加注解</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan</span>(<span class="string">"com.example.springbootmybatis.mapper"</span>)<span class="comment">//指定扫描接口与映射配置文件的包名</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringbootmybatisApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(SpringbootmybatisApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Mybatis</category>
      </categories>
      <tags>
        <tag>Mybatis</tag>
        <tag>generator</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot 基于Jdbc实现增删改查</title>
    <url>/2020/04/09/SpringBoot-%E5%9F%BA%E4%BA%8EJdbc%E5%AE%9E%E7%8E%B0%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="一、Controller编写"><a href="#一、Controller编写" class="headerlink" title="一、Controller编写"></a>一、Controller编写</h3><h4 id="1、页面跳转方法"><a href="#1、页面跳转方法" class="headerlink" title="1、页面跳转方法"></a>1、页面跳转方法</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PageController</span> </span>&#123;</span><br><span class="line">    <span class="comment">//页面跳转方法</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/&#123;page&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">showPage</span><span class="params">(@PathVariable String page)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> page;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="2、增删改查功能"><a href="#2、增删改查功能" class="headerlink" title="2、增删改查功能"></a>2、增删改查功能</h4><a id="more"></a>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/user"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UsersController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line">	</span><br><span class="line">    <span class="comment">//添加用户</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/addUser"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">addUser</span><span class="params">(Users users)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.userService.addUser(users);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"error"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"redirect:/ok"</span>;<span class="comment">//避免表单二次提交</span></span><br><span class="line">    &#125;</span><br><span class="line">	</span><br><span class="line">    <span class="comment">//查找所有用户信息</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/findUserAll"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">findUserAll</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">        List&lt;Users&gt; list = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            list = <span class="keyword">this</span>.userService.findUsersAll();</span><br><span class="line">            model.addAttribute(<span class="string">"list"</span>,list);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"error"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"showUsers"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">	</span><br><span class="line">    <span class="comment">//根据id查找用户信息</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/preUpdateUser"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">preUpdateUser</span><span class="params">(Integer id,Model model)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            Users user = <span class="keyword">this</span>.userService.findUserById(id);</span><br><span class="line">            model.addAttribute(<span class="string">"user"</span>,user);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"error"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"updateUser"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">	</span><br><span class="line">    <span class="comment">//根据id更新用户信息</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/updateUser"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String  <span class="title">updateUser</span><span class="params">(Users users)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.userService.modifyUser(users);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"error"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"redirect:/ok"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">	</span><br><span class="line">    <span class="comment">//根据id删除用户</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/deleteUser"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">deleteUser</span><span class="params">(Integer id)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.userService.dropUser(id);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"error"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"redirect:/ok"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="二、业务层编写"><a href="#二、业务层编写" class="headerlink" title="二、业务层编写"></a>二、业务层编写</h3><h4 id="UserServiceImpl"><a href="#UserServiceImpl" class="headerlink" title="UserServiceImpl"></a>UserServiceImpl</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span>  <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UsersDao usersDao;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addUser</span><span class="params">(Users users)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.usersDao.insertUsers(users);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Users&gt; <span class="title">findUsersAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.usersDao.selectUsersAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Users <span class="title">findUserById</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.usersDao.selectUserById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">modifyUser</span><span class="params">(Users users)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.usersDao.updateUsers(users);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dropUser</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.usersDao.deleteUserById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="三、持久层编写"><a href="#三、持久层编写" class="headerlink" title="三、持久层编写"></a>三、持久层编写</h3><h4 id="UsersDaoImpl"><a href="#UsersDaoImpl" class="headerlink" title="UsersDaoImpl"></a>UsersDaoImpl</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UsersDaoImpl</span> <span class="keyword">implements</span> <span class="title">UsersDao</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//添加用户</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertUsers</span><span class="params">(Users users)</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">"insert into user(name,gender) values(?,?)"</span>;</span><br><span class="line">        <span class="keyword">this</span>.jdbcTemplate.update(sql,users.getName(),users.getGender());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查找所有用户信息</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Users&gt; <span class="title">selectUsersAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">"select * from user"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.jdbcTemplate.query(sql, <span class="keyword">new</span> RowMapper&lt;Users&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Users <span class="title">mapRow</span><span class="params">(ResultSet resultSet, <span class="keyword">int</span> i)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">                Users users = <span class="keyword">new</span> Users();</span><br><span class="line">                users.setId(resultSet.getInt(<span class="string">"id"</span>));</span><br><span class="line">                users.setName(resultSet.getString(<span class="string">"name"</span>));</span><br><span class="line">                users.setGender(resultSet.getString(<span class="string">"gender"</span>));</span><br><span class="line">                <span class="keyword">return</span> users;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据id查找用户信息</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Users <span class="title">selectUserById</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        Users user = <span class="keyword">new</span> Users();</span><br><span class="line">        String sql = <span class="string">"select * from user where id = ?"</span>;</span><br><span class="line">        Object[] arry = <span class="keyword">new</span> Object[]&#123;id&#125;;</span><br><span class="line">        <span class="keyword">this</span>.jdbcTemplate.query(sql, arry, <span class="keyword">new</span> RowCallbackHandler() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">processRow</span><span class="params">(ResultSet resultSet)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">                user.setId(resultSet.getInt(<span class="string">"id"</span>));</span><br><span class="line">                user.setName(resultSet.getString(<span class="string">"name"</span>));</span><br><span class="line">                user.setGender(resultSet.getString(<span class="string">"gender"</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据id更新用户信息</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateUsers</span><span class="params">(Users users)</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">"update user set name = ?,gender = ? where id = ?"</span>;</span><br><span class="line">        <span class="keyword">this</span>.jdbcTemplate.update(sql,users.getName(),users.getGender(),users.getId());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据id删除用户</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteUserById</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">"delete from user where id = ?"</span>;</span><br><span class="line">        <span class="keyword">this</span>.jdbcTemplate.update(sql,id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="四、简单前端页面部分代码"><a href="#四、简单前端页面部分代码" class="headerlink" title="四、简单前端页面部分代码"></a>四、简单前端页面部分代码</h3><p>所有页面开头需加入 Thymeleaf 支持</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>还需编写成功提示页和失败页面，随需求添加即可。</p>
<h4 id="1、用户信息展示页"><a href="#1、用户信息展示页" class="headerlink" title="1、用户信息展示页"></a>1、用户信息展示页</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>用户ID<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>用户姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>用户性别<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">"u : $&#123;list&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">"$&#123;u.id&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">"$&#123;u.name&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">"$&#123;u.gender&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/user/preUpdateUser(id=$&#123;u.id&#125;)&#125;"</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/user/deleteUser(id=$&#123;u.id&#125;)&#125;"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="2、添加用户信息页"><a href="#2、添加用户信息页" class="headerlink" title="2、添加用户信息页"></a>2、添加用户信息页</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">"@&#123;/user/addUser&#125;"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"gender"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"添加"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="3、更改用户信息页"><a href="#3、更改用户信息页" class="headerlink" title="3、更改用户信息页"></a>3、更改用户信息页</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">"@&#123;/user/updateUser&#125;"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">th:value</span>=<span class="string">"$&#123;user.id&#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">th:value</span>=<span class="string">"$&#123;user.name&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">th:value</span>=<span class="string">"$&#123;user.gender&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"添加"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>Thymeleaf</tag>
        <tag>web增删改查</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot 整合Jdbc获取配置文件数据源的两种方式</title>
    <url>/2020/04/09/SpringBoot-%E6%95%B4%E5%90%88Jdbc%E8%8E%B7%E5%8F%96%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E6%95%B0%E6%8D%AE%E6%BA%90%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="一、通过-Configuration注解获取"><a href="#一、通过-Configuration注解获取" class="headerlink" title="一、通过@Configuration注解获取"></a>一、通过@Configuration注解获取</h3><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><h4 id="1、application-properties"><a href="#1、application-properties" class="headerlink" title="1、application.properties"></a>1、application.properties</h4><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">jdbc.driverClassName</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="meta">jdbc.url</span>=<span class="string">jdbc:mysql:///xxx</span></span><br><span class="line"><span class="meta">jdbc.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">jdbc.password</span>=<span class="string">root</span></span><br></pre></td></tr></table></figure>



<h4 id="2、创建实体类"><a href="#2、创建实体类" class="headerlink" title="2、创建实体类"></a>2、创建实体类</h4><p>并生成 getter 和 setter 方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcProperties</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String driverClassName;</span><br><span class="line">    <span class="keyword">private</span> String url;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h4 id="3、创建配置类"><a href="#3、创建配置类" class="headerlink" title="3、创建配置类"></a>3、创建配置类</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableConfigurationProperties</span>(JdbcProperties<span class="class">.<span class="keyword">class</span>)//指定加载哪个配置属性类</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">JdbcConfiguration</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">getDataSource</span><span class="params">(JdbcProperties jdbcProperties)</span></span>&#123;</span><br><span class="line">        DruidDataSource source = <span class="keyword">new</span> DruidDataSource();</span><br><span class="line">        source.setDriverClassName(jdbcProperties.getDriverClassName());</span><br><span class="line">        source.setUrl(jdbcProperties.getUrl());</span><br><span class="line">        source.setUsername(jdbcProperties.getUsername());</span><br><span class="line">        source.setPassword(jdbcProperties.getPassword());</span><br><span class="line">        <span class="keyword">return</span> source;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><p>只需要配置类编写，不需要实体类</p>
<h4 id="1、application-properties-1"><a href="#1、application-properties-1" class="headerlink" title="1、application.properties"></a>1、application.properties</h4><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">jdbc.driverClassName</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="meta">jdbc.url</span>=<span class="string">jdbc:mysql:///xxx</span></span><br><span class="line"><span class="meta">jdbc.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">jdbc.password</span>=<span class="string">root</span></span><br></pre></td></tr></table></figure>



<h4 id="2、创建配置类"><a href="#2、创建配置类" class="headerlink" title="2、创建配置类"></a>2、创建配置类</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcConfiguration</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"jdbc"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">getDataSource</span><span class="params">()</span></span>&#123;</span><br><span class="line">        DruidDataSource source = <span class="keyword">new</span> DruidDataSource();</span><br><span class="line">        <span class="keyword">return</span> source;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="二、通过配置文件配置数据源"><a href="#二、通过配置文件配置数据源" class="headerlink" title="二、通过配置文件配置数据源"></a>二、通过配置文件配置数据源</h3><h4 id="方法一：使用HikariDataSource-数据源"><a href="#方法一：使用HikariDataSource-数据源" class="headerlink" title="方法一：使用HikariDataSource 数据源"></a>方法一：使用HikariDataSource 数据源</h4><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">spring.datasource.url</span>=<span class="string">jdbc:mysql:///xxx</span></span><br><span class="line"><span class="meta">spring.datasource.driver-class-name</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="meta">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">spring.datasource.password</span>=<span class="string">root</span></span><br></pre></td></tr></table></figure>

<h4 id="方法二：使用Druid数据源"><a href="#方法二：使用Druid数据源" class="headerlink" title="方法二：使用Druid数据源"></a>方法二：使用Druid数据源</h4><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">spring.datasource.url</span>=<span class="string">jdbc:mysql:///day17?useSSL=false</span></span><br><span class="line"><span class="meta">spring.datasource.driver-class-name</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="meta">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">spring.datasource.password</span>=<span class="string">66634</span></span><br><span class="line"><span class="meta">spring.datasource.type</span>=<span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>Jdbc</tag>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot 简单文件上传功能实现</title>
    <url>/2020/04/08/SpringBoot-%E7%AE%80%E5%8D%95%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="静态页面编写"><a href="#静态页面编写" class="headerlink" title="静态页面编写"></a>静态页面编写</h3><p>编码类型设置为 multipart/form-data 支持文本和文件上传，输入类型为 file</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>文件上传<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/fileUploadController"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span> <span class="attr">value</span>=<span class="string">"上传"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="Controller编写"><a href="#Controller编写" class="headerlink" title="Controller编写"></a>Controller编写</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileUploadController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/fileUploadController"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">fileUpload</span><span class="params">(MultipartFile file)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        System.out.println(file.getOriginalFilename());</span><br><span class="line">        file.transferTo(<span class="keyword">new</span> File(<span class="string">"f:/"</span>+file.getOriginalFilename()));<span class="comment">//以文件原本名字存储在F盘</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"OK"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="设定上传文件大小和上传总量"><a href="#设定上传文件大小和上传总量" class="headerlink" title="设定上传文件大小和上传总量"></a>设定上传文件大小和上传总量</h3><p>在 application.properties 中配置文件上传限制</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment">#配置单个上传文件的大小限制</span></span><br><span class="line"><span class="meta">spring.servlet.multipart.max-file-size</span>=<span class="string">2MB</span></span><br><span class="line"><span class="comment">#配置在一次请求中上传文件的总容量的限制</span></span><br><span class="line"><span class="meta">spring.servlet.multipart.max-request-size</span>=<span class="string">20MB</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>文件上传</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot 获取配置文件中的值</title>
    <url>/2020/03/30/SpringBoot-%E8%8E%B7%E5%8F%96%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%B8%AD%E7%9A%84%E5%80%BC/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="配置文件处理器导入"><a href="#配置文件处理器导入" class="headerlink" title="配置文件处理器导入"></a>配置文件处理器导入</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--导入配置文件处理器，配置文件进行绑定就会有提示--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="yml-文件编写"><a href="#yml-文件编写" class="headerlink" title="yml 文件编写"></a>yml 文件编写</h3><p>注意以空格缩进，以及键值对中间空格。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">person:</span></span><br><span class="line">    <span class="attr">lastName:</span> <span class="string">xiaoming</span></span><br><span class="line">    <span class="attr">age:</span> <span class="number">18</span></span><br><span class="line">    <span class="attr">boss:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">birth:</span> <span class="number">2020</span><span class="string">/3/20</span></span><br><span class="line">    <span class="attr">maps:</span> <span class="string">&#123;k1:</span> <span class="string">v1,k2:</span> <span class="number">12</span><span class="string">,&#125;</span></span><br><span class="line">    <span class="attr">lists:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">aaa</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">bbb</span></span><br><span class="line">    <span class="attr">dog:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">buck</span></span><br><span class="line">      <span class="attr">age:</span> <span class="number">2</span></span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="JavaBean-编写"><a href="#JavaBean-编写" class="headerlink" title="JavaBean 编写"></a>JavaBean 编写</h3><p>将配置文件中配置的每一个属性的值，映射到这个组件中</p>
<p>@ConfigurationProperties：告诉SpringBoot将本类中的所有属性和配置    文件中相关的配置进行绑定；</p>
<p>prefix = “person”：配置文件中哪个下面的所有属性进行一一映射</p>
<p>只有这个组件是容器中的组件，才能容器提供的@ConfigurationProperties功    能；</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"person"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String lastName;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> Boolean boss;</span><br><span class="line">    <span class="keyword">private</span> Date birth;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,Object&gt; maps;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Object&gt; lists;</span><br><span class="line">    <span class="keyword">private</span> Dog dog;</span><br></pre></td></tr></table></figure>

<h4 id=""><a href="#" class="headerlink" title=""></a></h4>]]></content>
      <categories>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>yaml</tag>
      </tags>
  </entry>
  <entry>
    <title>Ajax+Redis+Mysql 实现下拉框数据加载</title>
    <url>/2020/03/24/Ajax-Redis-Mysql-%E5%AE%9E%E7%8E%B0%E4%B8%8B%E6%8B%89%E6%A1%86%E6%95%B0%E6%8D%AE%E5%8A%A0%E8%BD%BD/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><img src="/" class="lazyload" data-src="https://i.loli.net/2020/03/24/AKwIYqidXM5B1Jk.png"  alt="Snipaste_2020-03-24_22-37-06.png"></p>
<h3 id="Servlet-编写"><a href="#Servlet-编写" class="headerlink" title="Servlet 编写"></a>Servlet 编写</h3><p>从 service 获取返回的包含下拉框内容的 json 数据，发送到客户端。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/provinceServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProvinceServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.调用service查询</span></span><br><span class="line">        ProvinceService service = <span class="keyword">new</span> ProvinceServiceImpl();</span><br><span class="line">        String json = service.findAllJson();</span><br><span class="line"></span><br><span class="line">        System.out.println(json);</span><br><span class="line">        <span class="comment">//3.响应结果</span></span><br><span class="line">        response.setContentType(<span class="string">"application/json;charset=utf-8"</span>);</span><br><span class="line">        response.getWriter().write(json);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="Service编写"><a href="#Service编写" class="headerlink" title="Service编写"></a>Service编写</h3><p>findAll() 从 mysql 获取数据，findAllJson()从 redis 获取数据，当用户访问该页面时，先检查 redis 中是否包含需要的数据，如果有，并返回 json 格式数据，没有的话从 mysql 进行查询。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProvinceServiceImpl</span> <span class="keyword">implements</span> <span class="title">ProvinceService</span> </span>&#123;</span><br><span class="line">    <span class="comment">//声明dao</span></span><br><span class="line">    <span class="keyword">private</span> ProvinceDao dao = <span class="keyword">new</span> ProvinceDaoImpl();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Province&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dao.findAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">        使用redis缓存</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">findAllJson</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1.先从redis中查询数据</span></span><br><span class="line">        <span class="comment">//1.1获取redis客户端连接</span></span><br><span class="line">        Jedis jedis = JedisPoolUtils.getJedis();</span><br><span class="line">        String province_json = jedis.get(<span class="string">"province"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2判断 province_json 数据是否为null</span></span><br><span class="line">        <span class="keyword">if</span>(province_json == <span class="keyword">null</span> || province_json.length() == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">//redis中没有数据</span></span><br><span class="line">            System.out.println(<span class="string">"redis中没数据，查询数据库..."</span>);</span><br><span class="line">            <span class="comment">//2.1从数据中查询</span></span><br><span class="line">            List&lt;Province&gt; ps = dao.findAll();</span><br><span class="line">            <span class="comment">//2.2将list序列化为json</span></span><br><span class="line">            ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                province_json = mapper.writeValueAsString(ps);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (JsonProcessingException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//2.3 将json数据存入redis</span></span><br><span class="line">            jedis.set(<span class="string">"province"</span>,province_json);</span><br><span class="line">            <span class="comment">//归还连接</span></span><br><span class="line">            jedis.close();</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"redis中有数据，查询缓存..."</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> province_json;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="JQuery-编写"><a href="#JQuery-编写" class="headerlink" title="JQuery 编写"></a>JQuery 编写</h3><p>加载页面后，使用 ajax 异步请求方式发送请求，使用 CURUD 操作 append 方法将子元素 option 追加到父元素中，实现下拉框的加载。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    $(function () &#123;</span><br><span class="line">        $.get(<span class="string">"findProvinceServlet"</span>,&#123;&#125;,function (data) &#123;</span><br><span class="line">            <span class="keyword">var</span> province = $(<span class="string">"#province"</span>);</span><br><span class="line">            $(data).each(function () &#123;</span><br><span class="line">                <span class="keyword">var</span> option = <span class="string">"&lt;option name='"</span>+<span class="keyword">this</span>.id+<span class="string">"'&gt;"</span>+<span class="keyword">this</span>.name+<span class="string">"&lt;/option&gt;"</span></span><br><span class="line">                province.append(option);</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>注：之后的增删改操作需要删除 redis 中对应数据并重新存储，在对应函数内增加方法即可。</p>
]]></content>
      <categories>
        <category>JAVAWeb</category>
      </categories>
      <tags>
        <tag>Redis</tag>
        <tag>AJAX</tag>
        <tag>JQuery</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis 数据库连接池编写</title>
    <url>/2020/03/24/Redis-%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0%E7%BC%96%E5%86%99/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="Utils-类编写"><a href="#Utils-类编写" class="headerlink" title="Utils 类编写"></a>Utils 类编写</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JedisPoolUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> JedisPool jedisPool;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        <span class="comment">//读取配置文件</span></span><br><span class="line">        InputStream is = JedisPoolUtils.class.getClassLoader().getResourceAsStream("jedis.properties");</span><br><span class="line">        <span class="comment">//创建Properties对象</span></span><br><span class="line">        Properties pro = <span class="keyword">new</span> Properties();</span><br><span class="line">        <span class="comment">//关联文件</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            pro.load(is);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获取数据，设置到JedisPoolConfig中</span></span><br><span class="line">        JedisPoolConfig config = <span class="keyword">new</span> JedisPoolConfig();</span><br><span class="line">        config.setMaxTotal(Integer.parseInt(pro.getProperty(<span class="string">"maxTotal"</span>)));</span><br><span class="line">        config.setMaxIdle(Integer.parseInt(pro.getProperty(<span class="string">"maxIdle"</span>)));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//初始化JedisPool</span></span><br><span class="line">        jedisPool = <span class="keyword">new</span> JedisPool(config,pro.getProperty(<span class="string">"host"</span>),Integer.parseInt(pro.getProperty(<span class="string">"port"</span>)));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取连接方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Jedis <span class="title">getJedis</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> jedisPool.getResource();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="获取连接池工具类"><a href="#获取连接池工具类" class="headerlink" title="获取连接池工具类"></a>获取连接池工具类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//通过连接池工具类获取</span></span><br><span class="line">   Jedis jedis = JedisPoolUtils.getJedis();</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>JAVAWeb</category>
      </categories>
      <tags>
        <tag>Redis</tag>
        <tag>Jedis</tag>
      </tags>
  </entry>
  <entry>
    <title>AJAX-异步请求实现校验用户名是否存在</title>
    <url>/2020/03/23/AJAX-%E5%BC%82%E6%AD%A5%E8%AF%B7%E6%B1%82%E5%AE%9E%E7%8E%B0%E6%A0%A1%E9%AA%8C%E7%94%A8%E6%88%B7%E5%90%8D%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>在用户注册时常有验证用户名是否存在的功能，依靠异步请求刷新部分页面来实现。需要用到JQUery，以及 json 和 JAVA 对象的转换。</p>
<p><img src="/" class="lazyload" data-src="https://i.loli.net/2020/03/23/RFByUK9ZYEJVfOa.png"  alt="Snipaste_2020-03-23_16-55-12.png"></p>
<h3 id="前端页面编写"><a href="#前端页面编写" class="headerlink" title="前端页面编写"></a>前端页面编写</h3><p>焦点离开用户名框后，会自动提交输入框内容到服务器，发送 ajax 请求，解析服务器返回 json 如果 userExsit 为true，则显示用户名已存在，为 false 则显示用户名可用。</p>
<a id="more"></a>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>注册页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery-3.3.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//在页面加载完成后</span></span></span><br><span class="line"><span class="javascript">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//给username绑定blur事件</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">"#username"</span>).blur(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//获取username文本输入框的值</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> username = $(<span class="keyword">this</span>).val();</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//发送ajax请求</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">//期望服务器响应回的数据格式：&#123;"userExsit":true,"msg":"此用户名太受欢迎,请更换一个"&#125;</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">//                         &#123;"userExsit":false,"msg":"用户名可用"&#125;</span></span></span><br><span class="line"><span class="javascript">                $.<span class="keyword">get</span>("findUserServlet",&#123;username:username&#125;,<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">//判断userExsit键的值是否是true</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">                    <span class="comment">// alert(data);</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> span = $(<span class="string">"#s_username"</span>);</span></span><br><span class="line">                    if(data.userExsit)&#123;</span><br><span class="line"><span class="actionscript">                        <span class="comment">//用户名存在</span></span></span><br><span class="line"><span class="actionscript">                        span.css(<span class="string">"color"</span>,<span class="string">"red"</span>);</span></span><br><span class="line">                        span.html(data.msg);</span><br><span class="line"><span class="actionscript">                    &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">                        <span class="comment">//用户名不存在</span></span></span><br><span class="line"><span class="actionscript">                        span.css(<span class="string">"color"</span>,<span class="string">"green"</span>);</span></span><br><span class="line">                        span.html(data.msg);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"username"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">placeholder</span>=<span class="string">"请输入用户名"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"s_username"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">placeholder</span>=<span class="string">"请输入密码"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"注册"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="Servlet-编写"><a href="#Servlet-编写" class="headerlink" title="Servlet 编写"></a>Servlet 编写</h3><p>接受用户传来的数据，与 tom 进行比对，设置 userExsit 值为 true 或 false ，并返回 json 数据。 </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/findUserServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FindUserServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        response.setContentType(<span class="string">"application/json;charset=utf-8"</span>);</span><br><span class="line">        String username = request.getParameter(<span class="string">"username"</span>);</span><br><span class="line">        System.out.println(username);</span><br><span class="line">        Map&lt;String,Object&gt; map = <span class="keyword">new</span> HashMap&lt;String,Object&gt;();</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">"tom"</span>.equals(username))&#123;</span><br><span class="line">            map.put(<span class="string">"userExsit"</span>,<span class="keyword">true</span>);</span><br><span class="line">            map.put(<span class="string">"msg"</span>,<span class="string">"此用户名已存在，请换一个"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            map.put(<span class="string">"userExsit"</span>,<span class="keyword">false</span>);</span><br><span class="line">            map.put(<span class="string">"msg"</span>,<span class="string">"用户名可用"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        mapper.writeValue(response.getWriter(),map);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>JAVAWeb</category>
      </categories>
      <tags>
        <tag>AJAX</tag>
        <tag>JQuery</tag>
      </tags>
  </entry>
  <entry>
    <title>JQuery-广告的自动展示与关闭</title>
    <url>/2020/03/22/JQuery-%E5%B9%BF%E5%91%8A%E7%9A%84%E8%87%AA%E5%8A%A8%E5%B1%95%E7%A4%BA%E4%B8%8E%E5%85%B3%E9%97%AD/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>编写两个事件，广告的显示与关闭，设定动画后，在页面加载时设定计数器，3秒后显示广告，5秒后广告自动消失</p>
<a id="more"></a>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>广告的自动显示与隐藏<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#content</span>&#123;<span class="attribute">width</span>:<span class="number">100%</span>;<span class="attribute">height</span>:<span class="number">500px</span>;<span class="attribute">background</span>:<span class="number">#999</span>&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--引入jquery--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.3.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//显示广告</span></span></span><br><span class="line"><span class="javascript">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">            setTimeout(adShow,<span class="number">3000</span>)<span class="comment">//三秒后展示</span></span></span><br><span class="line"><span class="actionscript">            setTimeout(adHide,<span class="number">8000</span>)<span class="comment">//八秒后消失</span></span></span><br><span class="line">        &#125;)</span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">adShow</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">"#ad"</span>).show(<span class="string">"slow"</span>)<span class="comment">//进入动画设置</span></span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">adHide</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">"#ad"</span>).hide(<span class="string">"slow"</span>)<span class="comment">//消失动画设置</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 整体的DIV --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 广告DIV --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"ad"</span> <span class="attr">style</span>=<span class="string">"display: none;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">style</span>=<span class="string">"width:100%"</span> <span class="attr">src</span>=<span class="string">"../img/adv.jpg"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 下方正文部分 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">        正文部分</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>JAVAWeb</category>
      </categories>
      <tags>
        <tag>JQuery</tag>
      </tags>
  </entry>
  <entry>
    <title>Filter过滤敏感词汇</title>
    <url>/2020/03/21/Filter%E8%BF%87%E6%BB%A4%E6%95%8F%E6%84%9F%E8%AF%8D%E6%B1%87/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>过滤敏感词汇的实现，需要对 request 对象进行增强，增强获取参数的相关方法，然后替换敏感词汇为***。使用代理模式实现</p>
<a id="more"></a>

<h3 id="过滤器的编写"><a href="#过滤器的编写" class="headerlink" title="过滤器的编写"></a>过滤器的编写</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebFilter</span>(<span class="string">"/*"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SensitiveFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest req, ServletResponse resp, FilterChain chain)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//创建代理对象增强getparammeter方法</span></span><br><span class="line">        ServletRequest proxy_req = (ServletRequest) Proxy.newProxyInstance(req.getClass().getClassLoader(), req.getClass().getInterfaces(), <span class="keyword">new</span> InvocationHandler() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">                <span class="comment">//是否是getParameter方法</span></span><br><span class="line">                <span class="keyword">if</span> (method.getName().equals(<span class="string">"getParameter"</span>))&#123;</span><br><span class="line">                    <span class="comment">//增强返回值</span></span><br><span class="line">                    String value = (String) method.invoke(req,args);</span><br><span class="line">                    <span class="keyword">if</span> (value != <span class="keyword">null</span>)&#123;</span><br><span class="line">                        <span class="keyword">for</span> (String str : list) &#123;</span><br><span class="line">                            <span class="keyword">if</span> (value.contains(str))&#123;</span><br><span class="line">                                value = value.replaceAll(str,<span class="string">"***"</span>);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> value;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> method.invoke(req,args);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        chain.doFilter(proxy_req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;String&gt;();<span class="comment">//敏感词汇集合</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig config)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//加载文件</span></span><br><span class="line">            ServletContext servletContext = config.getServletContext();</span><br><span class="line">            String realPath = servletContext.getRealPath(<span class="string">"/WEB-INF/classes/敏感词汇.txt"</span>);</span><br><span class="line">            <span class="comment">//读取文件</span></span><br><span class="line">            BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> FileReader(realPath));</span><br><span class="line">            <span class="comment">//将文件每一行数据添加到list中</span></span><br><span class="line">            String line = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">while</span> ((line = br.readLine())!= <span class="keyword">null</span>)&#123;</span><br><span class="line">                list.add(line);</span><br><span class="line">            &#125;</span><br><span class="line">            br.close();</span><br><span class="line">            System.out.println(list);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="测试类的编写"><a href="#测试类的编写" class="headerlink" title="测试类的编写"></a>测试类的编写</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/testServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        String name = request.getParameter(<span class="string">"name"</span>);</span><br><span class="line">        String msg = request.getParameter(<span class="string">"msg"</span>);</span><br><span class="line">        System.out.println(name+<span class="string">":"</span>+msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="敏感词汇文件"><a href="#敏感词汇文件" class="headerlink" title="敏感词汇文件"></a>敏感词汇文件</h3><p>笨蛋<br>坏蛋</p>
]]></content>
      <categories>
        <category>JAVAWeb</category>
      </categories>
      <tags>
        <tag>filter</tag>
      </tags>
  </entry>
  <entry>
    <title>Filter过滤器验证用户是否登陆功能</title>
    <url>/2020/03/21/Filter%E8%BF%87%E6%BB%A4%E5%99%A8%E9%AA%8C%E8%AF%81%E7%94%A8%E6%88%B7%E6%98%AF%E5%90%A6%E7%99%BB%E9%99%86%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>为了保护信息安全，防止直接访问信息页，需要验证用户是否登陆。思路为，先过滤掉登陆功能所包含资源的路径，在访问其他资源时判断用户是否登陆——判断 Session 中是否包含User。有的话放行，没有的话跳转到登陆页。<br><img src="/" class="lazyload" data-src="https://i.loli.net/2020/03/21/ShtnIeXgMNaHALd.png"  alt="Snipaste_2020-03-21_20-50-13.png"></p>
<a id="more"></a>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebFilter</span>(<span class="string">"/*"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest req, ServletResponse resp, FilterChain chain)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//强制转化</span></span><br><span class="line">        HttpServletRequest request = (HttpServletRequest) req;</span><br><span class="line">        <span class="comment">//获取资源请求路径</span></span><br><span class="line">        String uri = request.getRequestURI();</span><br><span class="line">        <span class="comment">//判断是否包含登陆相关资源路径,注意排除掉css/js/图片/验证码等资源</span></span><br><span class="line">        <span class="keyword">if</span>(uri.contains(<span class="string">"/login.jsp"</span>) || uri.contains(<span class="string">"/loginServlet"</span>) || uri.contains(<span class="string">"/js/"</span>)</span><br><span class="line">                || uri.contains(<span class="string">"/css/"</span>) || uri.contains(<span class="string">"/fonts/"</span>) || uri.contains(<span class="string">"/checkCodeServlet"</span>))&#123;</span><br><span class="line">            <span class="comment">//包含登陆资源路径则放行</span></span><br><span class="line">            chain.doFilter(req, resp);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//不包含，需要判断用户是否已登陆</span></span><br><span class="line">            <span class="comment">//从session中获取user</span></span><br><span class="line">            Object user = request.getSession().getAttribute(<span class="string">"user"</span>);</span><br><span class="line">            <span class="keyword">if</span> (user != <span class="keyword">null</span>)&#123;</span><br><span class="line">                chain.doFilter(req, resp);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                request.setAttribute(<span class="string">"login_msg"</span>,<span class="string">"您尚未登陆，请登录"</span>);</span><br><span class="line">                request.getRequestDispatcher(<span class="string">"/login.jsp"</span>).forward(request,resp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig config)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>JAVAWeb</category>
      </categories>
      <tags>
        <tag>filter</tag>
        <tag>Session</tag>
      </tags>
  </entry>
  <entry>
    <title>JAVAWeb分页中查询功能的实现</title>
    <url>/2020/03/20/JAVAWeb%E5%88%86%E9%A1%B5%E4%B8%AD%E6%9F%A5%E8%AF%A2%E5%8A%9F%E8%83%BD%E7%9A%84%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>实现查询数据分页显示，需要在分页显示功能的基础上，获取用户输入值，并进行 sql 语句的拼接，并且不影响分页数据的正常获取。分页功能的编写在上一篇博客。</p>
<h3 id="Servlet改写"><a href="#Servlet改写" class="headerlink" title="Servlet改写"></a>Servlet改写</h3><p>将获取的输入放入 map 集合 condition 中，并调用service查询返回数据集合，然后输入值要通过 request 传回 list.jsp 进行数据回显。</p>
<a id="more"></a>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/findUserByPageServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FindUserByPageServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//设置编码</span></span><br><span class="line">        request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">        <span class="comment">//获取参数</span></span><br><span class="line">        String currentPage = request.getParameter(<span class="string">"currentPage"</span>);<span class="comment">//当前页码</span></span><br><span class="line">        String rows = request.getParameter(<span class="string">"rows"</span>);<span class="comment">//每页显示条数</span></span><br><span class="line">        <span class="keyword">if</span>(currentPage == <span class="keyword">null</span> || <span class="string">""</span>.equals(currentPage))&#123;</span><br><span class="line">            currentPage = <span class="string">"1"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(rows == <span class="keyword">null</span> || <span class="string">""</span>.equals(rows))&#123;</span><br><span class="line">            rows = <span class="string">"5"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取条件查询参数</span></span><br><span class="line">        Map&lt;String, String[]&gt; codition = request.getParameterMap();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用service查询</span></span><br><span class="line">        UserSvice service = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">        PageBean&lt;User&gt; pb = service.finUserByPage(currentPage,rows,codition);</span><br><span class="line">    </span><br><span class="line">        <span class="comment">//将PageBean存入request</span></span><br><span class="line">        request.setAttribute(<span class="string">"pb"</span>,pb);</span><br><span class="line">        request.setAttribute(<span class="string">"condition"</span>,codition);<span class="comment">//将查询条件存入request回显</span></span><br><span class="line">        <span class="comment">//转发到list.jsp</span></span><br><span class="line">        request.getRequestDispatcher(<span class="string">"/list.jsp"</span>).forward(request,response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h3 id="Service-改写"><a href="#Service-改写" class="headerlink" title="Service 改写"></a>Service 改写</h3><p>调用 dao 查询总记录数增加参数 condition ，如果 condition 有值则为搜索状态，获得符合查询条件的总记录数，没有搜索时为空，获得总记录数。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> PageBean&lt;User&gt; <span class="title">finUserByPage</span><span class="params">(String _currentPage, String _rows, Map&lt;String, String[]&gt; codition)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> currentPage = Integer.parseInt(_currentPage);</span><br><span class="line">    <span class="keyword">int</span> rows = Integer.parseInt(_rows);</span><br><span class="line">    <span class="keyword">if</span>(currentPage &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">        currentPage = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//创建空的PageBean对象</span></span><br><span class="line">    PageBean&lt;User&gt; pb = <span class="keyword">new</span> PageBean&lt;User&gt;();</span><br><span class="line">    <span class="comment">//设置参数</span></span><br><span class="line">    pb.setCurrentPage(currentPage);</span><br><span class="line">    pb.setRows(rows);</span><br><span class="line">    <span class="comment">//调用dao查询总记录数</span></span><br><span class="line">    <span class="keyword">int</span> totalCount = dao.findTotalCount(codition);</span><br><span class="line">    pb.setTotalCount(totalCount);</span><br><span class="line">    <span class="comment">//调用dao查询list集合</span></span><br><span class="line">    <span class="comment">//计算开始的记录的索引</span></span><br><span class="line">    <span class="keyword">int</span> start = (currentPage - <span class="number">1</span>) * rows;</span><br><span class="line">    List&lt;User&gt; list = dao.findByPage(start,rows,codition);</span><br><span class="line">    pb.setList(list);</span><br><span class="line">    <span class="comment">//计算总页码</span></span><br><span class="line">    <span class="keyword">int</span> totalPage = totalCount % rows == <span class="number">0</span> ? totalCount/rows : totalCount/rows + <span class="number">1</span>;</span><br><span class="line">    pb.setTotalPage(totalPage);</span><br><span class="line">    <span class="keyword">return</span> pb;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h3 id="Dao方法改写"><a href="#Dao方法改写" class="headerlink" title="Dao方法改写"></a>Dao方法改写</h3><p>改写原 sql 语句为了拼接后续条件语句，添加 where 1 = 1 。当 condition 中的值不为空时，进行 sql 语句拼接。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByPage</span><span class="params">(<span class="keyword">int</span> start, <span class="keyword">int</span> rows, Map&lt;String, String[]&gt; codition)</span> </span>&#123;</span><br><span class="line">    String sql = <span class="string">"select * from user where 1 = 1"</span>;</span><br><span class="line">    StringBuilder sb = <span class="keyword">new</span> StringBuilder(sql);</span><br><span class="line">    <span class="comment">//遍历map</span></span><br><span class="line">    Set&lt;String&gt; Keyset = codition.keySet();</span><br><span class="line">    <span class="comment">//定义参数集合</span></span><br><span class="line">    List&lt;Object&gt; params = <span class="keyword">new</span> ArrayList&lt;Object&gt;();</span><br><span class="line">    <span class="keyword">for</span> (String key : Keyset) &#123;</span><br><span class="line">        <span class="comment">//排除分页条件参数</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"currentPage"</span>.equals(key) || <span class="string">"rows"</span>.equals(key))&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获取value</span></span><br><span class="line">        String value = codition.get(key)[<span class="number">0</span>];</span><br><span class="line">        <span class="comment">//判断value是否有值</span></span><br><span class="line">        <span class="keyword">if</span> (value != <span class="keyword">null</span> &amp;&amp; !<span class="string">""</span>.equals(value))&#123;</span><br><span class="line">            <span class="comment">//有值</span></span><br><span class="line">            sb.append(<span class="string">" and "</span>+key+<span class="string">" like ? "</span>);</span><br><span class="line">            params.add(<span class="string">"%"</span>+value+<span class="string">"%"</span>);<span class="comment">//?条件的值</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//添加分页查询</span></span><br><span class="line">    sb.append(<span class="string">" limit ?,? "</span>);</span><br><span class="line">    <span class="comment">//添加分页查询参数</span></span><br><span class="line">    params.add(start);</span><br><span class="line">    params.add(rows);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> template.query(sb.toString(),<span class="keyword">new</span> BeanPropertyRowMapper&lt;User&gt;(User<span class="class">.<span class="keyword">class</span>),<span class="title">params</span>.<span class="title">toArray</span>())</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h3 id="前端页面改写"><a href="#前端页面改写" class="headerlink" title="前端页面改写"></a>前端页面改写</h3><p>查询框：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"form-inline"</span> <span class="attr">action</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/findUserByPageServlet"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"exampleInputName2"</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"$&#123;condition.name[0]&#125;"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"exampleInputName2"</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"exampleInputName3"</span>&gt;</span>籍贯<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"address"</span> <span class="attr">value</span>=<span class="string">"$&#123;condition.address[0]&#125;"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"exampleInputName3"</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"exampleInputEmail2"</span>&gt;</span>邮箱<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">value</span>=<span class="string">"$&#123;condition.email[0]&#125;"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"exampleInputEmail2"</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>查询<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>分页框：</p>
<p>须在页码、上一页、下一页的点击链接上添加用户输入的值，然后才能在查询出的页面进行正常跳转。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">nav</span> <span class="attr">aria-label</span>=<span class="string">"Page navigation"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"pagination"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$&#123;pb.currentPage == 1&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"disabled"</span>&gt;</span><span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$&#123;pb.currentPage != 1&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/findUserByPageServlet?currentPage=$&#123;pb.currentPage - 1&#125;&amp;rows=5&amp;name=$&#123;condition.name[0]&#125;&amp;address=$&#123;condition.address[0]&#125;&amp;email=$&#123;condition.email[0]&#125;"</span> <span class="attr">aria-label</span>=<span class="string">"Previous"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="symbol">&amp;laquo;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">begin</span>=<span class="string">"1"</span> <span class="attr">end</span>=<span class="string">"$&#123;pb.totalPage&#125;"</span> <span class="attr">var</span>=<span class="string">"i"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$&#123;pb.currentPage == i&#125;"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/findUserByPageServlet?currentPage=$&#123;i&#125;&amp;rows=5&amp;name=$&#123;condition.name[0]&#125;&amp;address=$&#123;condition.address[0]&#125;&amp;email=$&#123;condition.email[0]&#125;"</span>&gt;</span>$&#123;i&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$&#123;pb.currentPage != i&#125;"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/findUserByPageServlet?currentPage=$&#123;i&#125;&amp;rows=5&amp;name=$&#123;condition.name[0]&#125;&amp;address=$&#123;condition.address[0]&#125;&amp;email=$&#123;condition.email[0]&#125;"</span>&gt;</span>$&#123;i&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$&#123;pb.currentPage == pb.totalPage&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"disabled"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/findUserByPageServlet?currentPage=$&#123;pb.currentPage&#125;&amp;rows=5&amp;name=$&#123;condition.name[0]&#125;&amp;address=$&#123;condition.address[0]&#125;&amp;email=$&#123;condition.email[0]&#125;"</span> <span class="attr">aria-label</span>=<span class="string">"Next"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="symbol">&amp;raquo;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$&#123;pb.currentPage &lt; pb.totalPage&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/findUserByPageServlet?currentPage=$&#123;pb.currentPage + 1&#125;&amp;rows=5&amp;name=$&#123;condition.name[0]&#125;&amp;address=$&#123;condition.address[0]&#125;&amp;email=$&#123;condition.email[0]&#125;"</span> <span class="attr">aria-label</span>=<span class="string">"Next"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="symbol">&amp;raquo;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"font-size: 25px;margin-left: 5px"</span>&gt;</span></span><br><span class="line">                共$&#123;pb.totalCount&#125;条记录，共$&#123;pb.totalPage&#125;页</span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>JAVAWeb</category>
      </categories>
      <tags>
        <tag>分页查询功能</tag>
      </tags>
  </entry>
  <entry>
    <title>JAVAWeb分页功能实现</title>
    <url>/2020/03/20/JAVAWeb%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>当管理成百上千条数据，并在列表显示时，数据全部放在一页显示效率低而且加载速度会变慢。这时就需要将数据分页显示。<br>示例：<br><img src="/" class="lazyload" data-src="https://i.loli.net/2020/03/20/8p1Y9tlqAOLZKGW.png"  alt="Snipaste_2020-03-20_15-24-20.png"></p>
<p>具体思路为，编写 PageBean 获取总的记录数、每页显示条数和当前页码，并通过计算获取总页码数。并按页获取数据存入 list，每次点下一页获取之后的数据，每次点前一页显示之前的数据，根据当前页码和每页显示数，多次获取列表数据并显示。并要注意下一页上一页功能可能出现的bug。</p>
<a id="more"></a>

<h3 id="编写-PageBean-类"><a href="#编写-PageBean-类" class="headerlink" title="编写 PageBean 类"></a>编写 PageBean 类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PageBean</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> totalCount;<span class="comment">//总记录数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> totalPage;<span class="comment">//总页码</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;T&gt; list;<span class="comment">//每页的数据</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> currentPage;<span class="comment">//当前页码</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> rows;<span class="comment">//每页显示记录数</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getTotalCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> totalCount;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTotalCount</span><span class="params">(<span class="keyword">int</span> totalCount)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.totalCount = totalCount;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getTotalPage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> totalPage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTotalPage</span><span class="params">(<span class="keyword">int</span> totalPage)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.totalPage = totalPage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;T&gt; <span class="title">getList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setList</span><span class="params">(List&lt;T&gt; list)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.list = list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCurrentPage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> currentPage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCurrentPage</span><span class="params">(<span class="keyword">int</span> currentPage)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.currentPage = currentPage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getRows</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> rows;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRows</span><span class="params">(<span class="keyword">int</span> rows)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.rows = rows;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"PageBean&#123;"</span> +</span><br><span class="line">                <span class="string">"totalCount="</span> + totalCount +</span><br><span class="line">                <span class="string">", totalPage="</span> + totalPage +</span><br><span class="line">                <span class="string">", list="</span> + list +</span><br><span class="line">                <span class="string">", currentPage="</span> + currentPage +</span><br><span class="line">                <span class="string">", rows="</span> + rows +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h3 id="编写FindUserByPageServlet"><a href="#编写FindUserByPageServlet" class="headerlink" title="编写FindUserByPageServlet"></a>编写FindUserByPageServlet</h3><p>从页面获取当前页码和每页显示条数，调用 service 进行查询</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/findUserByPageServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FindUserByPageServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获取参数</span></span><br><span class="line">        String currentPage = request.getParameter(<span class="string">"currentPage"</span>);<span class="comment">//当前页码</span></span><br><span class="line">        String rows = request.getParameter(<span class="string">"rows"</span>);<span class="comment">//每页显示条数</span></span><br><span class="line">        <span class="keyword">if</span>(currentPage == <span class="keyword">null</span> || <span class="string">""</span>.equals(currentPage))&#123;<span class="comment">//防止空页面或参数丢失报错</span></span><br><span class="line">            currentPage = <span class="string">"1"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(rows == <span class="keyword">null</span> || <span class="string">""</span>.equals(rows))&#123;</span><br><span class="line">            rows = <span class="string">"5"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//调用service查询</span></span><br><span class="line">        UserSvice service = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">        PageBean&lt;User&gt; pb = service.finUserByPage(currentPage,rows);</span><br><span class="line">        <span class="comment">//将PageBean存入request</span></span><br><span class="line">        request.setAttribute(<span class="string">"pb"</span>,pb);</span><br><span class="line">        <span class="comment">//转发到list.jsp</span></span><br><span class="line">        request.getRequestDispatcher(<span class="string">"/list.jsp"</span>).forward(request,response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="Service方法的编写"><a href="#Service方法的编写" class="headerlink" title="Service方法的编写"></a>Service方法的编写</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> PageBean&lt;User&gt; <span class="title">finUserByPage</span><span class="params">(String _currentPage, String _rows)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> currentPage = Integer.parseInt(_currentPage);</span><br><span class="line">    <span class="keyword">int</span> rows = Integer.parseInt(_rows);</span><br><span class="line">    <span class="keyword">if</span>(currentPage &lt;= <span class="number">0</span>)&#123;<span class="comment">//防止用户在第一页时点击前一页报错</span></span><br><span class="line">        currentPage = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//创建空的PageBean对象</span></span><br><span class="line">    PageBean&lt;User&gt; pb = <span class="keyword">new</span> PageBean&lt;User&gt;();</span><br><span class="line">    <span class="comment">//设置参数</span></span><br><span class="line">    pb.setCurrentPage(currentPage);</span><br><span class="line">    pb.setRows(rows);</span><br><span class="line">    <span class="comment">//调用dao查询总记录数</span></span><br><span class="line">    <span class="keyword">int</span> totalCount = dao.findTotalCount();</span><br><span class="line">    pb.setTotalCount(totalCount);</span><br><span class="line">    <span class="comment">//调用dao查询list集合</span></span><br><span class="line">    <span class="comment">//计算开始的记录的索引</span></span><br><span class="line">    <span class="keyword">int</span> start = (currentPage - <span class="number">1</span>) * rows;</span><br><span class="line">    List&lt;User&gt; list = dao.findByPage(start,rows);</span><br><span class="line">    pb.setList(list);</span><br><span class="line">    <span class="comment">//计算总页码</span></span><br><span class="line">    <span class="keyword">int</span> totalPage = totalCount % rows == <span class="number">0</span> ? totalCount/rows : totalCount/rows + <span class="number">1</span>;</span><br><span class="line">    pb.setTotalPage(totalPage);</span><br><span class="line">    <span class="keyword">return</span> pb;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h3 id="Dao方法编写"><a href="#Dao方法编写" class="headerlink" title="Dao方法编写"></a>Dao方法编写</h3><ol>
<li>获取数据总条数</li>
<li>根据获取的要开始查找的索引 start 和 所需查找的条数 rows 查找对应数量数据</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findTotalCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    String sql = <span class="string">"select count(*) from user"</span>;</span><br><span class="line">    <span class="keyword">return</span> template.queryForObject(sql,Integer<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByPage</span><span class="params">(<span class="keyword">int</span> start, <span class="keyword">int</span> rows)</span> </span>&#123;</span><br><span class="line">    String sql = <span class="string">"select * from user limit ? , ?"</span>;</span><br><span class="line">    <span class="keyword">return</span> template.query(sql,<span class="keyword">new</span> BeanPropertyRowMapper&lt;User&gt;(User<span class="class">.<span class="keyword">class</span>),<span class="title">start</span>,<span class="title">rows</span>)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h3 id="前端页面编写"><a href="#前端页面编写" class="headerlink" title="前端页面编写"></a>前端页面编写</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"form1"</span> <span class="attr">action</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/delSelectedServlet"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">class</span>=<span class="string">"table table-bordered table-hover"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">"success"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"firstCb"</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>编号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>籍贯<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>QQ<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>邮箱<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">items</span>=<span class="string">"$&#123;pb.list&#125;"</span> <span class="attr">var</span>=<span class="string">"user"</span> <span class="attr">varStatus</span>=<span class="string">"s"</span>&gt;</span>//将PageBean获取的list展示到页面</span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"uid"</span> <span class="attr">value</span>=<span class="string">"$&#123;user.id&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;s.count&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;user.name&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;user.gender&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;user.age&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;user.address&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;user.qq&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;user.email&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn btn-default btn-sm"</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/findUserServlet?id=$&#123;user.id&#125;"</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn btn-default btn-sm"</span> <span class="attr">href</span>=<span class="string">"javascript:deleteUser($&#123;user.id&#125;);"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>//分页组件</span><br><span class="line">    <span class="tag">&lt;<span class="name">nav</span> <span class="attr">aria-label</span>=<span class="string">"Page navigation"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"pagination"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$&#123;pb.currentPage == 1&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"disabled"</span>&gt;</span><span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$&#123;pb.currentPage != 1&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/findUserByPageServlet?currentPage=$&#123;pb.currentPage - 1&#125;&amp;rows=5"</span> <span class="attr">aria-label</span>=<span class="string">"Previous"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="symbol">&amp;laquo;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">begin</span>=<span class="string">"1"</span> <span class="attr">end</span>=<span class="string">"$&#123;pb.totalPage&#125;"</span> <span class="attr">var</span>=<span class="string">"i"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$&#123;pb.currentPage == i&#125;"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> 		                         <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/findUserByPageServlet?currentPage=$&#123;i&#125;&amp;rows=5"</span>&gt;</span>$&#123;i&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$&#123;pb.currentPage != i&#125;"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/findUserByPageServlet?currentPage=$&#123;i&#125;&amp;rows=5"</span>&gt;</span>$&#123;i&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br><span class="line">               //下一页按钮禁用状态及报错处理</span><br><span class="line">                <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$&#123;pb.currentPage == pb.totalPage&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"disabled"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/findUserByPageServlet?currentPage=$&#123;pb.currentPage&#125;&amp;rows=5"</span> <span class="attr">aria-label</span>=<span class="string">"Next"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="symbol">&amp;raquo;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$&#123;pb.currentPage &lt; pb.totalPage&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/findUserByPageServlet?currentPage=$&#123;pb.currentPage + 1&#125;&amp;rows=5"</span> <span class="attr">aria-label</span>=<span class="string">"Next"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="symbol">&amp;raquo;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"font-size: 25px;margin-left: 5px"</span>&gt;</span></span><br><span class="line">                共$&#123;pb.totalCount&#125;条记录，共$&#123;pb.totalPage&#125;页</span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>JAVAWeb</category>
      </categories>
      <tags>
        <tag>分页功能</tag>
      </tags>
  </entry>
  <entry>
    <title>JAVAWeb列表数据批量删除思路及实现</title>
    <url>/2020/03/19/JAVAWeb%E5%88%97%E8%A1%A8%E6%95%B0%E6%8D%AE%E6%89%B9%E9%87%8F%E5%88%A0%E9%99%A4%E6%80%9D%E8%B7%AF%E5%8F%8A%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>带复选框 checkbox 的列表要实现批量删除的功能，首先要获取被选中的信息的全部 id，可以把该列表放入一个 form 表单中，以获取表单信息的方式获取全部 id，然后遍历 id，循环删除所有信息。<br>列表形式：<br><img src="/" class="lazyload" data-src="https://i.loli.net/2020/03/19/OwKoQla3PRXrCxI.png"  alt="sp20200319_190808_879.png"></p>
<a id="more"></a>

<h3 id="获取列表选中信息-id"><a href="#获取列表选中信息-id" class="headerlink" title="获取列表选中信息 id"></a>获取列表选中信息 id</h3><p>把 table 放入 form表单，并把复选框 checkbox 的 value 值设置为 id：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"form1"</span> <span class="attr">action</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/delSelectedServlet"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">class</span>=<span class="string">"table table-bordered table-hover"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">"success"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"firstCb"</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>编号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>籍贯<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>QQ<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>邮箱<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">items</span>=<span class="string">"$&#123;users&#125;"</span> <span class="attr">var</span>=<span class="string">"user"</span> <span class="attr">varStatus</span>=<span class="string">"s"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"uid"</span> <span class="attr">value</span>=<span class="string">"$&#123;user.id&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;s.count&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;user.name&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;user.gender&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;user.age&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;user.address&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;user.qq&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;user.email&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn btn-default btn-sm"</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/findUserServlet?id=$&#123;user.id&#125;"</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn btn-default btn-sm"</span> <span class="attr">href</span>=<span class="string">"javascript:deleteUser($&#123;user.id&#125;);"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="点击删除按钮提交表单，获取-id"><a href="#点击删除按钮提交表单，获取-id" class="headerlink" title="点击删除按钮提交表单，获取 id"></a>点击删除按钮提交表单，获取 id</h3><p>按钮：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">href</span>=<span class="string">"javascript:void(0);"</span> <span class="attr">id</span>=<span class="string">"delSelected"</span> &gt;</span>删除选中<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>js代码:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">           <span class="built_in">document</span>.getElementById(<span class="string">"delSelected"</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">               <span class="keyword">if</span>(confirm(<span class="string">"您确定要删除选中信息吗？"</span>))&#123;</span><br><span class="line">                   <span class="keyword">var</span> flag = <span class="literal">false</span>;</span><br><span class="line">                   <span class="comment">//判断是否有选中条目</span></span><br><span class="line">                   <span class="keyword">var</span> cbs = <span class="built_in">document</span>.getElementsByName(<span class="string">"uid"</span>);</span><br><span class="line">                   <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; cbs.length; i++) &#123;</span><br><span class="line">                       <span class="keyword">if</span>(cbs[i].checked)&#123;</span><br><span class="line">                           flag = <span class="literal">true</span>;</span><br><span class="line">                           <span class="keyword">break</span>;</span><br><span class="line">                       &#125;</span><br><span class="line">                   &#125;</span><br><span class="line">                   <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">                       <span class="built_in">document</span>.getElementById(<span class="string">"form1"</span>).submit();</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="comment">//获取第一个checkbox</span></span><br><span class="line">           <span class="built_in">document</span>.getElementById(<span class="string">"firstCb"</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">               <span class="comment">//获取下摆你列表中所有cd</span></span><br><span class="line">               <span class="keyword">var</span> cbs = <span class="built_in">document</span>.getElementsByName(<span class="string">"uid"</span>);</span><br><span class="line">               <span class="comment">//遍历</span></span><br><span class="line">               <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; cbs.length; i++) &#123;</span><br><span class="line">                   <span class="comment">//设置cbs[]的check状态 = firstCb.checked</span></span><br><span class="line">                   cbs[i].checked = <span class="keyword">this</span>.checked;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure>

<h3 id="DelSelectedServlet"><a href="#DelSelectedServlet" class="headerlink" title="DelSelectedServlet"></a>DelSelectedServlet</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/delSelectedServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DelSelectedServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获取所有id</span></span><br><span class="line">        String[] ids = request.getParameterValues(<span class="string">"uid"</span>);</span><br><span class="line">        <span class="comment">//调用service删除</span></span><br><span class="line">        UserSvice service = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">        service.delSelectedUser(ids);</span><br><span class="line">        <span class="comment">//跳转查询所有servlet</span></span><br><span class="line">        response.sendRedirect(request.getContextPath()+<span class="string">"/userListServlet"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Service-方法"><a href="#Service-方法" class="headerlink" title="Service 方法"></a>Service 方法</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delSelectedUser</span><span class="params">(String[] ids)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//遍历数组</span></span><br><span class="line">    <span class="keyword">for</span> (String id : ids) &#123;</span><br><span class="line">        <span class="comment">//调用dao删除</span></span><br><span class="line">        dao.delete(Integer.parseInt(id));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="dao方法"><a href="#dao方法" class="headerlink" title="dao方法"></a>dao方法</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//定义sql</span></span><br><span class="line">    String sql = <span class="string">"delete from user where id = ?"</span>;</span><br><span class="line">    <span class="comment">//执行sql</span></span><br><span class="line">    template.update(sql,id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>JAVAWeb</category>
      </categories>
      <tags>
        <tag>web列表批量删除</tag>
      </tags>
  </entry>
  <entry>
    <title>Session-判断用户登陆验证码是否正确</title>
    <url>/2020/03/16/Session-%E5%88%A4%E6%96%AD%E7%94%A8%E6%88%B7%E7%99%BB%E9%99%86%E9%AA%8C%E8%AF%81%E7%A0%81%E6%98%AF%E5%90%A6%E6%AD%A3%E7%A1%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>验证码为随机生成，服务器从 session 获取验证码，并和用户输入的验证码进行比对，结果通过 requesrt 转发到 success.jsp 和 login.jsp</p>
<a id="more"></a>

<h3 id="login-jsp"><a href="#login-jsp" class="headerlink" title="login.jsp"></a>login.jsp</h3><p>简单登陆页面：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>登陆<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.getElementById(<span class="string">"img"</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">this</span>.src=<span class="string">"/day16/checkCodeServlet?time="</span>+<span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        div&#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">color</span><span class="selector-pseudo">:red</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/day16/loginServlet"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">table</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>验证码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"checkCode"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"/day16/checkCodeServlet"</span> <span class="attr">id</span>=<span class="string">"img"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"登陆"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">%=request.getAttribute("cc_error")==null?</span> ""<span class="attr">:request.getAttribute</span>("<span class="attr">cc_error</span>")%&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">%=request.getAttribute("login_error")==null?"":request.getAttribute("login_error")%</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="success-jsp"><a href="#success-jsp" class="headerlink" title="success.jsp"></a>success.jsp</h3><p>登陆成功后跳转到该页面，并获取用户信息展示：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;<span class="name">%=request.getSession().getAttribute("user")</span> %&gt;</span>,欢迎您<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>


<h3 id="LoginServlet"><a href="#LoginServlet" class="headerlink" title="LoginServlet"></a>LoginServlet</h3><p>获取 session 中验证码信息，进行比对，并转发结果到相关页面。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/loginServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//设置request编码</span></span><br><span class="line">        request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">        <span class="comment">//获取参数</span></span><br><span class="line">        String username = request.getParameter(<span class="string">"username"</span>);</span><br><span class="line">        String password = request.getParameter(<span class="string">"password"</span>);</span><br><span class="line">        String checkCode = request.getParameter(<span class="string">"checkCode"</span>);</span><br><span class="line">        <span class="comment">//获取生成的验证码</span></span><br><span class="line">        HttpSession session = request.getSession();</span><br><span class="line">        String checkCode_session = (String) session.getAttribute(<span class="string">"checkCode_session"</span>);</span><br><span class="line">        <span class="comment">//删除session中存储的验证码</span></span><br><span class="line">        session.removeAttribute(<span class="string">"checkCode_session"</span>);</span><br><span class="line">        <span class="comment">//判断验证码是否正确</span></span><br><span class="line">        <span class="keyword">if</span>(checkCode_session != <span class="keyword">null</span> &amp;&amp;checkCode_session.equalsIgnoreCase(checkCode))&#123;</span><br><span class="line">            <span class="comment">//忽略大小写比较字符串</span></span><br><span class="line">            <span class="comment">//验证码正确</span></span><br><span class="line">            <span class="comment">//判断用户名和密码是否一样</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="string">"zhangsan"</span>.equals(username)&amp;&amp;<span class="string">"123"</span>.equals(password))&#123;<span class="comment">//查询数据库</span></span><br><span class="line">                <span class="comment">//登陆成功</span></span><br><span class="line">                <span class="comment">//存储用户信息</span></span><br><span class="line">                session.setAttribute(<span class="string">"user"</span>,username);</span><br><span class="line">                <span class="comment">//重定向到success.jsp</span></span><br><span class="line">                response.sendRedirect(request.getContextPath()+<span class="string">"/success.jsp"</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//登陆失败</span></span><br><span class="line">                <span class="comment">//存储提示信息到request</span></span><br><span class="line">                request.setAttribute(<span class="string">"login_error"</span>,<span class="string">"用户名或密码错误"</span>);</span><br><span class="line">                <span class="comment">//转发到登陆页面</span></span><br><span class="line">                request.getRequestDispatcher(<span class="string">"/login.jsp"</span>).forward(request,response);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//验证码不一致</span></span><br><span class="line">            <span class="comment">//存储提示信息到request</span></span><br><span class="line">            request.setAttribute(<span class="string">"cc_error"</span>,<span class="string">"验证码错误"</span>);</span><br><span class="line">            <span class="comment">//转发到登陆页面</span></span><br><span class="line">            request.getRequestDispatcher(<span class="string">"/login.jsp"</span>).forward(request,response);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="CheckCodeServlet"><a href="#CheckCodeServlet" class="headerlink" title="CheckCodeServlet"></a>CheckCodeServlet</h3><p>生成随机验证码，并存入 session 。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/checkCodeServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CheckCodeServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> width = <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">int</span> height = <span class="number">50</span>;</span><br><span class="line">        <span class="comment">//创建一个对象，在内存中画图（验证码图片对象）</span></span><br><span class="line">        BufferedImage image = <span class="keyword">new</span> BufferedImage(width,height,BufferedImage.TYPE_3BYTE_BGR);</span><br><span class="line">        <span class="comment">//美化图片</span></span><br><span class="line">        <span class="comment">//填充背景色</span></span><br><span class="line">        Graphics g = image.getGraphics();<span class="comment">//画笔对象</span></span><br><span class="line">        g.setColor(Color.pink);<span class="comment">//设置画笔颜色</span></span><br><span class="line">        g.fillRect(<span class="number">0</span>,<span class="number">0</span>,width,height);</span><br><span class="line">        <span class="comment">//画边框</span></span><br><span class="line">        g.setColor(Color.BLUE);</span><br><span class="line">        g.drawRect(<span class="number">0</span>,<span class="number">0</span>,width -<span class="number">1</span>,height-<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        String str = <span class="string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"</span>;</span><br><span class="line">        <span class="comment">//生成随机脚标</span></span><br><span class="line">        Random ran = <span class="keyword">new</span> Random();</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="comment">//写验证码</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> index = ran.nextInt(str.length());</span><br><span class="line">            <span class="comment">//获取字符</span></span><br><span class="line">            <span class="keyword">char</span> ch = str.charAt(index);</span><br><span class="line">            sb.append(ch);</span><br><span class="line">            g.drawString(ch+<span class="string">""</span>,width/<span class="number">5</span>*i,height/<span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        String checkCode_session = sb.toString();</span><br><span class="line">        <span class="comment">//将验证码存入session</span></span><br><span class="line">        request.getSession().setAttribute(<span class="string">"checkCode_session"</span>,checkCode_session);</span><br><span class="line">        <span class="comment">//画干扰线</span></span><br><span class="line">        g.setColor(Color.green);</span><br><span class="line">        <span class="comment">//随机生成坐标点</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> x1 = ran.nextInt(width);</span><br><span class="line">            <span class="keyword">int</span> x2 = ran.nextInt(width);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> y1 = ran.nextInt(height);</span><br><span class="line">            <span class="keyword">int</span> y2 = ran.nextInt(height);</span><br><span class="line">            g.drawLine(x1,y1,x2,y2);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//键土拍你输出到页面展示</span></span><br><span class="line">        ImageIO.write(image,<span class="string">"jpg"</span>,response.getOutputStream());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request,response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>JAVAWeb</category>
      </categories>
      <tags>
        <tag>Session</tag>
      </tags>
  </entry>
  <entry>
    <title>Cookie获取客户端信息及响应</title>
    <url>/2020/03/16/Cookie%E8%8E%B7%E5%8F%96%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BF%A1%E6%81%AF%E5%8F%8A%E5%93%8D%E5%BA%94/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>在用户没有登录时，cookie常用来完成服务器对客户端的省份识别及一些设置的保存。</p>
<p>以下为一个简单的记录用户上次访问时间的功能。</p>
<a id="more"></a>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/cookieTest"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CookieTest</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//设置响应的消息体的数据格式以及编码</span></span><br><span class="line">        response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.获取所有cookie</span></span><br><span class="line">        Cookie[] cookies = request.getCookies();</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;<span class="comment">//没有cookie为lastTime</span></span><br><span class="line">        <span class="comment">//2.遍历cookie数组</span></span><br><span class="line">        <span class="keyword">if</span> (cookies != <span class="keyword">null</span> &amp;&amp; cookies.length &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span> (Cookie cookie : cookies) &#123;</span><br><span class="line">                <span class="comment">//3.获取cookie的名称</span></span><br><span class="line">                String name = cookie.getName();</span><br><span class="line">                <span class="comment">//4.判断名称是否是：lastTime</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="string">"lastTime"</span>.equals(name))&#123;</span><br><span class="line">                    <span class="comment">//有该cookie，不是第一次访问</span></span><br><span class="line">                    flag = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//响应数据</span></span><br><span class="line">                    <span class="comment">//获取cookie的value，时间</span></span><br><span class="line">                    String value = cookie.getValue();</span><br><span class="line">                    <span class="comment">//URL解码</span></span><br><span class="line">                    value = URLDecoder.decode(value,<span class="string">"utf-8"</span>);</span><br><span class="line">                    response.getWriter().write(<span class="string">"&lt;h1&gt;欢迎回来，您上次访问时间为："</span>+value+<span class="string">"&lt;h1&gt;"</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//设置cookie的value</span></span><br><span class="line">                    <span class="comment">//获取当前时间的字符串，重新设置cookie的值，重新发送cookie</span></span><br><span class="line">                    Date date = <span class="keyword">new</span> Date();</span><br><span class="line">                    SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy年MM月dd日HH:mm:ss"</span>);</span><br><span class="line">                    String str_date = sdf.format(date);</span><br><span class="line">                    <span class="comment">//URL编码</span></span><br><span class="line">                    str_date = URLEncoder.encode(str_date, <span class="string">"utf-8"</span>);</span><br><span class="line">                    cookie.setValue(str_date);</span><br><span class="line">                    <span class="comment">//设置cookie的存活时间</span></span><br><span class="line">                    cookie.setMaxAge(<span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">30</span>);<span class="comment">//一个月</span></span><br><span class="line">                    response.addCookie(cookie);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (cookies == <span class="keyword">null</span> || cookies.length == <span class="number">0</span> || flag == <span class="keyword">false</span>)&#123;</span><br><span class="line">            <span class="comment">//没有，第一次访问</span></span><br><span class="line">            <span class="comment">//设置cookie的value</span></span><br><span class="line">            <span class="comment">//获取当前时间的字符串，重新设置cookie的值，重新发送cookie</span></span><br><span class="line">            Date date = <span class="keyword">new</span> Date();</span><br><span class="line">            SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy年MM月dd日 HH:mm:ss"</span>);</span><br><span class="line">            String str_date = sdf.format(date);</span><br><span class="line">            <span class="comment">//URL编码</span></span><br><span class="line">            str_date = URLEncoder.encode(str_date, <span class="string">"utf-8"</span>);</span><br><span class="line">            Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">"lastTime"</span>,str_date);</span><br><span class="line">            <span class="comment">//设置cookie的存活时间</span></span><br><span class="line">            cookie.setMaxAge(<span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">30</span>);<span class="comment">//一个月</span></span><br><span class="line">            response.addCookie(cookie);</span><br><span class="line"></span><br><span class="line">            response.getWriter().write(<span class="string">"&lt;h1&gt;您好，欢迎首次访问&lt;h1&gt;"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>JAVAWeb</category>
      </categories>
      <tags>
        <tag>Cookie</tag>
      </tags>
  </entry>
  <entry>
    <title>JAVAWeb文件下载功能</title>
    <url>/2020/03/14/JAVAWeb%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><ol>
<li><p>编写html页面，编辑超链接 href 属性，指向Servlet并传递要下载的文件名及格式</p>
</li>
<li><p>Servlet：*获取文件名称</p>
<p>​                *使用字节输入流加载文件进内存</p>
<p>​                *指定 response 的响应头：content-disposition:attachmement;filename=xxx</p>
<p>​                *将数据写出到 response 输出流</p>
</li>
</ol>
<h3 id="html-a标签格式"><a href="#html-a标签格式" class="headerlink" title="html a标签格式"></a>html a标签格式</h3><p> href=”/day15/downloadServlet?filename=鬼刀.png”</p>
<a id="more"></a>

<h3 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/downloadServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DownloadServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获取请求参数,文件名称</span></span><br><span class="line">        String filename = request.getParameter(<span class="string">"filename"</span>);</span><br><span class="line">        <span class="comment">//使用字节输入流加载文件进内存</span></span><br><span class="line">        <span class="comment">//找到文件的服务器路径</span></span><br><span class="line">        ServletContext servletContext = <span class="keyword">this</span>.getServletContext();</span><br><span class="line">        String realPath = servletContext.getRealPath(<span class="string">"/img/"</span> + filename);</span><br><span class="line">        <span class="comment">//用字节流关联</span></span><br><span class="line">        FileInputStream fis = <span class="keyword">new</span> FileInputStream(realPath);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置response的响应头</span></span><br><span class="line">        <span class="comment">//设置响应头类型：content-type</span></span><br><span class="line">        String mimeType = servletContext.getMimeType(filename);</span><br><span class="line">        response.setHeader(<span class="string">"content-type"</span>,mimeType);</span><br><span class="line">        <span class="comment">//设置响应头打开方式：content-disposition</span></span><br><span class="line">        <span class="comment">//解决中文文件名问题</span></span><br><span class="line">        <span class="comment">//获取user-agent请求头</span></span><br><span class="line">        String agent = request.getHeader(<span class="string">"user-agent"</span>);</span><br><span class="line">        <span class="comment">//使用工具类方法编码文件名即可</span></span><br><span class="line">        String fileName = DownLoadUtils.getFileName(agent, filename);</span><br><span class="line">        response.setHeader(<span class="string">"content-disposition"</span>,<span class="string">"attachment;filename="</span>+fileName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将输入流的数据写出到输出流中</span></span><br><span class="line">        ServletOutputStream sos = response.getOutputStream();</span><br><span class="line">        <span class="keyword">byte</span>[] buff = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span> * <span class="number">8</span>];</span><br><span class="line">        <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> ((len = fis.read(buff))!=-<span class="number">1</span>)&#123;</span><br><span class="line">            sos.write(buff,<span class="number">0</span>,len);</span><br><span class="line">        &#125;</span><br><span class="line">        fis.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request,response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>注：解决中文文件名下载不能正常显示问题，需要用到 DownLoadUtils 类获取浏览器编码方式，百度搜索下载即可。</p>
]]></content>
      <categories>
        <category>JAVAWeb</category>
      </categories>
      <tags>
        <tag>文件下载</tag>
      </tags>
  </entry>
  <entry>
    <title>简单的验证码实现逻辑及点击切换</title>
    <url>/2020/03/13/%E7%AE%80%E5%8D%95%E7%9A%84%E9%AA%8C%E8%AF%81%E7%A0%81%E5%AE%9E%E7%8E%B0%E9%80%BB%E8%BE%91%E5%8F%8A%E7%82%B9%E5%87%BB%E5%88%87%E6%8D%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>为了防止恶意表单注册，注册界面都会加上验证码功能。服务器会在内存生成验证码图片，并显示随机内容到网页，并且要防止智能识别。具体代码如下：</p>
<a id="more"></a>

<h3 id="验证码图片生成"><a href="#验证码图片生成" class="headerlink" title="验证码图片生成"></a>验证码图片生成</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/checkCodeServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CheckCodeServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> width = <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">int</span> height = <span class="number">50</span>;</span><br><span class="line">        <span class="comment">//创建一个对象，在内存中画图（验证码图片对象）</span></span><br><span class="line">        BufferedImage image = <span class="keyword">new</span> BufferedImage(width,height,BufferedImage.TYPE_3BYTE_BGR);</span><br><span class="line">        <span class="comment">//美化图片</span></span><br><span class="line">        <span class="comment">//填充背景色</span></span><br><span class="line">        Graphics g = image.getGraphics();<span class="comment">//画笔对象</span></span><br><span class="line">        g.setColor(Color.pink);<span class="comment">//设置画笔颜色</span></span><br><span class="line">        g.fillRect(<span class="number">0</span>,<span class="number">0</span>,width,height);</span><br><span class="line">        <span class="comment">//画边框</span></span><br><span class="line">        g.setColor(Color.BLUE);</span><br><span class="line">        g.drawRect(<span class="number">0</span>,<span class="number">0</span>,width -<span class="number">1</span>,height-<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        String str = <span class="string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"</span>;</span><br><span class="line">        <span class="comment">//生成随机脚标</span></span><br><span class="line">        Random ran = <span class="keyword">new</span> Random();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//写验证码</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> index = ran.nextInt(str.length());</span><br><span class="line">            <span class="comment">//获取字符</span></span><br><span class="line">            <span class="keyword">char</span> ch = str.charAt(index);</span><br><span class="line">            g.drawString(ch+<span class="string">""</span>,width/<span class="number">5</span>*i,height/<span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//画干扰线</span></span><br><span class="line">        g.setColor(Color.green);</span><br><span class="line">        <span class="comment">//随机生成坐标点</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> x1 = ran.nextInt(width);</span><br><span class="line">            <span class="keyword">int</span> x2 = ran.nextInt(width);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> y1 = ran.nextInt(height);</span><br><span class="line">            <span class="keyword">int</span> y2 = ran.nextInt(height);</span><br><span class="line">            g.drawLine(x1,y1,x2,y2);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//键土拍你输出到页面展示</span></span><br><span class="line">        ImageIO.write(image,<span class="string">"jpg"</span>,response.getOutputStream());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request,response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="图片点击切换"><a href="#图片点击切换" class="headerlink" title="图片点击切换"></a>图片点击切换</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">"checkCode"</span> <span class="attr">src</span>=<span class="string">"/day15/checkCodeServlet"</span> <span class="attr">onclick</span>=<span class="string">"this.src='/day15/checkCodeServlet?' + new Date().getTime();"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">"change"</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>看不清换一张<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>服务器会有图片缓存，路径不变的画服务器不会发送新数据到客户端，验证码就不能刷新，可以加随机数或时间戳到路径后。</p>
]]></content>
      <categories>
        <category>JAVAWeb</category>
      </categories>
      <tags>
        <tag>验证码</tag>
      </tags>
  </entry>
  <entry>
    <title>Request请求消息数据的解析</title>
    <url>/2020/03/10/Request%E8%AF%B7%E6%B1%82%E6%B6%88%E6%81%AF%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A7%A3%E6%9E%90/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="数据格式"><a href="#数据格式" class="headerlink" title="数据格式"></a>数据格式</h3><p>请求消息数据格式为：<br>    1.请求行<br>    2.请求头<br>    3.请求空行<br>    4.请求体<br>示例：<br>GET /index.html  HTTP/1.1<br>Host: localhost<br>User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.106 Safari/537.36<br>Accept:  text/html,image/,/*;q=0.8<br>Referer: <a href="http://localhost/day14/index.html" target="_blank" rel="noopener">http://localhost/day14/index.html</a><br>Accept-Encoding: gzip, deflate, sdch<br>Accept-Language: zh-CN,zh;q=0.8</p>
<a id="more"></a>

<h3 id="获取请求行数据"><a href="#获取请求行数据" class="headerlink" title="获取请求行数据"></a>获取请求行数据</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">//获取请求方式:Get</span></span><br><span class="line">    String method = request.getMethod();</span><br><span class="line">    System.out.println(method);</span><br><span class="line">    <span class="comment">//获取虚拟目录:/day14</span></span><br><span class="line">    String contextPath = request.getContextPath();</span><br><span class="line">    System.out.println(contextPath);</span><br><span class="line">    <span class="comment">//获取Servlet路径:/demo1</span></span><br><span class="line">    String servletPath = request.getServletPath();</span><br><span class="line">    System.out.println(servletPath);</span><br><span class="line">    <span class="comment">//获取get方式请求参数:name = aaa</span></span><br><span class="line">    String queryString = request.getQueryString();</span><br><span class="line">    System.out.println(queryString);</span><br><span class="line">    <span class="comment">//获取请求URI:/day14/demo1</span></span><br><span class="line">    String requestURI = request.getRequestURI();</span><br><span class="line">    StringBuffer requestURL = request.getRequestURL();</span><br><span class="line">    System.out.println(requestURI);</span><br><span class="line">    System.out.println(requestURL);</span><br><span class="line">    <span class="comment">//获取协议及版本:HTTP/1.1</span></span><br><span class="line">    String protocol = request.getProtocol();</span><br><span class="line">    System.out.println(protocol);</span><br><span class="line">    <span class="comment">//获取客户机的IP地址</span></span><br><span class="line">    String remoteAddr = request.getRemoteAddr();</span><br><span class="line">    System.out.println(remoteAddr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="获取请求头数据"><a href="#获取请求头数据" class="headerlink" title="获取请求头数据"></a>获取请求头数据</h3><p>获取请求所有头数据</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">//获取请求头数据</span></span><br><span class="line">    <span class="comment">//获取所有请求头名称</span></span><br><span class="line">    Enumeration&lt;String&gt; headerNames = request.getHeaderNames();</span><br><span class="line">    <span class="comment">//遍历</span></span><br><span class="line">    <span class="keyword">while</span>(headerNames.hasMoreElements())&#123;</span><br><span class="line">        String name = headerNames.nextElement();</span><br><span class="line">        <span class="comment">//根据名称获取请求头的值</span></span><br><span class="line">        String value = request.getHeader(name);</span><br><span class="line">        System.out.println(name+<span class="string">"---"</span>+value);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>获取请求头数据 user-agent，实现浏览器的分类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">//获取请求头数据</span></span><br><span class="line">    String agent = request.getHeader(<span class="string">"user-agent"</span>);</span><br><span class="line">    <span class="comment">//判断agent的浏览器版本</span></span><br><span class="line">    <span class="keyword">if</span>(agent.contains(<span class="string">"Chrome"</span>))&#123;</span><br><span class="line">        <span class="comment">//谷歌</span></span><br><span class="line">        System.out.println(<span class="string">"谷歌"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(agent.contains(<span class="string">"Firofox"</span>))&#123;</span><br><span class="line">        <span class="comment">//火狐</span></span><br><span class="line">        System.out.println(<span class="string">"火狐"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Edge"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>获取请求头数据 referer 实现防盗链</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">//获取请求头数据:referer</span></span><br><span class="line">    String referer = request.getHeader(<span class="string">"referer"</span>);</span><br><span class="line">    System.out.println(referer);<span class="comment">//http://localhost/day14/login.html</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//防盗链</span></span><br><span class="line">    <span class="keyword">if</span> (referer != <span class="keyword">null</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(referer.contains(<span class="string">"/day14"</span>))&#123;</span><br><span class="line">            <span class="comment">//正常访问</span></span><br><span class="line">            System.out.println(<span class="string">"访问来源正确"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"访问来源错误"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="获取请求体"><a href="#获取请求体" class="headerlink" title="获取请求体"></a>获取请求体</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">//获取请求消息体</span></span><br><span class="line">    <span class="comment">//获取字符流</span></span><br><span class="line">    BufferedReader br = request.getReader();</span><br><span class="line">    <span class="comment">//获取字节流</span></span><br><span class="line">    ServletInputStream inputStream = request.getInputStream();</span><br><span class="line">    <span class="comment">//读取数据</span></span><br><span class="line">    String line = <span class="keyword">null</span>; </span><br><span class="line">    <span class="keyword">while</span> ((line = br.readLine()) != <span class="keyword">null</span>)&#123;</span><br><span class="line">        System.out.println(line);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//根据参数名获取参数值</span></span><br><span class="line">    String username = getInitParameter(<span class="string">"username"</span>);</span><br><span class="line">    String password = getInitParameter(<span class="string">"password"</span>);</span><br><span class="line">    System.out.println(username);</span><br><span class="line">    System.out.println(password);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>JAVAWeb</category>
      </categories>
      <tags>
        <tag>Request解析</tag>
      </tags>
  </entry>
  <entry>
    <title>Servlet定义及方法</title>
    <url>/2020/03/09/Servlet%E5%AE%9A%E4%B9%89%E5%8F%8A%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>创建 JavaEE 项目后，定义一个类，实现 Servlet 接口方法为：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletDemo1</span> <span class="keyword">implements</span> <span class="title">Servlet</span></span></span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>Servlet 的生命周期方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletDemo2</span> <span class="keyword">implements</span> <span class="title">Servlet</span> </span>&#123;</span><br><span class="line">    <span class="comment">//初始化方法</span></span><br><span class="line">    <span class="comment">//在Servlet被创建时执行。只会执行一次</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig servletConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"init......."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取ServletConfig对象</span></span><br><span class="line">    <span class="comment">//Servlet的配置对象</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServletConfig <span class="title">getServletConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//提供服务方法</span></span><br><span class="line">    <span class="comment">//每一次Servlet被访问时，执行。执行多次</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"service......."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取Servlet的一些信息，版本、作者</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getServletInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//销毁方法</span></span><br><span class="line">    <span class="comment">//在服务器正常关闭时执行。执行一次</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"destroy............"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Servlet 的实现需要在 web.xml 中配置路径：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>demo1<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>web.servlet.ServletDemo1<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>demo1<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/demo1<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在 Servlet 3.0 后，可以不用配置 web.xml 文件，配置 Servlet 方法为使用 @WebServlet 注解：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/demo"</span>)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>JAVAWeb</category>
      </categories>
      <tags>
        <tag>Servlet</tag>
      </tags>
  </entry>
  <entry>
    <title>Bootstrap框架的导入及使用</title>
    <url>/2020/03/07/Bootstrap%E6%A1%86%E6%9E%B6%E7%9A%84%E5%AF%BC%E5%85%A5%E5%8F%8A%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="下载及导入"><a href="#下载及导入" class="headerlink" title="下载及导入"></a>下载及导入</h3><p><a href="https://v3.bootcss.com/" target="_blank" rel="noopener">Bootstrap下载</a>，下载后解压将 css、fonts、js 文件夹复制到 static web  项目下，导入便完成；同时需要导入jquery  jar包，下载后放入 js 文件夹即可；</p>
<a id="more"></a>

<h3 id="页面引入资源文件"><a href="#页面引入资源文件" class="headerlink" title="页面引入资源文件"></a>页面引入资源文件</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPEhtml&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">htmllang="zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">metacharset="utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">metahttp-equiv="X-UA-Compatible"content="IE=edge"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">metaname="viewport"content="width=device-width,initial-scale=1"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>BootstrapHelloWorld<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--Bootstrap--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">linkhref="css</span>/<span class="attr">bootstrap.min.css</span>"<span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--jQuery(Bootstrap的所有JavaScript插件都依赖jQuery，所以必须放在前边)--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scriptsrc="js</span>/<span class="attr">jquery-3.2.1.min.js</span>"&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--加载Bootstrap的所有JavaScript插件。你也可以根据需要只加载单个插件。--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scriptsrc="js</span>/<span class="attr">bootstrap.min.js</span>"&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>你好，世界！<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="编写页面"><a href="#编写页面" class="headerlink" title="编写页面"></a>编写页面</h3><p>Bootstrap定义了很多 css 样式和 js 插件，可以使用这些样式和插件得到丰富的页面效果。<br>响应式布局使得同一套页面可以兼容不同分辨率的设备，依赖于栅格系统。<br>具体样式和插件的使用可参考官网文档。</p>
]]></content>
      <categories>
        <category>JAVAWeb</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Druid数据库连接池工具类的编写</title>
    <url>/2020/03/06/Druid%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0%E5%B7%A5%E5%85%B7%E7%B1%BB%E7%9A%84%E7%BC%96%E5%86%99/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="封装工具类"><a href="#封装工具类" class="headerlink" title="封装工具类"></a>封装工具类</h3><p>为了减少代码工作量，将JDBC注册、获取连接、释放连接封装为一个工具类；<br>具体代码如下：</p>
<a id="more"></a>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCUtils</span> </span>&#123;</span><br><span class="line">    <span class="comment">//定义成员变量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> DataSource ds;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//加载配置文件</span></span><br><span class="line">            Properties pro = <span class="keyword">new</span> Properties();</span><br><span class="line">            pro.load(JDBCUtils.class.getClassLoader().getResourceAsStream("druid.properties"));</span><br><span class="line">            <span class="comment">//获取DataSource</span></span><br><span class="line">            ds = DruidDataSourceFactory.createDataSource(pro);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取连接</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ds.getConnection();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//释放资源</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Statement stmt,Connection conn)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(stmt != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                stmt.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                conn.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(ResultSet rs, Statement stmt, Connection conn)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(rs != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                rs.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(stmt != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                stmt.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                conn.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取连接池方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">static</span> DataSource <span class="title">getDataSource</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ds;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="调用工具类"><a href="#调用工具类" class="headerlink" title="调用工具类"></a>调用工具类</h3><p>调用工具类具体实例如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DruidDemo2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement pstmt = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//获取连接</span></span><br><span class="line">            conn = JDBCUtils.getConnection();</span><br><span class="line">            <span class="comment">//定义sql</span></span><br><span class="line">            String sql = <span class="string">"insert into account values(null,?,?)"</span>;</span><br><span class="line">            <span class="comment">//获取pstmt对象</span></span><br><span class="line">            pstmt = conn.prepareStatement(sql);</span><br><span class="line">            <span class="comment">//给？赋值</span></span><br><span class="line">            pstmt.setString(<span class="number">1</span>,<span class="string">"王五"</span>);</span><br><span class="line">            pstmt.setDouble(<span class="number">2</span>,<span class="number">3000</span>);</span><br><span class="line">            <span class="comment">//执行sql</span></span><br><span class="line">            <span class="keyword">int</span> count = pstmt.executeUpdate();</span><br><span class="line">            System.out.println(count);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">//释放资源</span></span><br><span class="line">            JDBCUtils.close(pstmt,conn);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>JAVAWeb</category>
      </categories>
      <tags>
        <tag>JDBC</tag>
        <tag>Druid</tag>
      </tags>
  </entry>
  <entry>
    <title>JDBC-sql注入的安全性问题</title>
    <url>/2020/03/06/JDBC-sql%E6%B3%A8%E5%85%A5%E7%9A%84%E5%AE%89%E5%85%A8%E6%80%A7%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="sql注入的安全性问题"><a href="#sql注入的安全性问题" class="headerlink" title="sql注入的安全性问题"></a>sql注入的安全性问题</h3><p>在使用 Statement 类执行 sql 对象时，拼接的 sql 语句可能会有特殊关键子参与字符串拼接，造成数据库信息泄露等问题。</p>
<p>使用 Statement 类的 sql 语句格式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String sql = <span class="string">"select *from admin where name = '"</span>+username+<span class="string">"' and password = '"</span>+password+<span class="string">"'"</span>;</span><br></pre></td></tr></table></figure>

<p>当遇到 sql 注入语句：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">请输入用户名:</span><br><span class="line">abcdefg</span><br><span class="line">请输入密码：</span><br><span class="line">s<span class="string">' or '</span>a<span class="string">' = '</span>a</span><br><span class="line">select * from user where username = <span class="string">'abcdefg'</span> and password = <span class="string">'s'</span> or <span class="string">'a'</span> = <span class="string">'a'</span></span><br><span class="line">登录成功！</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>可以看到 sql 语句不管用户名和密码是什么，该语句都会正确执行，登录成功并获得所有用户信息！</p>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>为了避免恶意的 sql 注入，就要用到 PreparedStatement 类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String sql = <span class="string">"select *from admin where aname = ? and apassword = ?"</span>;</span><br></pre></td></tr></table></figure>

<p>执行语句为：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">pstmt = conn.prepareStatement(sql);</span><br></pre></td></tr></table></figure>

<p>赋值语句为：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">pstmt.setString(<span class="number">1</span>,username);</span><br><span class="line">pstmt.setString(<span class="number">2</span>,password);</span><br></pre></td></tr></table></figure>

<p>执行结果为：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">请输入用户名:</span><br><span class="line">abcdefg</span><br><span class="line">请输入密码：</span><br><span class="line">s<span class="string">' or '</span>a<span class="string">' = '</span>a</span><br><span class="line">登录失败，用户名或密码错误！</span><br></pre></td></tr></table></figure>

<p>成功避免了 sql 注入。</p>
]]></content>
      <categories>
        <category>JAVAWeb</category>
      </categories>
      <tags>
        <tag>JDBC</tag>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title>JDBC工具类的编写与调用</title>
    <url>/2020/03/06/JDBC%E5%B7%A5%E5%85%B7%E7%B1%BB%E7%9A%84%E7%BC%96%E5%86%99%E4%B8%8E%E8%B0%83%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="封装工具类"><a href="#封装工具类" class="headerlink" title="封装工具类"></a>封装工具类</h3><p>为了减少代码工作量，将JDBC注册、获取连接、释放连接封装为一个工具类；<br>具体代码如下：</p>
<a id="more"></a>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCUtils</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> String url;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> String user;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> String password;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> String driver;</span><br><span class="line">        <span class="keyword">static</span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Properties pro = <span class="keyword">new</span> Properties();</span><br><span class="line">                <span class="comment">//获取src路径下的文件的方式</span></span><br><span class="line">                ClassLoader classLoader = JDBCUtils<span class="class">.<span class="keyword">class</span>.<span class="title">getClassLoader</span>()</span>;</span><br><span class="line">                URL res = classLoader.getResource(<span class="string">"jdbc.properties"</span>);</span><br><span class="line">                String path = res.getPath();</span><br><span class="line">                System.out.println(path);</span><br><span class="line">                <span class="comment">//加载文件</span></span><br><span class="line">                pro.load(<span class="keyword">new</span> FileReader(path));</span><br><span class="line"></span><br><span class="line">                url = pro.getProperty(<span class="string">"url"</span>);</span><br><span class="line">                user = pro.getProperty(<span class="string">"user"</span>);</span><br><span class="line">                password = pro.getProperty(<span class="string">"password"</span>);</span><br><span class="line">                driver = pro.getProperty(<span class="string">"driver"</span>);</span><br><span class="line">                Class.forName(driver);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 获取连接</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> DriverManager.getConnection(url,user,password);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//释放连接</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Statement stmt,Connection conn)</span></span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(stmt != <span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    stmt.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">if</span>(conn != <span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    conn.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//重载close()</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(ResultSet rs, Statement stmt, Connection conn)</span></span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(rs != <span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    rs.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(stmt != <span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    stmt.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(conn != <span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    conn.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>src 下 jdbc.properties 内容如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">url=jdbc:mysql:<span class="comment">///xxx?serverTimezone=UTC </span></span><br><span class="line">user=root</span><br><span class="line">password=root</span><br><span class="line">driver=com.mysql.cj.jdbc.Driver</span><br></pre></td></tr></table></figure>

<p>如果你数据库连接默认为 locahost:3306 则可以简写为///+数据库名称，?serverTimezone=UTC  是为了避免时区不同问题；</p>
<h3 id="调用工具类"><a href="#调用工具类" class="headerlink" title="调用工具类"></a>调用工具类</h3><p>调用工具类具体实例如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCdemo08</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        List&lt;Emp&gt; list = <span class="keyword">new</span> JDBCdemo08().findAll();</span><br><span class="line">        System.out.println(list);</span><br><span class="line">        System.out.println(list.size());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Emp&gt; <span class="title">findAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        Statement stmt = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">        List&lt;Emp&gt; list = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//获取连接</span></span><br><span class="line">            conn = JDBCUtils.getConnection();</span><br><span class="line">            <span class="comment">//执行sql语句</span></span><br><span class="line">            String sql = <span class="string">"select *from admin"</span>;</span><br><span class="line">            stmt = conn.createStatement();</span><br><span class="line">            <span class="comment">//获取返回列表</span></span><br><span class="line">            rs = stmt.executeQuery(sql);</span><br><span class="line">            Emp emp = <span class="keyword">null</span>;</span><br><span class="line">            list = <span class="keyword">new</span> ArrayList&lt;Emp&gt;();</span><br><span class="line">            <span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">                <span class="keyword">int</span> id = rs.getInt(<span class="string">"aid"</span>);</span><br><span class="line">                String name = rs.getString(<span class="string">"aname"</span>);</span><br><span class="line">                <span class="keyword">int</span> password = rs.getInt(<span class="string">"apassword"</span>);</span><br><span class="line">                String sex = rs.getString(<span class="string">"asex"</span>);</span><br><span class="line">                <span class="keyword">int</span> age = rs.getInt(<span class="string">"aage"</span>);</span><br><span class="line">                emp = <span class="keyword">new</span> Emp();</span><br><span class="line">                emp.setId(id);</span><br><span class="line">                emp.setName(name);</span><br><span class="line">                emp.setSex(sex);</span><br><span class="line">                emp.setPassword(password);</span><br><span class="line">                list.add(emp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            JDBCUtils.close(rs,stmt,conn);  <span class="comment">//释放资源</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>JAVAWeb</category>
      </categories>
      <tags>
        <tag>JDBC</tag>
      </tags>
  </entry>
  <entry>
    <title>Python爬虫解析多级嵌套json</title>
    <url>/2020/03/03/%E8%82%BA%E7%82%8E%E6%95%B0%E6%8D%AE%E7%88%AC%E5%8F%96%E5%B9%B6%E8%A7%A3%E6%9E%90/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="Python爬虫解析多级嵌套json"><a href="#Python爬虫解析多级嵌套json" class="headerlink" title="Python爬虫解析多级嵌套json"></a>Python爬虫解析多级嵌套json</h3><p>最近刚接触Python爬虫，正好最近肺炎在全国蔓延，所以准备从网站爬取肺炎实时数据，并解析自己想要的数据。获取json数据网址为  <a href="https://m.look.360.cn/events/feiyan" target="_blank" rel="noopener">https://m.look.360.cn/events/feiyan</a></p>
<p>爬取网址：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    url=<span class="string">'https://m.look.360.cn/events/feiyan'</span></span><br><span class="line">    headers = &#123;<span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; WOW64) 		    AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36 QIHU 360EE'</span>&#125;</span><br><span class="line">    parse_page(url)</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>解析并保存json格式文件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">state &#x3D; json.loads(response.content)</span><br><span class="line">with open(&quot;feiyan.json&quot;, &quot;w&quot;,encoding&#x3D;&#39;utf-8&#39;) as f:</span><br><span class="line">	f.write(json.dumps(state,indent&#x3D;2,ensure_ascii&#x3D;False))</span><br><span class="line">    print(&quot;保存成功&quot;)</span><br></pre></td></tr></table></figure>

<p>获取json文件后发现为嵌套格式，具体格式大家可以打开上方网址查看：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line"> &quot;data&quot;:[</span><br><span class="line"> 		&#123;</span><br><span class="line"> 		 &quot;data&quot;:&#123;省份&#125;</span><br><span class="line">         &quot;citys&quot;:[</span><br><span class="line">         		  &#123;城市&#125;&#123;&#125;.....</span><br><span class="line">         		 ]		 </span><br><span class="line"> 		&#125;</span><br><span class="line"> 		&#123;</span><br><span class="line"> 		 &quot;data&quot;:&#123;省份&#125;</span><br><span class="line">         &quot;citys&quot;:[</span><br><span class="line">         		  &#123;城市&#125;&#123;&#125;.....</span><br><span class="line">         		 ]		 </span><br><span class="line"> 		&#125;</span><br><span class="line"> &quot;country&quot;:[</span><br><span class="line"> 			&#123;其他国家&#125;</span><br><span class="line"> 		   ]	</span><br><span class="line"> 		]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<img src="/" class="lazyload" data-src="\images\feiyan1.png"  alt="Alt text" />

<h4 id="解析数据"><a href="#解析数据" class="headerlink" title="解析数据"></a>解析数据</h4><p>因为我只想获取各个城市的名称、感染人数、治愈人数和死亡人数，所以需要嵌套循环来获取并逐个输出。代码如下：</p>
<p>省级数据获取：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">provincename = state[<span class="string">'data'</span>][i][<span class="string">'data'</span>][<span class="string">'provinceName'</span>] </span><br><span class="line">confirmedCount = state[<span class="string">'data'</span>][i][<span class="string">'data'</span>][<span class="string">'confirmedCount'</span>]</span><br><span class="line">curedCount = state[<span class="string">'data'</span>][i][<span class="string">'data'</span>][<span class="string">'curedCount'</span>] </span><br><span class="line">deadCount = state[<span class="string">'data'</span>][i][<span class="string">'data'</span>][<span class="string">'deadCount'</span>]</span><br></pre></td></tr></table></figure>

<p>城市数据获取：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cityName = state[<span class="string">'data'</span>][i][<span class="string">'cities'</span>][j][<span class="string">'cityName'</span>]</span><br><span class="line">diagnosed = state[<span class="string">'data'</span>][i][<span class="string">'cities'</span>][j][<span class="string">'diagnosed'</span>]</span><br><span class="line">cured = state[<span class="string">'data'</span>][i][<span class="string">'cities'</span>][j][<span class="string">'cured'</span>]</span><br><span class="line">died = state[<span class="string">'data'</span>][i][<span class="string">'cities'</span>][j][<span class="string">'died'</span>]</span><br></pre></td></tr></table></figure>

<p>国外城市数据获取：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">countryname = state[<span class="string">'country'</span>][c][<span class="string">'provinceName'</span>]</span><br><span class="line">diagnosed = state[<span class="string">'country'</span>][c][<span class="string">'diagnosed'</span>]</span><br><span class="line">cured = state[<span class="string">'country'</span>][c][<span class="string">'cured'</span>]</span><br><span class="line">died = state[<span class="string">'country'</span>][c][<span class="string">'died'</span>]</span><br></pre></td></tr></table></figure>

<p>以上就是嵌套json解析格式。</p>
<p>输出效果：</p>
<img src="/" class="lazyload" data-src="\images\feiyan2.png"  alt="Alt text" />



<p><strong>源码地址：</strong><a href="https://github.com/GJINXIN/python-web-scraping/blob/master/肺炎数据解析并存储.py" target="_blank" rel="noopener">github</a></p>
]]></content>
      <categories>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>爬虫</tag>
        <tag>json</tag>
      </tags>
  </entry>
  <entry>
    <title>About me</title>
    <url>/2020/03/02/about/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>|  A coder，live in Hohhot，China</p>
<p>姓名：郭金鑫</p>
<p>现居：呼和浩特</p>
<p>GitHub：<a href="https://github.com/GJINXIN/" target="_blank" rel="noopener">GJINXIN</a></p>
<p>QQ：1782561167</p>
<p>微信：gjx1782561167</p>
<a id="more"></a>

<img src="/" class="lazyload" data-src="https://i.loli.net/2020/03/06/bPvysxmAFniJgzW.png"  alt="Alt text" style="zoom:60%;" />

]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>我的第一篇博客--洁癖Man</title>
    <url>/2020/03/02/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2--%E6%B4%81%E7%99%96Man/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>​      以前在校期间用过博客园 <a href="https://www.cnblogs.com/GJIN/" target="_blank" rel="noopener">洁癖Man</a>，但因为没有养成良好的学习记录习惯，发表的博客不是太多，写的项目遇到的问题解决后都没有记录，而且项目还丢失了一部分。所以在github上搭建一个可以自定义，记录自己平常进步、项目与生活的一个个人博客，在记录自己的进步的同时，希望可以给他人带来一些帮助。</p>
<h2 id="目前已掌握的技能"><a href="#目前已掌握的技能" class="headerlink" title="目前已掌握的技能"></a>目前已掌握的技能</h2><h3 id="语言类"><a href="#语言类" class="headerlink" title="语言类"></a>语言类</h3><p>C、C++、Java、Python、HTML、CSS、JS；</p>
<a id="more"></a>

<h3 id="Java-Web"><a href="#Java-Web" class="headerlink" title="Java Web"></a>Java Web</h3><p>JSP+Servlet+JDBC、网页开发、三层架构、JQUery、BootStrap、Filter、Listener、druid、SpringBoot；</p>
<h3 id="移动端"><a href="#移动端" class="headerlink" title="移动端"></a>移动端</h3><p>H5开发、Android开发、安卓混合开发、okhttp；</p>
<h3 id="常用工具类"><a href="#常用工具类" class="headerlink" title="常用工具类"></a>常用工具类</h3><p>IDEA、Eclipse、Android Studio、Wex5、Vscode、Navicat；</p>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>爬虫；</p>
<h2 id="已做项目"><a href="#已做项目" class="headerlink" title="已做项目"></a>已做项目</h2><h3 id="掌上医院系统-计算所试验室"><a href="#掌上医院系统-计算所试验室" class="headerlink" title="掌上医院系统 (计算所试验室)"></a>掌上医院系统 (计算所试验室)</h3><p>掌上医院系统是一个改变传统挂号和优化传统医疗程序的系统，可在网上进行挂号和健康咨询等，为患者合理安排时间，且可以查看医院简介和医生介绍，让患者深层次了解医院，是一个真正意义上的面相门诊全流程的移动医联平台，完全贴合医院就诊流程而设计，并且在提高患者满意度的前提下，也提高了医生的服务水平，从问诊出发，以消息通知为核心，覆盖门诊的就医流程，为问诊人提供便捷的门诊服务。</p>
<h3 id="海外留学生信息交流平台"><a href="#海外留学生信息交流平台" class="headerlink" title="海外留学生信息交流平台"></a>海外留学生信息交流平台</h3><p>为海外留学生打造的一个生活、学习交流平台，包括房屋车辆租赁、物品交易、学习交流、活动发布等功能的平台，包括移动端。</p>
<h3 id="公司工资管理系统"><a href="#公司工资管理系统" class="headerlink" title="公司工资管理系统"></a>公司工资管理系统</h3><h3 id="学生信息管理系统"><a href="#学生信息管理系统" class="headerlink" title="学生信息管理系统"></a>学生信息管理系统</h3><p> 后面会一直补充该篇博客，更新自己的技能掌握情况。</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
</search>
